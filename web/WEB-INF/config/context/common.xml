<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns:context="http://www.springframework.org/schema/context"
		 xmlns:tx="http://www.springframework.org/schema/tx" 
		 xmlns:aop="http://www.springframework.org/schema/aop"
		 xsi:schemaLocation="http://www.springframework.org/schema/beans  
		 http://www.springframework.org/schema/beans/spring-beans.xsd  
		 http://www.springframework.org/schema/tx  
		 http://www.springframework.org/schema/tx/spring-tx.xsd  
		 http://www.springframework.org/schema/aop  
		 http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- --> 
    <bean id="dataSource_em" class="com.ghayoun.ezjobs.common.util.CryptoDataSource" destroy-method="close">
        <property name="driverClassName" 	value="${jdbc_em.driverClassName.${DB_GUBUN}}"/>
        <property name="url" 				value="${jdbc_em.url.${DB_GUBUN}.${SERVER_GB}}"/>
        <property name="username" 			value="${jdbc_em.username}"/>
        <property name="password" 			value="${jdbc_em.password}"/>

    </bean>
    
    <!-- 
    <bean id="dataSource_em" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" 	value="java:comp/evn/jdbc/ezds"/>                   
    </bean>
    -->
    
    
    <bean id="sqlMapClient_em" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
    	<property name="dataSource" ref="dataSource_em" />
    	<property name="configLocation">
    		<value>/WEB-INF/classes/sqlmap/${DB_GUBUN}/sqlMapConfig_em.xml</value>
        </property>
    </bean>
    
	<bean id="dataSource_ctm" class="com.ghayoun.ezjobs.common.util.CryptoDataSource" destroy-method="close">
        <property name="driverClassName" 	value="${jdbc_ctm.driverClassName.${DB_GUBUN}}"/>
        <property name="url" 				value="${jdbc_ctm.url.${DB_GUBUN}.${SERVER_GB}}"/>
        <property name="username" 			value="${jdbc_ctm.username}"/>
        <property name="password" 			value="${jdbc_ctm.password}"/>
    </bean>
    
    <bean id="sqlMapClient_ctm" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
    	<property name="dataSource" ref="dataSource_ctm" />
    	<property name="configLocation">
    		<value>/WEB-INF/classes/sqlmap/${DB_GUBUN}/sqlMapConfig_ctm.xml</value>
        </property>
    </bean>
    
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>/WEB-INF/classes/properties/jdbc.xml</value>
				<value>/WEB-INF/classes/properties/jdbc_ORACLE.xml</value>
				<value>/WEB-INF/classes/properties/jdbc_POSTGRE.xml</value>
            </list>
        </property>
    </bean>


    <!-- 메세지 -->
    <bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>/WEB-INF/classes/properties/sysconfig_ko_KR</value>
				<value>/WEB-INF/classes/properties/config_ko_KR</value>
				<value>/WEB-INF/classes/properties/message_ko_KR</value>
				<value>/WEB-INF/classes/properties/jdbc</value>
				<value>/WEB-INF/classes/properties/jdbc_POSTGRE</value>
				<value>/WEB-INF/classes/properties/jdbc_ORACLE</value>
				<value>/WEB-INF/classes/properties/config</value>
				<value>/WEB-INF/classes/properties/js_version</value>
				<value>/WEB-INF/classes/properties/site</value>
			</list>
		</property>
		<property name="cacheSeconds" value="5" />
	</bean>

    <!-- 트렌젹션 -->
    <bean id="transactionManager_em"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource_em"/>
    </bean>

    <aop:config>
        <aop:advisor pointcut="execution(* *..*ServiceImpl.*(..)))" advice-ref="txAdvice_em"/>
    </aop:config>

    <tx:advice id="txAdvice_em" transaction-manager="transactionManager_em">
        <tx:attributes>
            <!-- <tx:method name="dGet*" read-only="true" /> -->
            <tx:method name="dIns*" rollback-for="Exception"  />
            <tx:method name="dUdt*" rollback-for="Exception" />
            <tx:method name="dDel*" rollback-for="Exception" />
            <tx:method name="dPrc*" rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>
    <!-- 트렌젹션 -->

    <!-- tiles -->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/config/tiles/tiles-layout.xml</value>
				<value>/WEB-INF/config/tiles/tiles-defs.xml</value>
			</list>
		</property>
	</bean>
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="order" value="1"></property>
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean> 
	<!-- tiles -->

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="2"></property>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
    
    <bean id="beanNameResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="0"></property>
 	</bean>
 	
    <bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView" >
  		<property name="contentType" value="text/html; charset=UTF-8"></property>
 	</bean>
    
    <bean id="methodResolver"
		class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver">
		<property name="paramName" value="c" />
	</bean>

    <!-- 파일업로드 -->
	<bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="maxUploadSize">
	        <value>50000000</value>
	    </property>
		<property name="uploadTempDir" value="/WEB-INF/files/tmp/" />
	</bean>
    
    
	<!-- 과거 이력 저장 -->
	<bean id="EzHistoryJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzHistoryJobServiceImpl"/>
		<property name="jobDataAsMap">
			<map>
				<entry key="code">
					<value>001</value>
				</entry>
			</map>
		</property>
	</bean>
	<bean id="EzHistoryJobTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="EzHistoryJob"/>
  		<property name="cronExpression" value="0 0/10 * * * ?"/>
	</bean>

	<!-- 과거 SYS DB 저장 -->
	<bean id="EzJobSysout" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzJobSysServiceImpl"/>
	</bean>
	<bean id="EzJobSysoutTriggerBean" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="EzJobSysout"/>
		<property name="repeatInterval" value="60000"></property> <!-- 60000 : 1분 -->
	</bean>

	
	<!-- 오류 이벤트 알림 -->
	<bean id="EzSmsJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzSmsJobServiceImpl"/>
	</bean>
	<bean id="EzSmsJobTriggerBean" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="EzSmsJob"/>
		<property name="repeatInterval" value="60000"></property> <!-- 60000 : 1분 -->   
	</bean>
	
	<!-- 엑셀일괄 등록/수정/삭제 -->
	<bean id="ExcelBatchJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzExcelBatchQuartzServiceImpl"/>
		<property name="jobDataAsMap">
			<map>
				<entry key="quartzDao">
					<ref bean="quartzDao"/>
				</entry>
				<entry key="worksUserDao">
					<ref bean="tWorksUserDao"/>
				</entry>
				<entry key="worksApprovalDocDao">
					<ref bean="tWorksApprovalDocDao"/>
				</entry>
			</map>
		</property>
	</bean>
	<bean id="ExcelBatchJobTriggerBean" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="ExcelBatchJob"/>
		<property name="repeatInterval" value="60000"></property>
	</bean>
	
	<!-- EZJOBS 로그 삭제 -->
	<bean id="EzLogDeleteJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzLogDeleteJobServiceImpl"/>
	</bean>
	<bean id="EzLogDeleteJobTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="EzLogDeleteJob"/>
  		<property name="cronExpression" value="0 20 15 * * ?"/>
	</bean>
	
	<!-- FORECAST -->
	<bean id="EzRplnJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzRplnJobServiceImpl"/>
	</bean>	
	<bean id="EzRplnJobTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="EzRplnJob"/>
  		<property name="cronExpression" value="0 0 2 * * ?"/>
	</bean>
	
	<!-- 인사 연동  -->
	<bean id="EzUserInfoGetJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzUserInfoGetJobServiceImpl"/>
		<property name="jobDataAsMap">
			<map>
				<entry key="quartzDao">
					<ref bean="quartzDao"/>
				</entry>
			</map>
		</property>
	</bean>
	<bean id="EzUserInfoGetJobTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="EzUserInfoGetJob"/>
  		<property name="cronExpression" value="0 35 21 * * ?"/>
	</bean>
	
	<!-- 일별오더목록 반영 -->
	<bean id="EzPreDateBatch" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzPreDateBatchCallJobServiceImpl"/>
	</bean>
	<bean id="EzPreDateBatchTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="EzPreDateBatch"/>
  		<property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<!-- 수정요청서 반영(하나증권용) -->
<!--	<bean id="EzApiCallJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzApiCallJobServiceImpl"/>
	</bean>
	<bean id="EzApiCallJobTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="EzApiCallJob"/>
  		<property name="cronExpression" value="0 0 6 * * ?"/>
	</bean>-->

	<!--반영-->
	<bean id="EzApiCallJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzJobAttemptServiceImpl"/>
	</bean>

	<bean id="EzApiCallJobTriggerBean" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="EzApiCallJob"/>
		<property name="repeatInterval" value="60000"></property> <!-- : 1분 -->
	</bean>

	<!-- 평균수행시간 -->
	<bean id="EzAvgTimeJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzAvgTimeJobServiceImpl"/>
	</bean>

	<!-- cronExpression 초,분,시,일,월,주의 일,년 -->
	<bean id="EzAvgTimeJobTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="EzAvgTimeJob"/>
  		<property name="cronExpression" value="0 30/5 0 * * ?"/>
	</bean>

	<!-- 평균수행시간오버 알림 발송 -->
	<bean id="EzAvgTimeOverJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzAvgTimeOverJobServiceImpl"/>
		<property name="jobDataAsMap">
			<map>
				<entry key="commonDao">
					<ref bean="commonDao"/>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="EzAvgTimeOverJobTriggerBean" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="EzAvgTimeOverJob"/>
		<property name="repeatInterval" value="60000"></property> <!-- : 1분 -->
	</bean>

	<!-- 리소스 모니터링 -->
	<bean id="EzResourceJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzResourceJobServiceImpl"/>
		<property name="jobDataAsMap">
			<map>
				<entry key="quartzDao">
					<ref bean="quartzDao"/>
				</entry>
				<entry key="commonDao">
					<ref bean="commonDao"/>
				</entry>
				<entry key="ctmInfoDao">
					<ref bean="mCtmInfoDao"/>
				</entry>
			</map>
		</property>
	</bean>

	<!-- repeatInterval value는 1000 이 1초  -->
	<bean id="EzResourceJobtriggerBean" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="EzResourceJob"/>
		<property name="repeatInterval" value="60000"></property> <!-- : 1분 -->
	</bean>
	
	<!-- 삭제 반영 완료된 작업 조회 (매시간 조회)-->
	<bean id="EzDeletedJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.ghayoun.ezjobs.comm.service.EzDeletedJobServiceImpl"/>
	</bean>
	<bean id="EzDeletedJobTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="EzDeletedJob"/>
  		<property name="cronExpression" value="0 0/10 * * * ?"/>
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" autowire="no">
		<property name="triggers">
		<list>
			
<!-- 			<ref bean="EzHistoryJobTriggerBean"/> -->
			<ref bean="EzDeletedJobTriggerBean"/>
<!-- 			<ref bean="EzJobSysoutTriggerBean"/> -->
			<!--<ref bean="EzResourceJobtriggerBean"/>
			<ref bean="EzSmsJobTriggerBean"/>

			<ref bean="EzRplnJobTriggerBean"/>
			<ref bean="ExcelBatchJobTriggerBean"/>
			<ref bean="EzLogDeleteJobTriggerBean"/>
			<ref bean="EzAvgTimeJobTriggerBean"/>
			<ref bean="EzUserInfoGetJobTriggerBean"/>
			
			<ref bean="EzAdUserJobTriggerBean"/>
			<ref bean="EzPreDateBatchTriggerBean"/>
			<ref bean="EzAvgTimeOverJobTriggerBean"/>-->
			<ref bean="EzApiCallJobTriggerBean"/>
		</list>
		</property>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
				<prop key="org.quartz.threadPool.threadPriority">4</prop>
				<prop key="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</prop>
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
	   		</props>
		</property>
	</bean>

</beans>

