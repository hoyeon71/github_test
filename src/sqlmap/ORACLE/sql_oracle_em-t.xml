<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ORACLE_T">
	
	<typeAlias alias="CommonBean" 				type="com.ghayoun.ezjobs.comm.domain.CommonBean" />
	<typeAlias alias="tDefJobBean" 				type="com.ghayoun.ezjobs.t.domain.DefJobBean" />
	<typeAlias alias="tActiveJobBean" 			type="com.ghayoun.ezjobs.t.domain.ActiveJobBean" />
	<typeAlias alias="CompanyBean" 				type="com.ghayoun.ezjobs.t.domain.CompanyBean" />
	<typeAlias alias="UserBean" 				type="com.ghayoun.ezjobs.t.domain.UserBean" />
	<typeAlias alias="ApprovalLineBean" 		type="com.ghayoun.ezjobs.t.domain.ApprovalLineBean" />
	<typeAlias alias="ApprovalInfoBean" 		type="com.ghayoun.ezjobs.t.domain.ApprovalInfoBean" />
	<typeAlias alias="DocInfoBean" 				type="com.ghayoun.ezjobs.t.domain.DocInfoBean" />
	<typeAlias alias="Doc01Bean" 				type="com.ghayoun.ezjobs.t.domain.Doc01Bean" />
	<typeAlias alias="Doc02Bean" 				type="com.ghayoun.ezjobs.t.domain.Doc02Bean" />
	<typeAlias alias="Doc03Bean" 				type="com.ghayoun.ezjobs.t.domain.Doc03Bean" />
	<typeAlias alias="Doc05Bean" 				type="com.ghayoun.ezjobs.t.domain.Doc05Bean" />
	<typeAlias alias="Doc07Bean" 				type="com.ghayoun.ezjobs.t.domain.Doc07Bean" />
	<typeAlias alias="Doc08Bean" 				type="com.ghayoun.ezjobs.t.domain.Doc08Bean" />
	<typeAlias alias="Doc09Bean" 				type="com.ghayoun.ezjobs.t.domain.Doc09Bean" />
	<typeAlias alias="DefJobsFileBean" 			type="com.ghayoun.ezjobs.t.domain.DefJobsFileBean" />
	<typeAlias alias="JobMapperBean" 			type="com.ghayoun.ezjobs.t.domain.JobMapperBean" />
	<typeAlias alias="JobGroupBean" 			type="com.ghayoun.ezjobs.t.domain.JobGroupBean" />
	<typeAlias alias="TagsBean" 				type="com.ghayoun.ezjobs.t.domain.TagsBean" />
	<typeAlias alias="CtmInfoBean" 				type="com.ghayoun.ezjobs.m.domain.CtmInfoBean" />
	<typeAlias alias="Doc06Bean" 				type="com.ghayoun.ezjobs.t.domain.Doc06Bean" />
	<typeAlias alias="Doc12Bean" 				type="com.ghayoun.ezjobs.t.domain.Doc12Bean" />
	<typeAlias alias="JobMapperMFTBean" 		type="com.ghayoun.ezjobs.t.domain.JobMapperMFTBean" />

	<select id="NewChkDefJobCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > NewChkDefJobCnt */
		SELECT count(*) as total_count
		from (
			SELECT job_name
			FROM DEF_JOB a , DEF_TABLES b
			where 1=1
			AND a.table_id = b.table_id			
			<!-- 
				엑셀 체크 시 사용.
				등록,수정할 때는 작업명으로만 체크
				삭제할 때는 작업명 + 폴더/어플리케이션/그룹 체크 : 없으면 삭제 불가
			-->
			<isNotEmpty prepend="and" property="act_gb">
				<isEqual property="act_gb" compareValue="D">
					 b.sched_table = #table_name#
					 and a.application = #application#
					 and a.group_name = #group_name#
				</isEqual>
			</isNotEmpty>
			
			and a.job_name = #job_name#

<!-- 		등록(복사) 요청 시 대해서도 등록 요청서 저장,미결 건 체크 로직 추가 -->
			UNION ALL
			
			SELECT job 
		   	FROM $SCHEMA$.EZ_JOB_MAPPER_DOC tb1
		   	    ,$SCHEMA$.EZ_DOC_MASTER tb2
		   	    ,$SCHEMA$.EZ_DOC_01 tb3
		   	WHERE 1=1
		   	AND tb1.DOC_CD = tb2.DOC_CD
		   	
		   	and tb1.job = tb3.job_name
			and tb1.doc_cd = tb3.doc_cd
		   	
		   	AND tb2.DEL_YN = 'N'
		   	and tb1.job =  #job_name#
		   	AND tb2.STATE_CD in ('00','01')
		   	and (tb2.apply_cd != '04' or tb2.apply_cd is null)
		   	and doc_gb = '01'
		   	
		   	<isNotEmpty prepend="and" property="doc_cd">
		   		tb1.doc_cd != #doc_cd#
		   	</isNotEmpty>
		) t
	</select>
		
	<select id="chkDefJobCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkDefJobCnt */
		SELECT count(*) as total_count
		from (
			SELECT job_name
			FROM DEF_JOB a , DEF_TABLES b
			where 1=1
			AND a.table_id = b.table_id
			<!--
				엑셀 체크 시 사용.
				등록,수정할 때는 작업명으로만 체크
				삭제할 때는 작업명 + 폴더/어플리케이션/그룹 체크 : 없으면 삭제 불가
			-->
			<isNotEmpty prepend="and" property="act_gb">
				<isEqual property="act_gb" compareValue="D">
					 b.sched_table = #table_name#
					 and a.application = #application#
					 and a.group_name = #group_name#
				</isEqual>
			</isNotEmpty>

			and a.job_name = #job_name#
		) t
	</select>
	
	<select id="chkDoc03Cnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkDoc03Cnt */
		SELECT count(*) as total_count
		from (
				 SELECT job_name
				 FROM $SCHEMA$.ez_doc_03 a, $SCHEMA$.ez_doc_master  b
				 where 1=1
				   AND a.doc_cd = b.doc_cd
				   AND (b.state_cd = '00' OR b.state_cd = '01')
				   AND b.apply_cd is null
				   and b.del_yn = 'N'
				   and a.job_name = #job_name#
			 ) t
	</select>
	
	<select id="chkDoc03Cnt2" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkDoc03Cnt2 */
		SELECT count(*) as total_count
		from (
			SELECT job_name
			FROM $SCHEMA$.ez_doc_03 a, $SCHEMA$.ez_approval_doc b
			where 1=1
			AND a.doc_cd = b.doc_cd
			AND b.line_gb = 'F'
			AND b.approval_gb = '03'
			and b.approval_cd = '01'
			and a.job_name = #job_name#
			order by a.doc_cd
		) t
		WHERE rownum = 1 
	</select>
	
	<select id="chkDoc04Cnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkDoc04Cnt */
		SELECT count(*) as total_count
		from (
				 SELECT job_name
				 FROM $SCHEMA$.ez_doc_04 a, $SCHEMA$.ez_doc_master  b
				 where 1=1
				   AND a.doc_cd = b.doc_cd
				   AND (b.state_cd = '00' OR b.state_cd = '01')
				   AND b.apply_cd is null
				   and b.del_yn = 'N'
				   and a.job_name = #job_name#
			 ) t
	</select>
	
	<select id="chkDoc04Cnt2" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkDoc04Cnt2 */
		SELECT count(*) as total_count
		from (
			SELECT job_name
			FROM $SCHEMA$.ez_doc_04 a, $SCHEMA$.ez_approval_doc b
			where 1=1
			AND a.doc_cd = b.doc_cd
			AND b.line_gb = 'F'
			AND b.approval_gb = '03'
			and b.approval_cd = '01'
			and a.job_name = #job_name#
			order by a.doc_cd
		) t
		WHERE rownum = 1 
	</select>
	
	<!-- defJobs -->
	<sql id="defJobListInc">
	/* ORACLE_T > defJobListInc */	
		FROM DEF_JOB a
		, DEF_TABLES b
		, ( SELECT * FROM $SCHEMA$.EZ_JOB_MAPPER tb1 WHERE data_center = #data_center# ) c
		
		where 1=1
		AND a.table_id = b.table_id
		AND a.job_name = c.job
		and b.data_center = ( CASE WHEN INSTR(#data_center#, ',') > 0
									THEN SUBSTR(#data_center#, INSTR(#data_center#, ',')+1, LENGTH(#data_center#))
							 	   ELSE #data_center# END )
		AND a.task_type != 'SMART Table'
		AND a.task_type != 'Sub-Table'
		)  t
		WHERE 1 = 1
	
		<isNotEmpty prepend="and" property="p_sched_table">
			sched_table in
			<iterate property="p_search_text_folder_list" open="(" close=")" conjunction=",">
				#p_search_text_folder_list[]# 
			</iterate>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_application_of_def">
<!-- 			application in ($p_application_of_def$) -->
			application = #p_application_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_group_name_of_def">
			group_name = #p_group_name_of_def#
		</isNotEmpty>
		<!--<isNotEmpty prepend="and" property="p_application_of_def_text">
			application = #p_application_of_def_text#
		</isNotEmpty>-->
		<!-- 복수 어플리케이션 검색 및 제외(23.03.29 신한캐피탈요건) -->
		<isNotEmpty prepend="and" property="p_application_of_def_text" open="(" close=")">
			<isEqual property="p_chk_app" compareValue="N">
				<iterate property="p_search_text_list" conjunction="OR">
					UPPER(application) = UPPER(#p_search_text_list[]#)
				</iterate>
			</isEqual>
			<isEqual property="p_chk_app" compareValue="Y">
				<iterate property="p_search_text_list" conjunction="AND">
					UPPER(application) != UPPER(#p_search_text_list[]#)
				</iterate>
			</isEqual>
		</isNotEmpty>

		<isNotEmpty prepend="and" property="p_group_name_of_def_text">
		    group_name = #p_group_name_of_def_text#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="sub_table_of_def">
			CASE WHEN INSTR(parent_table, '/', 1) = 0 THEN job_name 
		            ELSE SUBSTR(parent_table, INSTR(parent_table, '/', 1)+1, LENGTH(parent_table)) || '/' || job_name END = #sub_table_of_def#
		</isNotEmpty>
		
		<!-- 조회조건 담당자/작업 정보 분리 22.08.25 김은희 -->
		<isNotEmpty prepend="and" property="p_search_text">
			<isEqual property="p_search_gubun" compareValue="user_nm">
				(user_nm like '%'||#p_search_text#||'%' or user_id = #p_search_text#
				or user_nm2 like '%'||#p_search_text#||'%' or user_id2 = #p_search_text#
				or user_nm3 like '%'||#p_search_text#||'%' or user_id3 = #p_search_text#
				or user_nm4 like '%'||#p_search_text#||'%' or user_id4 = #p_search_text#
				or user_nm5 like '%'||#p_search_text#||'%' or user_id5 = #p_search_text#
				or user_nm6 like '%'||#p_search_text#||'%' or user_id6 = #p_search_text#
				or user_nm7 like '%'||#p_search_text#||'%' or user_id7 = #p_search_text#
				or user_nm8 like '%'||#p_search_text#||'%' or user_id8 = #p_search_text#
				or user_nm9 like '%'||#p_search_text#||'%' or user_id9 = #p_search_text#
				or user_nm10 like '%'||#p_search_text#||'%' or user_id10 = #p_search_text#
				)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm1">
				(user_nm like '%'||#p_search_text#||'%' or user_id = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm2">
				(user_nm2 like '%'||#p_search_text#||'%' or user_id2 = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm3">
				(user_nm3 like '%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm4">
				(user_nm4 like '%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm5">
				(user_nm5 like '%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm6">
				(user_nm6 like '%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm7">
				(user_nm7 like '%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm8">
				(user_nm8 like '%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm9">
				(user_nm9 like '%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm10">
				(user_nm10 like '%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="grp_nm1">
				(grp_nm_1 like '%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="grp_nm2">
				(grp_nm_2 like '%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="job_name">
				UPPER(job_name) like UPPER('%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="description">
				description like '%'||#p_search_text#||'%'
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="error_description">
				error_description like '%'||#p_search_text#||'%'
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="memname">
				memname like '%'||#p_search_text#||'%'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_search_text2">
			<!--<isEqual property="p_search_gubun2" compareValue="job_name">
									UPPER(job_name) like UPPER('%'||#p_search_text2#||'%')
								</isEqual>-->
			<!-- 작업명 다중 검색 -->
			<isEqual property="p_search_gubun2" compareValue="job_name">
				<isNotEmpty property="p_search_text2" open="(" close=")">
					<iterate property="p_search_job_name_list" conjunction="OR">
						UPPER(job_name) like UPPER('%'||#p_search_job_name_list[]#||'%')
					</iterate>
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_search_gubun2" compareValue="description">
				description like '%'||#p_search_text2#||'%'
			</isEqual>
			<isEqual property="p_search_gubun2" compareValue="error_description">
				error_description like '%'||#p_search_text2#||'%'
			</isEqual>
			<isEqual property="p_search_gubun2" compareValue="memname">
				memname like '%'||#p_search_text2#||'%'
			</isEqual>
			<isEqual property="p_search_gubun2" compareValue="command">
				command like '%'||#p_search_text2#||'%' 
			</isEqual>
		</isNotEmpty>

		<isNotEmpty prepend="and" property="job_name">
			UPPER(job_name) like UPPER('%'||#job_name#||'%')
		</isNotEmpty>
		
		<isEqual property="s_task_type" compareValue="Job">
			AND (task_type != 'SMART Table' AND task_type != 'Sub-Table')
		</isEqual>
		<isEqual property="s_task_type" compareValue="SMART Table">
			AND (task_type = 'SMART Table' OR task_type = 'Sub-Table')		
		</isEqual>
		
		<!-- order_gubun이 '1' 이면 비정기작업 단건 의뢰 화면이므로 수시 작업만 노출 -->
		<isEqual property="order_gubun" compareValue="1">
			<!-- AND b.user_daily IS NULL -->
		</isEqual>
		
		<!-- user_gb이 '1' 이면 (사용자) 비정기작업만 노출(전북은행 11.14) -->
		<isEqual property="s_user_gb" compareValue="01">
			/*AND user_daily IS NULL */
		</isEqual>
		<isNotEmpty property="p_mcode_nm" prepend="AND">
			mcode_nm = #p_mcode_nm#
		</isNotEmpty>
		<isNotEmpty property="p_scode_nm" prepend="AND">
			scode_nm = #p_scode_nm#
		</isNotEmpty>
		
		<!-- 폴더 권한을 부서명과 동일하게 셋팅 -->
		<!-- 요건 변경 : 선택한 기본 테이블명만 조회 가능  (2020.07.03 강명준) -->
		
		<!-- 운영자는 모든 폴더 조회 가능 -->
		<!-- 토스 뱅크 사용자한테도 모든 폴더 조회 가능 (2020.11.05 강명준) -->
		<!-- 
		<isNotEqual property="s_user_gb" compareValue="02">
			AND sched_table = (SELECT select_table_name FROM $SCHEMA$.EZ_USER WHERE user_cd = $s_user_cd$)
		</isNotEqual>
		-->
		
	</sql>

	<!-- 알람이력 -->
	<select id="sendLogList" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > sendLogList */
		SELECT * 
		  FROM (
				SELECT  send_cd
						,t1.data_center
						,( CASE WHEN INSTR(t1.data_center, ',') > 0 
					   	   THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(t1.data_center, 1, INSTR(t1.data_center, ',')-1)) 
					      ELSE t1.data_center END ) AS data_center_name 
						,t1.job_name
						,order_id
						,(select scode_nm from $SCHEMA$.EZ_SCODE where scode_cd = t1.send_gubun) as send_gubun_nm
						,send_gubun
						,message
						,to_char(send_date, 'YYYY-MM-DD HH24:MI:SS') as send_date
						,return_code
						,to_char(return_date, 'YYYY-MM-DD HH24:MI:SS') as return_date
						,( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = T1.send_user_cd) AS user_nm
						,( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = T1.send_user_cd) AS user_id
						,send_info
						,(select jobschedgb from $SCHEMA$.EZ_JOB_MAPPER where job = t1.job_name and data_center = t1.data_center ) AS jobschedgb
						,(select scode_eng_nm from $SCHEMA$.EZ_SCODE where scode_cd = t1.send_description and mcode_cd = 'M93') as send_description
			      FROM $SCHEMA$.EZ_SEND_LOG t1
			      WHERE 1=1
		       	  <isNotEmpty property="p_s_send_date">
	        	   	  AND TO_CHAR(SEND_DATE, 'YYYYMMDD') >= #p_s_send_date#
				  </isNotEmpty>
				  <isNotEmpty property="p_e_send_date">
					  AND TO_CHAR(SEND_DATE, 'YYYYMMDD') <![CDATA[ <= ]]> #p_e_send_date#
				  </isNotEmpty>
				  <isNotEmpty property="s_send_date">
					 AND TO_CHAR(SEND_DATE, 'YYYY/MM/DD') >= #s_send_date#
				  </isNotEmpty>
				  <isNotEmpty property="e_send_date">
					 AND TO_CHAR(SEND_DATE, 'YYYY/MM/DD') <![CDATA[ <= ]]> #e_send_date#
				  </isNotEmpty>
				  <isNotEmpty property="rerun_counter">
					 AND rerun_counter = #rerun_counter#
				  </isNotEmpty>
				  <isNotEmpty property="job_name">
					 AND t1.job_name = #job_name#
				  </isNotEmpty>
				  <isNotEmpty property="order_id">
					 AND order_id = #order_id#
				  </isNotEmpty>
				  <isNotEmpty property="odate">
					 AND odate = #odate#
				  </isNotEmpty>
				  <isNotEmpty property="send_user_cd">
					 AND T1.send_user_cd = #send_user_cd#
				  </isNotEmpty>
				  <isNotEmpty property="p_send_description">
					 AND send_desc = #p_send_description#
			      </isNotEmpty> 
				) TT
	     WHERE 1=1
	      
       
        <isNotEmpty property="p_send_gubun">
       		AND SEND_GUBUN = #p_send_gubun#
        </isNotEmpty>   
        <isNotEmpty property="p_data_center">
       		AND DATA_CENTER = #p_data_center#
        </isNotEmpty> 	
      
	    <isNotEmpty property="p_search_text">
			<isEqual property="p_search_gubun" compareValue="user_nm">
				AND (user_nm like '%'||#p_search_text#||'%' or user_id = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="job_name">
				AND UPPER(job_name) like UPPER('%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="message">
				AND message like '%'||#p_search_text#||'%'
			</isEqual>
		</isNotEmpty>
		
		 <isNotEmpty property="p_search_text2">
			<isEqual property="p_search_gubun2" compareValue="job_name">
				AND UPPER(job_name) like UPPER('%'||#p_search_text2#||'%')
			</isEqual>
			<isEqual property="p_search_gubun2" compareValue="message">
				AND message like '%'||#p_search_text2#||'%'
			</isEqual>
		</isNotEmpty>

		ORDER BY send_date DESC
	     
	</select>
	<!-- 배치등록정보 -->
	<select id="defJobList" resultClass="tDefJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > defJobList */
	
		SELECT * FROM(
			SELECT row_number() over(ORDER BY SCHED_TABLE, APPLICATION, GROUP_NAME, JOB_NAME) as row_num, TTT.* FROM(
  				SELECT * FROM(
					SELECT /*+no_merge leading(c) use_hash(c a b) */
						a.table_id
						,a.job_id
						,b.data_center AS data_center
						,a.parent_table AS sched_table
						,a.APPLICATION AS application
						,a.GROUP_NAME AS group_name
						,trim(a.JOB_NAME) AS job_name
						,trim(a.MEMNAME) AS memname
						, a.task_type, b.user_daily, a.author, a.owner, a.mem_lib, a.cmd_line AS command, a.description
						, ( SELECT COUNT(*) FROM DEF_LNKI_P WHERE table_id = a.table_id AND job_id = a.job_id ) AS in_cond_cnt,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_1 ) AS user_nm,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_2 ) AS user_nm2,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_3 ) AS user_nm3,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_4 ) AS user_nm4,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_5 ) AS user_nm5,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_6 ) AS user_nm6,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_7 ) AS user_nm7,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_8 ) AS user_nm8,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_9 ) AS user_nm9,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_10 ) AS user_nm10,
						( SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = c.grp_cd_1 ) AS grp_nm_1,
						( SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = c.grp_cd_2 ) AS grp_nm_2,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_1 ) AS user_id,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_2 ) AS user_id2,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_3 ) AS user_id3,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_4 ) AS user_id4,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_5 ) AS user_id5,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_6 ) AS user_id6,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_7 ) AS user_id7,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_8 ) AS user_id8,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_9 ) AS user_id9,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_10 ) AS user_id10
						, c.data_center AS mapper_data_center
						, c.error_description
						, a.NODE_ID
						,(case when (select D.task_type from DEF_JOB D where D.job_name = REGEXP_SUBSTR(a.parent_table, '[^/]+', 1, 1)) = 'SMART Table' then 'Y' else 'N' end) as smart_job_yn
					<include refid="defJobListInc" />
					
					ORDER BY SCHED_TABLE, APPLICATION, GROUP_NAME, JOB_NAME
		
			)TTT
			where 1=1
		) tb1
		
		<isNotEmpty property="pagingNum">
			OFFSET $startRowNum$ ROWS FETCH FIRST $pagingNum$ ROWS ONLY
		</isNotEmpty>	
	
	</select>
	<!-- 배치등록정보 cnt -->
	<select id="defJobListCnt" resultClass="tDefJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > defJobListCnt */
		SELECT count(*) as total_cnt FROM(
			SELECT TTT.* FROM(
			
  				select * from(
					SELECT /*+no_merge leading(c) use_hash(c a b) */
						a.table_id
						,a.job_id
						,b.data_center AS data_center
						,a.parent_table AS sched_table
						,a.APPLICATION AS application
						,a.GROUP_NAME AS group_name
						,trim(a.JOB_NAME) AS job_name
						,trim(a.MEMNAME) AS memname
						, a.task_type, b.user_daily, a.author, a.owner, a.mem_lib, a.cmd_line AS command, a.description
						, ( SELECT COUNT(*) FROM DEF_LNKI_P WHERE table_id = a.table_id AND job_id = a.job_id ) AS in_cond_cnt,

						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_1 ) AS user_nm,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_2 ) AS user_nm2,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_3 ) AS user_nm3,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_4 ) AS user_nm4,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_5 ) AS user_nm5,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_6 ) AS user_nm6,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_7 ) AS user_nm7,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_8 ) AS user_nm8,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_9 ) AS user_nm9,
						( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_10 ) AS user_nm10,
						( SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = c.grp_cd_1 ) AS grp_nm_1,
						( SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = c.grp_cd_2 ) AS grp_nm_2,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_1 ) AS user_id,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_2 ) AS user_id2,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_3 ) AS user_id3,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_4 ) AS user_id4,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_5 ) AS user_id5,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_6 ) AS user_id6,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_7 ) AS user_id7,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_8 ) AS user_id8,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_9 ) AS user_id9,
						( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = c.user_cd_10 ) AS user_id10
						, c.data_center AS mapper_data_center
						, c.error_description
					<include refid="defJobListInc" />
					
					ORDER BY SCHED_TABLE, APPLICATION, GROUP_NAME, JOB_NAME
		
			)TTT
			where 1=1
		) tb1

	</select>

	<!-- activeJobList -->
	<sql id="activeJobListInc">
	/* ORACLE_T > activeJobListInc */
		FROM $active_net_name$JOB A,
		( SELECT job,
		( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_1 ) AS user_nm,
		( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_2 ) AS user_nm2,
		( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_3 ) AS user_nm3,
		( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_4 ) AS user_nm4,
		( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_5 ) AS user_nm5,
		( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_6 ) AS user_nm6,
		( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_7 ) AS user_nm7,
		( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_8 ) AS user_nm8,
		( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_9 ) AS user_nm9,
		( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_10 ) AS user_nm10,
		( SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = tb1.grp_cd_1 ) AS grp_nm_1,
		( SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = tb1.grp_cd_2 ) AS grp_nm_2,
		( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_1 ) AS user_id,
		( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_2 ) AS user_id2,
		( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_3 ) AS user_id3,
		( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_4 ) AS user_id4,
		( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_5 ) AS user_id5,
		( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_6 ) AS user_id6,
		( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_7 ) AS user_id7,
		( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_8 ) AS user_id8,
		( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_9 ) AS user_id9,
		( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_10 ) AS user_id10,
		error_description, ins_date,
		( SELECT dept_cd FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.user_cd_1 ) AS dept_cd,
		jobSchedGb, data_center
		FROM $SCHEMA$.EZ_JOB_MAPPER tb1 WHERE data_center = #data_center# ) B

		WHERE 1=1
		AND A.job_name = B.job
		) tb1
		where 1=1

		<isNotEmpty property="order_id">
			AND order_id = #order_id#
		</isNotEmpty>

		<!-- ODATE -->
		<isNotEmpty property="p_s_odate">
			AND odate >= REPLACE(SUBSTR(#p_s_odate#, 3, 8), '/', '')
		</isNotEmpty>
		<isNotEmpty property="p_e_odate">
			AND odate <![CDATA[ <= ]]> REPLACE(SUBSTR(#p_e_odate#, 3, 8), '/', '')
		</isNotEmpty>
		<!-- 시작일시 -->
		<isNotEmpty property="p_s_time1">
			AND SUBSTR(start_time, 1, 12) >= REPLACE(#p_s_time1#, '/', '')
		</isNotEmpty>
		<isNotEmpty property="p_e_time1">
			AND SUBSTR(start_time, 1, 12) <![CDATA[ < ]]> REPLACE(#p_e_time1#, '/', '')
		</isNotEmpty>
		<!-- 종료일시 -->
		<isNotEmpty property="p_s_time2">
			AND SUBSTR(end_time, 1, 12) >= REPLACE(#p_s_time2#, '/', '')
		</isNotEmpty>
		<isNotEmpty property="p_e_time2">
			AND SUBSTR(end_time, 1, 12) <![CDATA[ < ]]> REPLACE(#p_e_time2#, '/', '')
		</isNotEmpty>

		<isNotEmpty prepend="and" property="p_sched_table">
			order_table in
			<iterate property="p_search_text_folder_list" open="(" close=")" conjunction=",">
				#p_search_text_folder_list[]# 
			</iterate>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_application_of_def">
<!-- 			application in ($p_application_of_def$) -->
			application = #p_application_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_group_name_of_def">
			group_name = #p_group_name_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="sub_table_of_def">
			job_name = #sub_table_of_def#
		</isNotEmpty>

		<!--<isNotEmpty prepend="and" property="p_application_of_def_text">
                    application = #p_application_of_def_text#
            </isNotEmpty>-->

		<!-- 복수 어플리케이션 검색 및 제외(23.03.29 신한캐피탈요건) -->
		<isNotEmpty prepend="and" property="p_application_of_def_text" open="(" close=")">
			<isEqual property="p_chk_app" compareValue="N">
				<iterate property="p_search_text_list" conjunction="OR">
					UPPER(application) = UPPER(#p_search_text_list[]#)
				</iterate>
			</isEqual>
			<isEqual property="p_chk_app" compareValue="Y">
				<iterate property="p_search_text_list" conjunction="AND">
					UPPER(application) != UPPER(#p_search_text_list[]#)
				</iterate>
			</isEqual>
		</isNotEmpty>

		<isNotEmpty prepend="and" property="p_group_name_of_def_text">
			group_name = #p_group_name_of_def_text#
		</isNotEmpty>

		<!-- <isNotEmpty prepend="and" property="p_status">
			state_result = #p_status#
		</isNotEmpty> -->

<!-- 		<isNotEmpty property="p_status"> -->
<!-- 			AND (state_result IN -->
<!-- 			<iterate property="statusList" open="(" close=")" conjunction=","> -->
<!-- 	        	#statusList[]# -->
<!-- 	    	</iterate> -->

<!-- 	    	<isNotEmpty property="Held"> -->
<!-- 				OR state_result IN (#Held#) -->
<!-- 	    	</isNotEmpty> -->
<!-- 	    	) -->
<!-- 	    </isNotEmpty> -->

		<isNotEmpty property="p_status"> 
			AND (status IN
			<iterate property="statusList" open="(" close=")" conjunction=",">
	        	#statusList[]#
	    	</iterate>
	    	)
	    </isNotEmpty>

		<isNotEmpty property="p_chk_hold">
			AND holdflag = #p_chk_hold#
		</isNotEmpty>

		<!-- 조회조건 담당자/작업 정보 분리 22.08.25 김은희 -->
		<isNotEmpty prepend="and" property="p_search_text">
			<isEqual property="p_search_gubun" compareValue="user_nm">
				(
	        	user_nm like '%'||#p_search_text#||'%' or user_id = #p_search_text#
				or user_nm2 like '%'||#p_search_text#||'%' or user_id2 = #p_search_text#
				or user_nm3 like '%'||#p_search_text#||'%' or user_id3 = #p_search_text#
				or user_nm4 like '%'||#p_search_text#||'%' or user_id4 = #p_search_text#
				or user_nm5 like '%'||#p_search_text#||'%' or user_id5 = #p_search_text#
				or user_nm6 like '%'||#p_search_text#||'%' or user_id6 = #p_search_text#
				or user_nm7 like '%'||#p_search_text#||'%' or user_id7 = #p_search_text#
				or user_nm8 like '%'||#p_search_text#||'%' or user_id8 = #p_search_text#
				or user_nm9 like '%'||#p_search_text#||'%' or user_id9 = #p_search_text#
				or user_nm10 like '%'||#p_search_text#||'%' or user_id10 = #p_search_text#
				)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm1">
				(user_nm like '%'||#p_search_text#||'%' or user_id = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm2">
				(user_nm2 like '%'||#p_search_text#||'%' or user_id2 = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm3">
				(user_nm3 like '%'||#p_search_text#||'%' or user_id3 = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm4">
				(user_nm4 like '%'||#p_search_text#||'%' or user_id4 = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm5">
				(user_nm5 like '%'||#p_search_text#||'%' or user_id5 = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm6">
				(user_nm6 like '%'||#p_search_text#||'%' or user_id6 = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm7">
				(user_nm7 like '%'||#p_search_text#||'%' or user_id7 = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm8">
				(user_nm8 like '%'||#p_search_text#||'%' or user_id8 = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm9">
				(user_nm9 like '%'||#p_search_text#||'%' or user_id9 = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_nm10">
				(user_nm10 like '%'||#p_search_text#||'%' or user_id10 = #p_search_text#)
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="grp_nm1">
				(grp_nm_1 like '%'||#p_search_text#||'%' )
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="grp_nm2">
				(grp_nm_2 like '%'||#p_search_text#||'%' )
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="job_name">
				UPPER(job_name) like UPPER('%'||#p_search_text#||'%')
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="description">
				description like '%'||#p_search_text#||'%'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_search_text2">
			<!--<isEqual property="p_search_gubun2" compareValue="job_name">
				UPPER(job_name) like UPPER('%'||#p_search_text2#||'%')
			</isEqual>-->
			<!-- 작업명 다중 검색 -->
			<isEqual property="p_search_gubun2" compareValue="job_name">
				<isNotEmpty property="p_search_text2" open="(" close=")">
					<iterate property="p_search_job_name_list" conjunction="OR">
						UPPER(job_name) like UPPER('%'||#p_search_job_name_list[]#||'%')
					</iterate>
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_search_gubun2" compareValue="description">
				description like '%'||#p_search_text2#||'%'
			</isEqual>
			<isEqual property="p_search_gubun2" compareValue="command">
				cmd_line like '%'||#p_search_text2#||'%'
			</isEqual>
			<isEqual property="p_search_gubun2" compareValue="order_id">
				order_id like '%'||#p_search_text2#||'%'
			</isEqual>
		</isNotEmpty>

		<isNotEmpty prepend="and" property="p_node_id">
<!-- 			node_id = #p_node_id# -->
			node_id like #p_node_id#||'%'
		</isNotEmpty>

		<isNotEmpty property="p_mcode_nm" prepend="AND">
			mcode_nm = #p_mcode_nm#
		</isNotEmpty>
		<isNotEmpty property="p_scode_nm" prepend="AND">
			scode_nm in ($p_scode_nm$)
		</isNotEmpty>
		<isNotEmpty property="p_moneybatchjob" prepend="AND">
			moneybatchjob = #p_moneybatchjob#
		</isNotEmpty>
		<isNotEmpty property="p_critical" prepend="AND">
			critical = #p_critical#
		</isNotEmpty>

		<isNotEmpty prepend="and" property="p_search_user_daily">
			<isEqual property="p_search_user_daily" compareValue="S">
				susi_cnt != 0
			</isEqual>
			<isEqual property="p_search_user_daily" compareValue="Y">
				user_daily = 'SYSTEM' AND susi_cnt = 0
			</isEqual>
			<isEqual property="p_search_user_daily" compareValue="N">
				(user_daily != 'SYSTEM' OR user_daily IS NULL) AND susi_cnt = 0
			</isEqual>
		</isNotEmpty>

		<!-- 폴더 권한을 부서명과 동일하게 셋팅 -->
		<!-- 요건 변경 : 선택한 기본 테이블명만 조회 가능  (2020.07.03 강명준) -->

		<!-- 운영자는 모든 폴더 조회 가능 -->
		<!-- 토스 뱅크 사용자한테도 모든 폴더 조회 가능 (2020.11.05 강명준) -->
		<!--
		<isNotEqual property="s_user_gb" compareValue="02">
			AND order_table = (SELECT select_table_name FROM $SCHEMA$.EZ_USER WHERE user_cd = $s_user_cd$)
		</isNotEqual>
		-->

	</sql>
	<!-- 작업상태변경 -->
	<select id="activeJobCntList" resultClass="tActiveJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > activeJobCntList */
			select rownum as row_num, ttt.*
			  from (
	  			select (SELECT scode_desc FROM $SCHEMA$.EZ_SCODE WHERE mcode_cd = 'M44' AND scode_eng_nm = systemgb) AS system_gb, CASE WHEN mcode_nm = '' THEN '기타' ELSE CAST(mcode_nm AS VARCHAR) END as mcode_nm, count(state_result2) as total_cnt, count(running) running_cnt, count(wait) wait_cnt, count(success) success_cnt, count(fail) fail_cnt
	  			  from(
					SELECT A.start_time
				      		,A.end_time
				      		,A.rerun_counter
				      		,A.order_table
				      		,A.application
				      		,A.group_name
				      		,trim(A.job_name) AS job_name
				      		,trim(A.memname) AS memname
				      		,case WHEN A.DELETE_FLAG='1' THEN 'Deleted'
					                WHEN  RTRIM(A.STATE) like 'Held%' THEN 'Held'

					               ELSE A.STATUS END AS state_result
				           ,case WHEN RTRIM(A.STATE) like 'Held%' THEN 'Y' ELSE 'N' END AS holdflag

				          ,A.order_id
				          ,case when A.DELETE_FLAG='1' THEN 'Deleted'
			                ELSE trim(A.STATUS) END AS status
				          ,A.odate
				          ,A.state
				          ,A.job_id
				          ,( CASE WHEN A.CRITICAL = '1' THEN 'Y' ELSE 'N' END ) AS critical_yn
				          , A.description
				          , B.user_nm
				          , B.user_id
			          	  ,( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = b.dept_cd) AS dept_nm
				          , a.cpu_id AS node_id
				          ,CASE WHEN a.status = 'Wait User' THEN 'WAIT'
			      				WHEN a.status = 'Wait Condition' THEN 'WAIT'
			      				WHEN a.status = 'Wait Resource' THEN 'WAIT'
			      				WHEN a.status = 'Wait Host' THEN 'WAIT'
			      				WHEN a.status = 'Executing' THEN 'RUNNING'
			      				WHEN a.status = 'Ended OK' THEN 'SUCCESS'
							    WHEN a.status = 'Ended Not OK' THEN 'FAIL'
							    ELSE 'ETC'  END AS state_result2
					      ,CASE WHEN a.status = 'Wait User' THEN 'WAIT'
			      				WHEN a.status = 'Wait Condition' THEN 'WAIT'
			      				WHEN a.status = 'Wait Resource' THEN 'WAIT'
			      				WHEN a.status = 'Wait Host' THEN 'WAIT'
			      				end AS wait
		      			  ,CASE WHEN a.status = 'Executing' THEN 'RUNNING'
			      				END AS running
		      			  ,CASE WHEN a.status = 'Ended OK' THEN 'SUCCESS'
			      				END AS success
		      			  ,CASE WHEN a.status = 'Ended Not OK' THEN 'FAIL'
			      				END AS fail
						  ,a.from_time AS 	time_from
						  ,a.to_time AS 	time_until
						  ,b.jobschedgb
						  ,a.cmd_line
						  ,(select user_daily from def_tables where sched_table = REGEXP_SUBSTR(a.order_table, '[^/]+', 1, 1) and data_center = ( CASE WHEN INSTR(#data_center#, ',') > 0
																								THEN SUBSTR(#data_center#, INSTR(#data_center#, ',')+1, LENGTH(#data_center#))
																								ELSE #data_center# END )) as user_daily
						  , (select doc_cd from $SCHEMA$.ez_doc_05 where job_name = a.job_name and order_id = a.order_id) as susi_doc_cd
						  , (select count(*) from $SCHEMA$.ez_doc_05 where job_name = a.job_name and order_id = a.order_id) as susi_cnt

			<include refid="activeJobListInc" />

			) ttt
			where 1=1

			<isNotEmpty property="startRowNum">
			AND row_num between #startRowNum# and #endRowNum#
			</isNotEmpty>

	</select>
	<!-- 작업상태변경 -->
	<select id="activeJobList" resultClass="tActiveJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > activeJobList */
		SELECT * FROM(
			SELECT rownum as row_num, TTT.* FROM(
  			
  			select tb1.* 
  					<!-- , (select user_nm from $SCHEMA$.ez_user where user_cd = (select user_cd from $SCHEMA$.ez_doc_master where doc_cd = susi_doc_cd)) as ins_nm1
  					, (select user_nm from $SCHEMA$.ez_user where user_cd = (select user_cd from $SCHEMA$.ez_approval_doc where doc_cd = susi_doc_cd and seq = '1' and approval_cd = '02')) as approval_nm1
					, (select user_nm from $SCHEMA$.ez_user where user_cd = (select user_cd from $SCHEMA$.ez_approval_doc where doc_cd = susi_doc_cd and seq = '2' and approval_cd = '02')) as approval_nm2  -->
  			from(
				SELECT A.start_time
			      		,A.end_time
			      		,A.rerun_counter
			      		,A.order_table
			      		,A.application
			      		,A.group_name
			      		,A.task_type 
			      		,trim(A.job_name) AS job_name
			      		,trim(A.memname) AS memname
			      		,case WHEN A.DELETE_FLAG='1' THEN 'Deleted'
				                WHEN  RTRIM(A.STATE) like 'Held%' THEN 'Held' 
				               <!--  WHEN (A.STATUS='Wait Condition' AND trim(A.FROM_TIME) IS NOT NULL) THEN 'Wait Time' -->
				               ELSE A.STATUS END AS state_result
			           ,case WHEN RTRIM(A.STATE) like 'Held%' THEN 'Y' ELSE 'N' END AS holdflag 
			          
			          ,A.order_id
			          ,case when A.DELETE_FLAG='1' THEN 'Deleted'
			                ELSE trim(A.STATUS) END AS status
			          ,A.odate
			          ,A.state
			          ,A.job_id 
			          ,( CASE WHEN A.CRITICAL = '1' THEN 'Y' ELSE 'N' END ) AS critical_yn
			          ,( CASE WHEN A.CYCLIC = '1' THEN 'Y' ELSE 'N' END ) AS CYCLIC
			          , A.description
			          , B.user_nm, B.user_nm2, B.user_nm3, B.user_nm4
			          , B.user_nm5, B.user_nm6, B.user_nm7, B.user_nm8, B.user_nm9, B.user_nm10
			          , B.user_id, B.user_id2, B.user_id3, B.user_id4, B.user_id5, B.user_id6, B.user_id7, B.user_id8, B.user_id9, B.user_id10
				      , B.grp_nm_1, B.grp_nm_2
			          ,( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = b.dept_cd) AS dept_nm
<!-- 			          , (CASE WHEN COALESCE(TRIM(a.cpu_id),'')='' THEN  a.nodegroup ELSE a.cpu_id END) AS node_id -->
			          , CASE  WHEN A.CPU_ID = NULL OR COALESCE(TRIM(A.CPU_ID),'')='' THEN A.NODEGROUP
				              WHEN A.NODEGROUP = A.CPU_ID THEN A.CPU_ID 
				              ELSE NODEGROUP ||'('||A.CPU_ID||')' END NODE_ID
			          ,CASE WHEN a.status = 'Wait User' THEN 'WAIT' 
			      				WHEN a.status = 'Wait Condition' THEN 'WAIT' 
			      				WHEN a.status = 'Wait Resource' THEN 'WAIT'
			      				WHEN a.status = 'Wait Host' THEN 'WAIT' 
			      				WHEN a.status = 'Executing' THEN 'RUNNING' 
			      				WHEN a.status = 'Ended OK' THEN 'SUCCESS' 
							    WHEN a.status = 'Ended Not OK' THEN 'FAIL' 
							    ELSE 'ETC'  END AS state_result2
					  ,a.from_time AS 	time_from
					  ,a.to_time AS 	time_until
					  ,a.critical
					  ,b.jobschedgb
					  ,a.cmd_line
					  ,a.appl_type
					  ,a.appl_form
					  ,(select user_daily from def_tables where sched_table = a.order_table and data_center = ( CASE WHEN INSTR(#data_center#, ',') > 0
																								THEN SUBSTR(#data_center#, INSTR(#data_center#, ',')+1, LENGTH(#data_center#))
																								ELSE #data_center# END )) as user_daily
					  , (select doc_cd from $SCHEMA$.ez_doc_05 where job_name = a.job_name and order_id = a.order_id) as susi_doc_cd
					  , (select count(*) from $SCHEMA$.ez_doc_05 where job_name = a.job_name and order_id = a.order_id) as susi_cnt
					  , ( SELECT value FROM $active_net_name$SETVAR WHERE order_id = A.order_id AND order_ = 1 ) AS set_value
					  ,TO_CHAR(TO_DATE('2002-01-01', 'YYYY-MM-DD') +((SELECT AVG_RUN_TIME FROM $SCHEMA$.EZ_AVG_TIME WHERE JOB_NAME = A.JOB_NAME 
					  																		AND DATA_CENTER = ( CASE WHEN INSTR( #data_center#, ',') > 0
																													THEN SUBSTR( #data_center#, INSTR( #data_center#, ',')+1, LENGTH( #data_center#))
																													ELSE  #data_center# END ))/86400),'HH24:MI:SS') AS AVG_RUN_TIME
					  ,(case when (select f.task_type from DEF_JOB f where f.job_name = REGEXP_SUBSTR(a.order_table, '[^/]+', 1, 1)) = 'SMART Table' then 'Y' else 'N' end) as smart_job_yn

					<include refid="activeJobListInc" />
		
		ORDER BY odate, START_TIME desc
		
			)TTT
		) tb1
		
		WHERE 1 = 1

		<isNotEmpty property="pagingNum">
			OFFSET $startRowNum$ ROWS FETCH FIRST $pagingNum$ ROWS ONLY
		</isNotEmpty>		
	</select>
	
	<!-- 작업상태변경 건수 -->
	<select id="activeJobListCnt" resultClass="tActiveJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > activeJobListCnt */
		SELECT count(*) as total_cnt FROM(
			SELECT TTT.* FROM(
  			
  			select tb1.* 
  					<!-- , (select user_nm from $SCHEMA$.ez_user where user_cd = (select user_cd from $SCHEMA$.ez_doc_master where doc_cd = susi_doc_cd)) as ins_nm1
  					, (select user_nm from $SCHEMA$.ez_user where user_cd = (select user_cd from $SCHEMA$.ez_approval_doc where doc_cd = susi_doc_cd and seq = '1' and approval_cd = '02')) as approval_nm1
					, (select user_nm from $SCHEMA$.ez_user where user_cd = (select user_cd from $SCHEMA$.ez_approval_doc where doc_cd = susi_doc_cd and seq = '2' and approval_cd = '02')) as approval_nm2  -->
  			from(
				SELECT A.start_time
			      		,A.end_time
			      		,A.rerun_counter
			      		,A.order_table
			      		,A.application
			      		,A.group_name
			      		,trim(A.job_name) AS job_name
			      		,trim(A.memname) AS memname
			      		,case WHEN A.DELETE_FLAG='1' THEN 'Deleted'
				                WHEN  RTRIM(A.STATE) like 'Held%' THEN 'Held' 
				               <!--  WHEN (A.STATUS='Wait Condition' AND trim(A.FROM_TIME) IS NOT NULL) THEN 'Wait Time' -->
				               ELSE A.STATUS END AS state_result
			           ,case WHEN RTRIM(A.STATE) like 'Held%' THEN 'Y' ELSE 'N' END AS holdflag 
			          
			          ,A.order_id
			          ,case when A.DELETE_FLAG='1' THEN 'Deleted'
			                ELSE trim(A.STATUS) END AS status
			          ,A.odate
			          ,A.state
			          ,A.job_id 
			          ,( CASE WHEN A.CRITICAL = '1' THEN 'Y' ELSE 'N' END ) AS critical_yn
			          , A.description
					  , B.user_nm, B.user_nm2, B.user_nm3, B.user_nm4
					  , B.user_nm5, B.user_nm6, B.user_nm7, B.user_nm8, B.user_nm9, B.user_nm10
					  , B.user_id, B.user_id2, B.user_id3, B.user_id4, B.user_id5, B.user_id6, B.user_id7, B.user_id8, B.user_id9, B.user_id10
					  , B.grp_nm_1, B.grp_nm_2
			          ,( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = b.dept_cd) AS dept_nm
			          , (CASE WHEN COALESCE(TRIM(a.cpu_id),'')='' THEN  a.nodegroup ELSE a.cpu_id END) AS node_id
			          ,CASE WHEN a.status = 'Wait User' THEN 'WAIT' 
			      				WHEN a.status = 'Wait Condition' THEN 'WAIT' 
			      				WHEN a.status = 'Wait Resource' THEN 'WAIT'
			      				WHEN a.status = 'Wait Host' THEN 'WAIT' 
			      				WHEN a.status = 'Executing' THEN 'RUNNING' 
			      				WHEN a.status = 'Ended OK' THEN 'SUCCESS' 
							    WHEN a.status = 'Ended Not OK' THEN 'FAIL' 
							    ELSE 'ETC'  END AS state_result2
					  ,a.from_time AS 	time_from
					  ,a.to_time AS 	time_until
					  ,a.critical
					  ,b.jobschedgb
					  ,a.cmd_line
					  ,(select user_daily from def_tables where sched_table = a.order_table and data_center = ( CASE WHEN INSTR(#data_center#, ',') > 0
																								THEN SUBSTR(#data_center#, INSTR(#data_center#, ',')+1, LENGTH(#data_center#))
																								ELSE #data_center# END )) as user_daily
					  , (select doc_cd from $SCHEMA$.ez_doc_05 where job_name = a.job_name and order_id = a.order_id) as susi_doc_cd
					  , (select count(*) from $SCHEMA$.ez_doc_05 where job_name = a.job_name and order_id = a.order_id) as susi_cnt

					<include refid="activeJobListInc" />
		
		ORDER BY odate, START_TIME desc
		
			)TTT
		) tb1
		
		WHERE 1 = 1

	</select>

	<!-- 부서관리 -->
	<select id="deptList" resultClass="CompanyBean" parameterClass="java.util.Map">
	/* ORACLE_T > deptList */
	<![CDATA[
		select TTT.* from(
		
		select
			dept_cd
			,dept_nm
			,to_char(ins_date,'YYYY/MM/DD HH24:MI:SS') AS ins_date
			,ins_user_cd
			,ins_user_ip
			,to_char(udt_date,'YYYY/MM/DD HH24:MI:SS') AS udt_date
			,udt_user_cd
			,udt_user_ip
		from $SCHEMA$.EZ_dept
		where 1=1
		and del_yn = 'N'
	]]>
		order by dept_nm
		
		) TTT
	</select>
	
	<!-- 직책관리 -->
	<select id="dutyList" resultClass="CompanyBean" parameterClass="java.util.Map">
	/* ORACLE_T > dutyList */
	<![CDATA[
		select TTT.* from(
		
		select
			duty_cd
			,duty_nm
			,to_char(ins_date,'YYYY/MM/DD HH24:MI:SS') AS ins_date
			,ins_user_cd
			,ins_user_ip
			,to_char(udt_date,'YYYY/MM/DD HH24:MI:SS') AS udt_date
			,udt_user_cd
			,udt_user_ip
		from $SCHEMA$.EZ_duty
		where 1=1
		and del_yn = 'N'
	]]>
		order by duty_nm
		
		) TTT
	</select>
	
	<!-- userLogin -->
	<select id="userLogin" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > userLogin */
		select 
			user_cd
			,user_id
			,user_nm
			,user_pw
			,user_gb
			,user_email
			,user_hp
			,no_auth
			,dept_cd
			,(select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t1.dept_cd ) AS dept_nm
			,duty_cd
			,(select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t1.duty_cd ) AS duty_nm
			,user_appr_gb
			,pw_fail_cnt
			,select_data_center_code
			,select_table_name
			,select_application
			,select_group_name
			,account_lock
			,pw_date
			,CASE WHEN (sysdate - $pw_update_cycle$) > pw_date THEN 'Y' ELSE 'N' END AS pw_date_over
			,retire_yn
			,default_paging
			,'0' AS alert_cnt
			,reset_yn
			,(select scode_nm from $SCHEMA$.EZ_SCODE where mcode_cd = 'M6' and scode_use_yn = 'Y' and scode_cd || ',' || scode_eng_nm = t1.select_data_center_code) AS select_data_center
			,(select MAX(scode_nm) from $SCHEMA$.EZ_SCODE where mcode_cd = 'M72' and scode_use_yn = 'Y' and order_no = '1') AS control_flag
			,(CASE WHEN (user_gb = '99' or user_gb = '98')
				   THEN ( SELECT count(*) FROM $SCHEMA$.EZ_ALARM WHERE (action_yn != 'Y' or action_yn is null) and (confirm_yn != 'Y' or confirm_yn is null))
				   ELSE ( SELECT count(*) FROM $SCHEMA$.EZ_ALARM WHERE user_cd = t1.user_cd and (action_yn != 'Y' or action_yn is null) and (confirm_yn != 'Y' or confirm_yn is null))
				   END ) AS alarm_chk1
			,(CASE WHEN (user_gb = '99' or user_gb = '98')
				   THEN ( SELECT count(*) FROM $SCHEMA$.EZ_ALARM WHERE action_yn = 'Y' and (confirm_yn != 'Y' or confirm_yn is null))
				   ELSE ( SELECT count(*) FROM $SCHEMA$.EZ_ALARM WHERE confirm_user_cd = t1.user_cd and action_yn = 'Y' and (confirm_yn != 'Y' or confirm_yn is null))
				   END ) AS alarm_chk2
			,(CASE WHEN (user_gb = '99' or user_gb = '98')
				   THEN ( SELECT min(host_time) FROM $SCHEMA$.EZ_ALARM WHERE ( (action_yn != 'Y' or action_yn is null) and (confirm_yn != 'Y' or confirm_yn is null) ) or ( action_yn = 'Y' and (confirm_yn != 'Y' or confirm_yn is null) ) )
				   ELSE ( SELECT min(host_time) FROM $SCHEMA$.EZ_ALARM WHERE  (user_cd = t1.user_cd and (action_yn != 'Y' or action_yn is null) and (confirm_yn != 'Y' or confirm_yn is null) ) or (confirm_user_cd = t1.user_cd and action_yn = 'Y' and (confirm_yn != 'Y' or confirm_yn is null) ) )
				   END ) AS alarm_chk3
		     , user_ip
		     ,(TRUNC(sysdate) - TRUNC(case when (SELECT MAX(login_cd) FROM $SCHEMA$.ez_login_log WHERE ins_user_cd = t1.user_cd) is null 
		     	    						then t1.ins_date
		     	    						else (SELECT MAX(ins_date) AS ins_date FROM $SCHEMA$.ez_login_log WHERE ins_user_cd = t1.user_cd) end )) AS max_login_cnt
		     ,(SELECT scode_nm FROM $SCHEMA$.ez_scode WHERE mcode_cd = 'M76') AS disconnect_cnt
		from $SCHEMA$.EZ_user t1
		where 1=1
		and user_id = #user_id#
		and del_yn = 'N'
	</select>
	
	<select id="userListCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > userListCnt */
		SELECT count(1) as total_count FROM(
			select row_number() over(order by user_nm) as row_num, TTT.* from(
			
			select
				user_cd
				,user_id
				,user_nm
				,user_pw
				,user_gb
				,user_email
				,user_hp
				,no_auth
				,dept_cd
				,(select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t1.dept_cd ) AS dept_nm
				,duty_cd
				,(select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t1.duty_cd ) AS duty_nm
				,user_appr_gb				
				,to_char(ins_date,'YYYY/MM/DD HH24:MI:SS') AS ins_date
				,ins_user_cd
				,ins_user_ip
				,to_char(udt_date,'YYYY/MM/DD HH24:MI:SS') AS udt_date
				,udt_user_cd
				,udt_user_ip
				,select_data_center_code
				,select_table_name
				,select_application
				,select_group_name
				,del_yn
				,retire_yn
				,account_lock
				,user_tel
				,absence_user_cd
				,( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = t1.absence_user_cd ) AS absence_user_nm
				,absence_reason
				,to_char(absence_start_date, 'YYYYMMDD') AS absence_start_date
				,to_char(absence_end_date, 'YYYYMMDD') AS absence_end_date
				,(SELECT COUNT(*) FROM $SCHEMA$.EZ_JOB_MAPPER WHERE (user_cd_1 = t1.user_cd OR user_cd_2 = t1.user_cd OR user_cd_3 = t1.user_cd OR user_cd_4 = t1.user_cd)) AS mapper_cnt
				,default_paging
				,reset_yn
				,user_ip
				,to_char((select max(ins_date) from $SCHEMA$.ez_login_log where ins_user_cd = t1.user_cd), 'YYYY/MM/DD HH24:MI:SS') AS max_login_date
			from $SCHEMA$.EZ_user t1
			where 1=1
			
			<!-- 관리자의 사용자 리스트는 삭제된 사용자도 나와야 한다. -->
			<isNotEmpty property="popup">
				and del_yn = 'N' 
			</isNotEmpty>			
			
			ORDER BY user_nm  
			
			) TTT
			
			where 1=1
			
			<isNotEmpty property="p_approval_gubun">
				and user_appr_gb IS NOT NULL
				and user_cd != $s_user_cd$
				and del_yn != 'Y'
			</isNotEmpty>
			
			<isNotEmpty property="user_cd">
				and user_cd = $user_cd$ 
			</isNotEmpty>
			<!-- 결재문서 결재자변경시 로그인한 사용자 조회 X, 결재자 아닌 사용자 조회 X -->
			<isNotEmpty property="s_user_cd">
				<!-- and user_cd != $s_user_cd$
				and user_appr_gb = '00' --> 
			</isNotEmpty>
			<isNotEmpty property="p_del_yn">
				and del_yn = #p_del_yn# 
			</isNotEmpty>
			<isNotEmpty property="user_check">
				and user_id = #user_check# 
			</isNotEmpty>
			<isNotEmpty property="p_search_text">
				<isEqual property="p_search_gubun" compareValue="user_nm">
					<isNotEmpty property="auto_yn">
						and (UPPER(user_nm) LIKE UPPER('%'||#p_search_text#||'%') or UPPER(user_id) LIKE UPPER('%'||#p_search_text#||'%'))
					</isNotEmpty>
					<isEmpty property="auto_yn">	
						and (UPPER(user_nm) LIKE UPPER('%'||#p_search_text#||'%'))
					</isEmpty>
				</isEqual>
				<isEqual property="p_search_gubun" compareValue="duty_nm">
					and duty_nm LIKE '%'||#p_search_text#||'%'
				</isEqual>
				<isEqual property="p_search_gubun" compareValue="user_id">
					<isNotEmpty property="auto_yn">
						and (UPPER(user_nm) LIKE UPPER('%'||#p_search_text#||'%') or UPPER(user_id) LIKE UPPER('%'||#p_search_text#||'%'))
					</isNotEmpty>
					<isEmpty property="auto_yn">	
						and (UPPER(user_id) LIKE UPPER('%'||#p_search_text#||'%'))
					</isEmpty>
				</isEqual>
				<isEqual property="p_search_gubun" compareValue="dept_nm">
					and dept_nm LIKE '%'||#p_search_text#||'%'
				</isEqual>
				<isEqual property="p_search_gubun" compareValue="all">
					and (dept_nm LIKE '%'||#p_search_text#||'%' or UPPER(user_id) LIKE UPPER('%'||#p_search_text#||'%') or UPPER(user_nm) LIKE UPPER('%'||#p_search_text#||'%'))
				</isEqual>
			</isNotEmpty>
			
		) tb1
	</select>
		
	<!-- 유저관리 -->
	<select id="userList" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > userList */
		SELECT * FROM(
			select row_number() over(order by user_nm) as row_num, TTT.* from(
			
			select
				user_cd
				,user_id
				,user_nm
				,user_pw
				,user_gb
				,user_email
				,user_hp
				,no_auth
				,dept_cd
				,(select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t1.dept_cd ) AS dept_nm
				,duty_cd
				,(select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t1.duty_cd ) AS duty_nm
				,user_appr_gb				
				,to_char(ins_date,'YYYY/MM/DD HH24:MI:SS') AS ins_date
				,ins_user_cd
				,ins_user_ip
				,to_char(udt_date,'YYYY/MM/DD HH24:MI:SS') AS udt_date
				,udt_user_cd
				,udt_user_ip
				,select_data_center_code
				,select_table_name
				,select_application
				,select_group_name
				,del_yn
				,retire_yn
				,account_lock
				,user_tel
				,absence_user_cd
				,( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = t1.absence_user_cd ) AS absence_user_nm
				,absence_reason
				,to_char(absence_start_date, 'YYYYMMDD') AS absence_start_date
				,to_char(absence_end_date, 'YYYYMMDD') AS absence_end_date
				,(SELECT COUNT(*) FROM $SCHEMA$.EZ_JOB_MAPPER WHERE (user_cd_1 = t1.user_cd OR user_cd_2 = t1.user_cd OR user_cd_3 = t1.user_cd OR user_cd_4 = t1.user_cd)) AS mapper_cnt
				,default_paging
				,reset_yn
				,user_ip
				,to_char((select max(ins_date) from $SCHEMA$.ez_login_log where ins_user_cd = t1.user_cd), 'YYYY/MM/DD HH24:MI:SS') AS max_login_date
			from $SCHEMA$.EZ_user t1
			where 1=1
			
			<!-- 관리자의 사용자 리스트는 삭제된 사용자도 나와야 한다. -->
			<isNotEmpty property="popup">
				and del_yn = 'N' 
			</isNotEmpty>		
			
			<isNotEmpty property="p_approval_gubun">
				and user_appr_gb IS NOT NULL
				and user_cd != $s_user_cd$
				and del_yn != 'Y'
			</isNotEmpty>	
			
			ORDER BY user_nm  
			
			) TTT
			
			where 1=1
			
			<isNotEmpty property="user_cd">
				and user_cd = $user_cd$ 
			</isNotEmpty>
			<!-- 결재문서 결재자변경시 로그인한 사용자 조회 X, 결재자 아닌 사용자 조회 X -->
			<isNotEmpty property="s_user_cd">
				<!-- and user_cd != $s_user_cd$
				and user_appr_gb = '00' --> 
			</isNotEmpty>
			<isNotEmpty property="p_del_yn">
				and del_yn = #p_del_yn# 
			</isNotEmpty>
			<isNotEmpty property="p_search_text">
				<isEqual property="p_search_gubun" compareValue="user_nm">
					<isNotEmpty property="auto_yn">
						and (UPPER(user_nm) LIKE UPPER('%'||#p_search_text#||'%') or UPPER(user_id) LIKE UPPER('%'||#p_search_text#||'%'))
					</isNotEmpty>
					<isEmpty property="auto_yn">	
						and (UPPER(user_nm) LIKE UPPER('%'||#p_search_text#||'%'))
					</isEmpty>
				</isEqual>
				<isEqual property="p_search_gubun" compareValue="duty_nm">
					and duty_nm LIKE '%'||#p_search_text#||'%'
				</isEqual>
				<isEqual property="p_search_gubun" compareValue="user_id">
					<isNotEmpty property="auto_yn">
						and (UPPER(user_nm) LIKE UPPER('%'||#p_search_text#||'%') or UPPER(user_id) LIKE UPPER('%'||#p_search_text#||'%'))
					</isNotEmpty>
					<isEmpty property="auto_yn">	
						and (UPPER(user_id) LIKE UPPER('%'||#p_search_text#||'%'))
					</isEmpty>
				</isEqual>
				<isEqual property="p_search_gubun" compareValue="dept_nm">
					and dept_nm LIKE '%'||#p_search_text#||'%'
				</isEqual>
				<isEqual property="p_search_gubun" compareValue="all">
					and (dept_nm LIKE '%'||#p_search_text#||'%' or UPPER(user_id) LIKE UPPER('%'||#p_search_text#||'%') or UPPER(user_nm) LIKE UPPER('%'||#p_search_text#||'%'))
				</isEqual>
			</isNotEmpty>
			
		) tb1
		
		<isNotEmpty property="pagingNum">
			OFFSET $startRowNum$ ROWS FETCH FIRST $pagingNum$ ROWS ONLY
		</isNotEmpty>
		
<!-- 		<isNotEmpty property="popup"> -->
<!-- 			<isNotEmpty property="startRowNum"> -->
<!-- 				WHERE row_num between #startRowNum# and #endRowNum# -->
<!-- 			</isNotEmpty> -->
<!-- 		</isNotEmpty>		 -->
	</select>
	
	
	<!-- 유저이력관리 -->
	<select id="userHistoryList" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > userHistoryList */
		SELECT
			tb1.USER_CD
			,tb1.USER_ID
			,tb1.USER_NM
			,tb1.FLAG
			,tb1.USER_GB
			,tb1.DEPT_CD
			,(select dept_nm from $SCHEMA$.EZ_dept where dept_cd = tb1.dept_cd ) AS dept_nm
			,tb1.DUTY_CD
			,(select duty_nm from $SCHEMA$.EZ_duty where duty_cd = tb1.duty_cd ) AS duty_nm
			,tb1.DEL_YN
			,tb1.RETIRE_YN
			,tb1.USER_EMAIL
			,tb1.USER_HP
			,tb1.USER_TEL
			,tb1.SELECT_DATA_CENTER_CODE
			,tb1.ACCOUNT_LOCK
			,tb1.INS_DATE
			,(SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE USER_CD = tb1.ins_user_cd) AS ins_user_cd
			,tb1.INS_USER_IP
			,tb1.UDT_DATE
			,(SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE USER_CD = tb1.udt_user_cd) AS udt_user_cd
			,tb1.UDT_USER_IP
			,tb1.SELECT_TABLE_NAME
			,tb1.SELECT_APPLICATION
			,tb1.SELECT_GROUP_NAME
			,tb1.USER_APPR_GB
			,tb1.REG_DATE
			,tb1.USER_IP
		FROM
			$SCHEMA$.EZ_USER_HISTORY tb1
			,$SCHEMA$.EZ_USER tb2
		WHERE 1=1
			AND tb1.user_cd = tb2.USER_CD
			<isNotEmpty property="p_search_text">
				<isEqual property="p_search_gubun" compareValue="user_nm">
					and (UPPER(tb1.user_nm) LIKE UPPER('%'||#p_search_text#||'%') or UPPER(tb1.user_id) LIKE UPPER('%'||#p_search_text#||'%'))
				</isEqual>
				<isEqual property="p_search_gubun" compareValue="duty_nm">
					and tb1.duty_nm LIKE '%'||#p_search_text#||'%'
				</isEqual>
				<isEqual property="p_search_gubun" compareValue="user_id">
					and (UPPER(tb1.user_id) LIKE UPPER('%'||#p_search_text#||'%') or UPPER(tb1.user_nm) LIKE UPPER('%'||#p_search_text#||'%'))
				</isEqual>
				<isEqual property="p_search_gubun" compareValue="dept_nm">
					and tb1.dept_nm LIKE '%'||#p_search_text#||'%'
				</isEqual>
			</isNotEmpty>
		ORDER BY tb1.reg_date
	</select>
	
	<!-- 로그인 이력 다운로드 -->
	<select id="userLoginHistoryList" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > userLoginHistoryList */
		SELECT 
			 to_char(a.ins_date, 'YYYY/MM/DD HH24:MI:SS') as ins_date
			,a.ins_user_cd
			,a.ins_user_ip
			,b.user_id
			,b.user_nm
		FROM $SCHEMA$.EZ_LOGIN_LOG a
		LEFT OUTER JOIN $SCHEMA$.EZ_USER b ON b.user_cd = a.ins_user_cd 
		WHERE 1=1
		<isNotEmpty property="p_search_text">
			<isEqual property="p_search_gubun" compareValue="user_nm">
					and (UPPER(b.user_nm) LIKE UPPER('%'||#p_search_text#||'%'))
			</isEqual>
			<isEqual property="p_search_gubun" compareValue="user_id">
					and (UPPER(b.user_id) LIKE UPPER('%'||#p_search_text#||'%'))
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="p_search_s_date">
				AND  to_char(a.ins_date, 'yyyymmdd') >= #p_search_s_date#
		</isNotEmpty>
		<isNotEmpty property="p_search_e_date">
				AND  to_char(a.ins_date, 'yyyymmdd') <![CDATA[ <= ]]> #p_search_e_date#
		</isNotEmpty>
		ORDER BY a.ins_date desc
	</select>
	
	<select id="userBatchList" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > userBatchList */
	
	SELECT   USER_ID
			,USER_NM
			,DEPT_ID
			,DEPT_NM
			,DUTY_ID
			,DUTY_NM
			,USER_EMAIL
			,USER_HP
			,USER_TEL
			,INS_DATE
	FROM $SCHEMA$.EZ_USER_BATCH
	WHERE 1=1
		
	</select>
	
	<!-- 폴더권한(이기준) -->
	<select id="userAuthList" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > userAuthList */
		select a.user_cd, a.user_id, b.folder_auth
		  from $SCHEMA$.ez_user a, $SCHEMA$.ez_user_folder b
		 where 1=1
		   and a.user_cd = b.user_cd

		   <isNotEmpty property="user_cd">
		   		<isEqual property="s_user_gb" compareValue="01">
		   	 		and a.user_cd = $user_cd$
		   	 	</isEqual>
		   </isNotEmpty>
		   
		   <isEmpty property="user_cd">
		  		<isEqual property="s_user_gb" compareValue="01">
			  		<isNotEmpty property="s_user_cd">
			   	 		and a.user_cd = $s_user_cd$
			  		</isNotEmpty>
				</isEqual>
		  </isEmpty>
		  
		  <isNotEmpty property="table_name">
		   		and b.folder_auth = (CASE WHEN INSTR(#table_name#, '/') > 0
		   								  THEN SUBSTR( #table_name#, 0, INSTR(#table_name#, '/') )
		   								  ELSE #table_name# END)
		  </isNotEmpty>

		   <isNotEmpty property="authPopup">
		   		<isNotEqual property="s_user_gb" compareValue="01">
		   	 		and a.user_cd = $user_cd$
		   	 	</isNotEqual>
		   </isNotEmpty>

	</select>
	
	<!-- 폴더권한복사 -->
	<select id="userFolAuthList" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > userFolAuthList */
		select a.user_cd, a.user_id, b.folder_auth as sched_table
		  		,(SELECT grp_desc FROM $SCHEMA$.EZ_APP_GRP_CODE WHERE grp_eng_nm = b.folder_auth and grp_depth = 1 and scode_cd = ( CASE WHEN INSTR(b.data_center, ',') > 0
																		   THEN SUBSTR(b.data_center, 0, INSTR(b.data_center, ',')-1)
																		   ELSE b.data_center END )) AS tab_nm
		  		,b.data_center
		  		,(select scode_nm from $SCHEMA$.ez_scode where scode_cd = ( CASE WHEN INSTR(b.data_center, ',') > 0
																		   THEN SUBSTR(b.data_center, 0, INSTR(b.data_center, ',')-1)
																		   ELSE b.data_center END )) as scode_nm
		from $SCHEMA$.ez_user a, $SCHEMA$.ez_user_folder b
		where 1=1
		and a.user_cd	= b.user_cd 
		and a.user_cd	= #user_cd# 
		
			<isNotEmpty property="data_center">
				AND b.data_center = #data_center#
			</isNotEmpty>
			<isNotEmpty property="table_of_def">
				AND b.folder = #table_of_def#
			</isNotEmpty>
		
		ORDER BY b.folder_auth
	</select>
	
	<select id="approvalLineList" resultClass="ApprovalLineBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalLineList */
	
	<!-- 테스트 모드에서는 아래 쿼리를 사용 
		SELECT 'U' AS line_gb, tb2.approval_seq, tb2.approval_gb, tb3.user_cd, tb3.user_id, tb3.user_nm,
			   (SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb3.dept_cd ) AS dept_nm,
			   (SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb3.duty_cd ) AS duty_nm
		  FROM $SCHEMA$.EZ_USER_APPROVAL_GROUP tb1, $SCHEMA$.EZ_USER_APPROVAL_LINE tb2, $SCHEMA$.EZ_USER tb3
		 WHERE tb1.owner_user_cd = #s_user_cd#
		   AND tb1.use_yn = 'Y'
		   AND tb1.line_grp_cd = tb2.line_grp_cd
		   AND tb2.approval_cd = tb3.user_cd
		 ORDER BY tb2.approval_seq
	-->
 	
 	<!-- 운영 모드에서는 아래 쿼리를 사용 -->
	 	SELECT 'U' AS line_gb, tb2.approval_seq, tb2.approval_gb, tb3.user_cd, tb3.user_id, tb3.user_nm,
			   (SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb3.dept_cd ) AS dept_nm,
			   (SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb3.duty_cd ) AS duty_nm,
			   '' AS group_line_grp_nm
		  FROM $SCHEMA$.EZ_USER_APPROVAL_GROUP tb1, $SCHEMA$.EZ_USER_APPROVAL_LINE tb2, $SCHEMA$.EZ_USER tb3
		 WHERE tb1.owner_user_cd =  #s_user_cd#
		   AND tb1.use_yn = 'Y'
		   AND tb1.line_grp_cd = tb2.line_grp_cd
		   AND tb2.approval_cd = tb3.user_cd
		 
		 UNION ALL
		 
		SELECT 'F' AS line_gb, tb1.approval_seq, tb1.approval_gb, 
			   (CASE WHEN tb1.approval_cd IS NULL THEN tb1.group_line_grp_cd ELSE tb1.approval_cd END) AS user_cd, 
			   tb2.user_id, tb2.user_nm, 
			   (CASE WHEN tb1.approval_cd IS NULL THEN 'GROUP' ELSE (select s2.dept_nm from $SCHEMA$.EZ_user s1, $SCHEMA$.EZ_dept s2 where s1.dept_cd = s2.dept_cd and s1.user_cd = tb1.approval_cd ) END) AS dept_nm,
			   (CASE WHEN tb1.approval_cd IS NULL THEN 'GROUP' ELSE (select s2.duty_nm from $SCHEMA$.EZ_user s1, $SCHEMA$.EZ_duty s2 where s1.duty_cd = s2.duty_cd and s1.user_cd = tb1.approval_cd ) END) AS duty_nm,
			   (CASE WHEN tb1.approval_cd IS NULL THEN (SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = tb1.group_line_grp_cd) ELSE '' END) AS group_line_grp_nm
		  FROM $SCHEMA$.EZ_ADMIN_APPROVAL_LINE tb1 LEFT OUTER JOIN $SCHEMA$.EZ_USER tb2 
		     ON tb1.approval_cd = tb2.user_cd
		 WHERE tb1.admin_line_grp_cd = (SELECT admin_line_grp_cd 
		 								  FROM $SCHEMA$.EZ_ADMIN_APPROVAL_GROUP 
		 								 WHERE use_yn = 'Y'
		 								 
		 								<isEqual property="doc_gb" compareValue="01">
											AND doc_gubun = '01'
										</isEqual>
										<isEqual property="doc_gb" compareValue="02">
											AND doc_gubun = '02'
										</isEqual>
										<isEqual property="doc_gb" compareValue="03">
											AND doc_gubun = '01'
										</isEqual>
										<isEqual property="doc_gb" compareValue="04">
											AND doc_gubun = '01'
										</isEqual>
										<isEqual property="doc_gb" compareValue="05">
											AND doc_gubun = '02'
										</isEqual>
										<isEqual property="doc_gb" compareValue="06">
											AND doc_gubun = '01'
										</isEqual>
										<isEqual property="doc_gb" compareValue="07">
											AND doc_gubun = '02'
										</isEqual>	
										<isEqual property="doc_gb" compareValue="08">
											AND doc_gubun = '01'
										</isEqual>
		 							   )
		   
		 ORDER BY line_gb DESC, approval_seq
 	
	</select>
	
	<select id="userApprovalLineList" resultClass="ApprovalLineBean" parameterClass="java.util.Map">
	/* ORACLE_T > userApprovalLineList */
	 	SELECT 'U' AS line_gb, tb2.approval_seq, tb2.approval_gb, tb3.user_cd, tb3.user_id, tb3.user_nm,
			   (SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb3.dept_cd ) AS dept_nm,
			   (SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb3.duty_cd ) AS duty_nm,
			   '' AS group_line_grp_nm
		  FROM $SCHEMA$.EZ_USER_APPROVAL_GROUP tb1, $SCHEMA$.EZ_USER_APPROVAL_LINE tb2, $SCHEMA$.EZ_USER tb3
		 WHERE tb1.owner_user_cd =  #s_user_cd#
		   AND tb1.use_yn = 'Y'
		   AND tb1.line_grp_cd = tb2.line_grp_cd
		   AND tb2.approval_cd = tb3.user_cd
		 ORDER BY line_gb DESC, approval_seq 	
	</select>

	<!-- approvalInfoList -->
	<select id="approvalInfoList" resultClass="ApprovalInfoBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalInfoList */
		select 
			t1.doc_cd
			,t1.seq
			,t1.user_cd
			<!-- , (CASE WHEN t1.dept_nm = 'GROUP' THEN (SELECT approval_cd FROM $SCHEMA$.EZ_GROUP_APPROVAL_LINE WHERE group_line_grp_cd = t1.user_cd AND approval_cd = #s_user_cd#) ELSE t1.user_cd END) AS user_cd -->
			,t2.user_id
			,t2.user_nm
			,t1.dept_nm
			,t1.duty_nm
			,t1.approval_cd
			,to_char(t1.approval_date,'YYYY/MM/DD HH24:MI:SS') AS approval_date
			,t1.approval_comment
		    ,t3.cur_approval_seq
		    ,t2.duty_cd
		    ,t1.udt_user_cd
		    ,( CASE WHEN TO_CHAR(t2.absence_start_date, 'yyyy-mm-dd') <![CDATA[ <= ]]> TO_CHAR(CURRENT_DATE, 'yyyy-mm-dd') 
                     	 AND TO_CHAR(t2.absence_end_date, 'yyyy-mm-dd') <![CDATA[ >= ]]> TO_CHAR(CURRENT_DATE, 'yyyy-mm-dd') THEN t2.absence_user_cd
                    ELSE 0 END ) AS absence_user_cd
            ,( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = (SELECT dept_cd FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.absence_user_cd) ) AS absence_dept_nm
            ,( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = (SELECT duty_cd FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.absence_user_cd) ) AS absence_duty_nm
            ,( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.absence_user_cd ) AS absence_user_nm
            
            , ( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = (SELECT dept_cd FROM $SCHEMA$.EZ_USER WHERE user_cd = t1.udt_user_cd) ) AS update_dept_nm
            , ( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = (SELECT duty_cd FROM $SCHEMA$.EZ_USER WHERE user_cd = t1.udt_user_cd) ) AS update_duty_nm
            , ( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = t1.udt_user_cd ) AS update_user_nm
            
            , line_gb, approval_gb 
            <!-- , (SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = t1.user_cd) AS group_line_grp_nm -->
            , (CASE WHEN t1.dept_nm = 'GROUP' THEN (SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = t1.user_cd) ELSE '' END) AS group_line_grp_nm
            , (CASE WHEN t1.dept_nm = 'GROUP' THEN (SELECT COUNT(*) FROM $SCHEMA$.EZ_GROUP_APPROVAL_LINE WHERE group_line_grp_cd = t1.user_cd AND approval_cd =  #s_user_cd#) ELSE 0 END) AS group_line_ok_cnt
            , t3.state_cd, t3.user_cd AS ins_user_cd
            , t1.approval_type
		from $SCHEMA$.EZ_approval_doc t1, $SCHEMA$.EZ_user t2, $SCHEMA$.EZ_doc_master t3
		where 1=1
		and t1.user_cd = t2.user_cd
		and t1.doc_cd = t3.doc_cd
		and t1.doc_cd = #doc_cd#
		order by t1.seq ASC
	</select>
	
	
	<!-- allDocInfoList -->
	
	<sql id="allDocInfoListInc">
	/* ORACLE_T > allDocInfoListInc */
		from $SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_user t2
		where 1=1
		and t1.del_yn = 'N'
		and t1.user_cd = t2.user_cd		
		
		<isNotEqual property="p_state_cd" compareValue="05">
			and state_cd = #p_state_cd#
		</isNotEqual>
		
		AND t1.jobgroup_id IS NULL
		AND t1.doc_cd = (CASE WHEN t1.main_doc_cd IS NOT NULL THEN t1.main_doc_cd ELSE t1.doc_cd END)
		
	) tt
		where 1=1
		<isNotEmpty property="p_s_doc_gb">
			<isEqual property="p_s_doc_gb" compareValue="01">
				and doc_gb in ('01','03','04')
			</isEqual>
			<isEqual property="p_s_doc_gb" compareValue="02">
				and doc_gb in ('02','05','07')
				<isNotEmpty property="p_task_nm">
					<isNotEqual property="p_task_nm" compareValue="05G">
						and doc_gb = #p_task_nm#
						and doc_group_id IS NULL
					</isNotEqual>
					<isEqual property="p_task_nm" compareValue="05G">
						and doc_gb = '05'
						and doc_group_id IS NOT NULL
					</isEqual>
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_s_doc_gb" compareValue="06">
				and doc_gb in ('06')
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="p_s_text">
			<isEqual property="p_s_gb" compareValue="01">
				and doc_cd like '%'||#p_s_text#||'%'
			</isEqual>
			<isEqual property="p_s_gb" compareValue="02">
				and title like '%'||#p_s_text#||'%'
			</isEqual>
			<isEqual property="p_s_gb" compareValue="03">
				and UPPER(job_name) like UPPER('%'||#p_s_text#||'%')
			</isEqual>
			<isEqual property="p_s_gb" compareValue="04">
				and (user_nm like '%'||#p_s_text#||'%' or user_id = #p_s_text#)
			</isEqual>
			<isEqual property="p_s_gb" compareValue="05">
				and description like '%'||#p_s_text#||'%'
			</isEqual>
		</isNotEmpty>
		
		<!--
		<isNotEmpty property="search_date">
			and search_ins_date = #search_date#
		</isNotEmpty>
		-->
		
		<isNotEmpty property="s_apply_cd">
			and apply_cd = #s_apply_cd#
		</isNotEmpty>
		
		<isNotEmpty property="p_s_search_date">
			<isEqual property="p_date_gubun" compareValue="01">
				and search_approval_date >= #p_s_search_date#
			</isEqual>
			<isEqual property="p_date_gubun" compareValue="02">
				and search_draft_date >= #p_s_search_date#
			</isEqual>		
		</isNotEmpty>
		<isNotEmpty property="p_e_search_date">
			<isEqual property="p_date_gubun" compareValue="01">
				and search_approval_date <![CDATA[ <= ]]> #p_e_search_date#
			</isEqual>
			<isEqual property="p_date_gubun" compareValue="02">
				and search_draft_date <![CDATA[ <= ]]> #p_e_search_date#
			</isEqual>
		</isNotEmpty>
		
	</sql>
	
	<select id="allDocInfoListCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > allDocInfoListCnt */
	<![CDATA[
		SELECT count(*) as total_count
		from 
		(select 
			t1.doc_cd
			,t1.doc_gb
			,(case when t1.doc_gb='01' then (select title from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select title from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select title from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select title from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select title from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select title from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select title from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select title from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
			 		else '' end) AS title
			,(case when t1.doc_gb='01' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select job_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select job_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select job_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select file_nm from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
			 		else '' end) AS job_name
			,(case when t1.doc_gb='01' then (select description from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select description from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select description from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select description from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then ''
					when t1.doc_gb='07' then (select description from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select description from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then ''
			 		else '' end) AS description
			, t2.user_nm, t2.user_id	
			,(case when t1.draft_date is not null then to_char(t1.draft_date,'YYYY/MM/DD') else to_char(t1.ins_date,'YYYY/MM/DD') end) AS search_ins_date
			, ( SELECT TO_CHAR(MAX(approval_date),'YYYY/MM/DD') AS approval_date FROM $SCHEMA$.EZ_APPROVAL_DOC WHERE doc_cd = t1.doc_cd ) AS search_approval_date
			,(case when t1.doc_gb='01' then  (select 'C' from dual)
					when t1.doc_gb='02' then (select 'C' from dual)
					when t1.doc_gb='03' then (select 'D' from dual)
					when t1.doc_gb='04' then (select 'U' from dual)
					when t1.doc_gb='06' then (select act_gb from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)					
			 		else '' end) AS task_type
			 ,t1.state_cd, t1.apply_cd, to_char(t1.apply_date,'YYYY/MM/DD HH24:MI:SS') as apply_date
			 ,t1.main_doc_cd
	]]>
		<include refid="allDocInfoListInc" />
	
	</select>
	
	<select id="allDocInfoList" resultClass="DocInfoBean" parameterClass="java.util.Map">
	/* ORACLE_T > allDocInfoList */
	<![CDATA[
		SELECT * FROM(
			SELECT rownum  as row_num, TTT.* FROM(
		
		select * from(
		select 
			t1.doc_cd
			,t1.doc_gb
			,t1.user_cd
			,t2.user_id
			,t2.user_nm
			,t1.dept_nm
			,t1.duty_nm
			,t1.cur_approval_seq
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') as draft_date
			,to_char(t1.ins_date,'YYYY/MM/DD HH24:MI:SS') as ins_date
		     ,(case when t1.draft_date is not null then to_char(t1.draft_date,'YYYY/MM/DD') else to_char(t1.ins_date,'YYYY/MM/DD') end) AS search_ins_date
			, ( SELECT TO_CHAR(MAX(approval_date),'YYYY/MM/DD') AS approval_date FROM $SCHEMA$.EZ_APPROVAL_DOC WHERE doc_cd = t1.doc_cd ) AS search_approval_date
			,t1.post_approval_yn
			,(case when t1.doc_gb='01' then (select title from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select title from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select title from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select title from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select title from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd and title != '')
					when t1.doc_gb='06' then (select title from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select title from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select title from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
			 		else '' end) as title
			,(case when t1.doc_gb='01' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select job_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select job_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select job_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select file_nm from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
			 		else '' end) as job_name
			,(case when t1.doc_gb='01' then (select description from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select description from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then ''
					when t1.doc_gb='04' then (select description from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then ''
					when t1.doc_gb='07' then (select description from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select description from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then ''
			 		else '' end) as description
			,t1.doc_group_id
			,(case when t1.doc_gb='01' then  (select 'C' from dual)
					when t1.doc_gb='02' then (select 'C' from dual)
					when t1.doc_gb='03' then (select 'D' from dual)
					when t1.doc_gb='04' then (select 'U' from dual)
					when t1.doc_gb='06' then (select act_gb from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)					
			 		else '' end) AS task_type
			 
			 ,t1.state_cd, t1.apply_cd, to_char(t1.apply_date,'YYYY/MM/DD HH24:MI:SS') as apply_date
			 ,t1.main_doc_cd
			 
	]]>
		<include refid="allDocInfoListInc" />
		order by DOC_CD desc
		
			)TTT
		) tb1
		
		
	</select>
	
	<sql id="myDocInfoListInc">
	/* ORACLE_T > myDocInfoListInc */
	
		from $SCHEMA$.EZ_DOC_MASTER t1
		LEFT OUTER JOIN $SCHEMA$.EZ_USER t2 ON t1.user_cd = t2.user_cd
		LEFT OUTER JOIN $SCHEMA$.EZ_APPROVAL_DOC t3 ON t1.DOC_CD = t3.DOC_CD AND t1.CUR_APPROVAL_SEQ = t3.SEQ
		
		<isNotEmpty property="p_s_text">
			<isEqual property="p_s_gb" compareValue="06">
				<isNotEmpty property="p_s_doc_gb">
					<isEqual property="p_s_doc_gb" compareValue="01">
						LEFT OUTER JOIN ( SELECT DOC_CD FROM $SCHEMA$.EZ_DOC_01  GROUP BY DOC_CD ) t3 ON t1.DOC_CD = t3.DOC_CD
						LEFT OUTER JOIN ( SELECT DOC_CD FROM $SCHEMA$.EZ_DOC_03  GROUP BY DOC_CD ) t4 ON t1.DOC_CD = t4.DOC_CD
						LEFT OUTER JOIN ( SELECT DOC_CD FROM $SCHEMA$.EZ_DOC_04  GROUP BY DOC_CD ) t5 ON t1.DOC_CD = t5.DOC_CD
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="03">
						, ( SELECT DOC_CD FROM $SCHEMA$.EZ_DOC_01  GROUP BY DOC_CD ) t2
						, ( SELECT DOC_CD FROM $SCHEMA$.EZ_DOC_03  GROUP BY DOC_CD ) t3
						, ( SELECT DOC_CD FROM $SCHEMA$.EZ_DOC_04  GROUP BY DOC_CD ) t4
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="04">
						, ( SELECT DOC_CD FROM $SCHEMA$.EZ_DOC_01  GROUP BY DOC_CD ) t2
						, ( SELECT DOC_CD FROM $SCHEMA$.EZ_DOC_03  GROUP BY DOC_CD ) t3
						, ( SELECT DOC_CD FROM $SCHEMA$.EZ_DOC_04  GROUP BY DOC_CD ) t4
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="02">
						, ( SELECT DOC_CD, JOB_NAME FROM $SCHEMA$.EZ_DOC_02  GROUP BY DOC_CD, JOB_NAME ) t2
						, ( SELECT DOC_CD, JOB_NAME FROM $SCHEMA$.EZ_DOC_05  GROUP BY DOC_CD, JOB_NAME ) t3
						, ( SELECT DOC_CD, JOB_NAME FROM $SCHEMA$.EZ_DOC_07  GROUP BY DOC_CD, JOB_NAME ) t4
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="06">
						, ( SELECT DOC_CD FROM $SCHEMA$.EZ_DOC_06_DETAIL where UPPER(JOB_NAME) LIKE UPPER('%'||#p_s_text#||'%') GROUP BY DOC_CD ) detail_t
					</isEqual>
				</isNotEmpty>
			</isEqual>			
		</isNotEmpty>
		
		<!-- 엑셀일괄에서 작업설명으로 검색 -->
		<isNotEmpty property="p_s_text">
			<isEqual property="p_s_gb" compareValue="05">				
				<isEqual property="p_s_doc_gb" compareValue="06">
					, ( SELECT DOC_CD FROM $SCHEMA$.EZ_DOC_06_DETAIL where DESCRIPTION LIKE '%'||#p_s_text#||'%' GROUP BY DOC_CD ) detail_t
				</isEqual>
			</isEqual>
		</isNotEmpty>
		
		where 1=1
		and t1.del_yn = 'N'
		
		<isNotEqual property="p_s_state_cd" compareValue="05">
		<isNotEqual property="p_s_state_cd" compareValue="10">
			and state_cd = #p_s_state_cd#
		</isNotEqual>
		</isNotEqual>
		<isEqual property="p_s_state_cd" compareValue="10">
			and apply_cd = '01'
<!-- 반영대기에 일별오더목록도 보이게 변경(반영취소 가능하도록 수정)	and doc_gb != '08' -->
		</isEqual>
		<isNotEmpty property="p_s_apply_cd">
		<isNotEqual property="p_s_apply_cd" compareValue="99">
			and apply_cd = #p_s_apply_cd#
		</isNotEqual>
		</isNotEmpty>
		
		<isNotEmpty property="p_check_approval_yn">
			<isEqual property="p_check_approval_yn" compareValue="Y">
				and post_approval_yn = #p_check_approval_yn#
			</isEqual>
			<isEqual property="p_check_approval_yn" compareValue="N">
				and post_approval_yn = #p_check_approval_yn#
			</isEqual>
			<isEqual property="p_check_approval_yn" compareValue="A">
				and post_approval_yn = #p_check_approval_yn#
			</isEqual>
		</isNotEmpty>
		
		<isNotEmpty property="p_approval_state">
			<isEqual property="p_approval_state" compareValue="01">
				and state_cd = #p_approval_state#
			</isEqual>
			<isEqual property="p_approval_state" compareValue="02">
				and state_cd = #p_approval_state#
			</isEqual>
		</isNotEmpty>
		<isEmpty property="p_doc_cd_list">
		AND (t1.jobgroup_id IS NULL or t1.jobgroup_id = '')
		AND t1.doc_cd = (CASE WHEN t1.main_doc_cd IS NOT NULL THEN t1.main_doc_cd ELSE t1.doc_cd END)
		</isEmpty>
		<isNotEmpty property="p_doc_cd_list" open="(" close=")" prepend="and">
			<iterate property="p_doc_cd_list" conjunction="OR">
				t1.doc_cd = #p_doc_cd_list[]#
			</iterate>
		</isNotEmpty>
		
		<!-- 엑셀일괄에서 작업설명으로 검색 -->
		<isNotEmpty property="p_s_text">
			<isEqual property="p_s_gb" compareValue="05">				
				<isEqual property="p_s_doc_gb" compareValue="06">
					and t1.DOC_CD = detail_t.DOC_CD
				</isEqual>
			</isEqual>
		</isNotEmpty>		
		
		) tt

		LEFT OUTER JOIN $SCHEMA$.EZ_JOB_MAPPER tt2 ON tt.job_name = tt2.job

		where 1=1
		
		<isNotEmpty property="data_center">
			<isNotEqual property="p_s_doc_gb" compareValue="17">
			and tt.data_center = #data_center#
			</isNotEqual>
		</isNotEmpty>
		
		<!-- 부서별조회 풀어 놓음 2018-05-06 -->
		<!-- <isEqual property="s_user_gb" compareValue="01"> -->
		<isEqual property="s_user_gb" compareValue="05">
			<isEqual property="p_s_doc_gb" compareValue="02">
			and dept_cd = $s_dept_cd$
			</isEqual>
		</isEqual>
		
		<isNotEmpty property="p_s_doc_gb">
			<isEqual property="p_s_doc_gb" compareValue="01">
				and doc_gb in ('01','03','04')
				<isNotEmpty property="p_task_nm">
					and doc_gb = #p_task_nm#
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_s_doc_gb" compareValue="03">
				and doc_gb in ('01','03','04')
				<isNotEmpty property="p_task_nm">
					and doc_gb = #p_task_nm#
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_s_doc_gb" compareValue="04">
				and doc_gb in ('01','03','04')
				<isNotEmpty property="p_task_nm">
					and doc_gb = #p_task_nm#
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_s_doc_gb" compareValue="02">
				and doc_gb in ('02','05','07')
				<isNotEmpty property="p_task_nm">
					<isNotEqual property="p_task_nm" compareValue="05G">
					and doc_gb = #p_task_nm#
						<!-- and doc_group_id IS NULL -->
					</isNotEqual>
					<isEqual property="p_task_nm" compareValue="05G">
						and doc_gb = '05'
						and doc_group_id IS NOT NULL
					</isEqual>
				</isNotEmpty>
				<isNotEmpty property="p_susitype">
					and (SELECT susitype FROM $SCHEMA$.EZ_doc_02 WHERE doc_cd = tt.doc_cd) = #p_susitype#
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_s_doc_gb" compareValue="06">
				and doc_gb in ('06')
				<isNotEmpty property="p_task_nm">
					and task_type = #p_task_nm#
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_s_doc_gb" compareValue="99">
				<isNotEmpty property="p_task_nm">
					<isNotEqual property="p_task_nm" compareValue="05G">
						and doc_gb = #p_task_nm#
						<!-- and doc_group_id IS NULL -->
					</isNotEqual>
					<isEqual property="p_task_nm" compareValue="05G">
						and doc_gb = '05'
						and doc_group_id IS NOT NULL
					</isEqual>
				</isNotEmpty>
			</isEqual>
		</isNotEmpty>
		<isEmpty property="p_doc_cd_list">
		<isNotEmpty property="p_s_text">
			<isEqual property="p_s_gb" compareValue="01">
				and doc_cd like '%'||#p_s_text#||'%'
			</isEqual>
			<isEqual property="p_s_gb" compareValue="02">
				and title like '%'||#p_s_text#||'%'
			</isEqual>
			<isEqual property="p_s_gb" compareValue="03">
				and job_name like '%'||#p_s_text#||'%'
			</isEqual>
			<isEqual property="p_s_gb" compareValue="04">
				and user_nm like '%'||#p_s_text#||'%'
			</isEqual>
			
			<isEqual property="p_s_gb" compareValue="05">			
				<!-- 엑셀일괄은 제외(요청서 안의 다 건의 작업이 검색 대상) -->
				<isNotEqual property="p_s_doc_gb" compareValue="06">
					and tt.description like '%'||#p_s_text#||'%'
				</isNotEqual>
			</isEqual>
			<isEqual property="p_s_gb" compareValue="07">
				and (SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tt.dept_cd) like '%'||#p_s_text#||'%'
			</isEqual>	
			<isEqual property="p_s_gb" compareValue="06">
				<isNotEmpty property="p_s_doc_gb">
					<isEqual property="p_s_doc_gb" compareValue="01">
						and JOB_NAME like '%'||#p_s_text#||'%'
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="03">
						and JOB_NAME like '%'||#p_s_text#||'%'
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="04">
						and JOB_NAME like '%'||#p_s_text#||'%'
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="05">
						and JOB_NAME like '%'||#p_s_text#||'%'
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="07">
						and JOB_NAME like '%'||#p_s_text#||'%'
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="00">
						and JOB_NAME like '%'||#p_s_text#||'%'
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="99">
						and JOB_NAME like '%'||#p_s_text#||'%'
					</isEqual>
				</isNotEmpty>
				
			</isEqual>				
		</isNotEmpty>
		</isEmpty>

		<isNotEmpty property="p_s_search_date">
			and search_ins_date <![CDATA[ >= ]]> #p_s_search_date#
		</isNotEmpty>
		<isNotEmpty property="p_e_search_date">
			and search_ins_date <![CDATA[ <= ]]> #p_e_search_date#
		</isNotEmpty>
		<isNotEmpty property="p_s_search_date2">
			and s_apply_date <![CDATA[ >= ]]> #p_s_search_date2#
		</isNotEmpty>
		<isNotEmpty property="p_e_search_date2">
			and s_apply_date <![CDATA[ <= ]]> #p_e_search_date2#
		</isNotEmpty>

		<isNotEmpty property="p_critical" prepend="AND">
			critical = #p_critical#
		</isNotEmpty>
		<!-- 네이버 요건 : 사용자가 선택한 기본 테이블명만 조회 가능 / 운영자 권한의 사용자는 제한없음  (2020.08.05, 김수정) -->
		<isNotEmpty property="p_sched_table">
			and tt.sched_table = #p_sched_table#
		</isNotEmpty>

	</sql>
	
	<select id="myDocInfoList" resultClass="DocInfoBean" parameterClass="java.util.Map">
	/* ORACLE_T > myDocInfoList */
		SELECT * FROM(
			SELECT rownum as row_num, TTT.* FROM(
		
		select tt.*,
			   ( CASE WHEN INSTR(tt.data_center, ',') > 0 
				   	   THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(tt.data_center, 1, INSTR(tt.data_center, ',')-1)) 
				      ELSE tt.data_center END ) AS data_center_name,
		      (SELECT line_gb || ',' || approval_gb line_approval
				  FROM $SCHEMA$.EZ_APPROVAL_DOC 
				 WHERE seq = (select min(seq) from $SCHEMA$.ez_approval_doc where doc_cd = tt.doc_cd and approval_cd = '01') 
				   AND doc_cd = tt.doc_cd) as line_approval,
			   (SELECT line_gb || ',' || approval_gb line_approval
				  FROM $SCHEMA$.EZ_APPROVAL_DOC 
				 WHERE approval_cd = '04'
				   AND doc_cd = tt.doc_cd) as return_line_approval
				<!-- 작업종류(정시/수시), 결재자, 결재일자, 반려자, 반려일자 추가 (2020.08.04, 김수정) -->
				,TT2.JOBSCHEDGB
				,(SELECT (select user_nm from $SCHEMA$.ez_user where user_cd = A.udt_user_cd)
					FROM $SCHEMA$.EZ_APPROVAL_DOC A
					WHERE A.DOC_CD = TT.DOC_CD
						AND A.SEQ = (SELECT MAX(SEQ) FROM $SCHEMA$.EZ_APPROVAL_DOC WHERE DOC_CD = TT.DOC_CD AND APPROVAL_CD = '02')) as approval_user_nm
				,(SELECT TO_CHAR(A.APPROVAL_DATE,'YYYY/MM/DD HH24:MI:SS')
					FROM $SCHEMA$.EZ_APPROVAL_DOC A
					WHERE A.DOC_CD = TT.DOC_CD
						AND A.SEQ = (SELECT MAX(SEQ) FROM $SCHEMA$.EZ_APPROVAL_DOC WHERE DOC_CD = TT.DOC_CD AND APPROVAL_CD = '02')) as approval_date
				,(SELECT (select user_nm from $SCHEMA$.ez_user where user_cd = A.udt_user_cd)
					FROM $SCHEMA$.EZ_APPROVAL_DOC A 
					WHERE A.DOC_CD = TT.DOC_CD AND A.APPROVAL_CD = '04') as reject_user_nm
				,(SELECT TO_CHAR(A.APPROVAL_DATE,'YYYY/MM/DD HH24:MI:SS') FROM $SCHEMA$.EZ_APPROVAL_DOC A  WHERE A.DOC_CD = TT.DOC_CD AND A.APPROVAL_CD = '04') as reject_date
				,(SELECT A.approval_comment FROM $SCHEMA$.EZ_APPROVAL_DOC A  WHERE A.DOC_CD = TT.DOC_CD AND A.APPROVAL_CD = '04') as reject_comment
		from(
		select 
			t1.doc_cd
			,t1.doc_gb
			,t1.doc_group_id
			,t1.user_cd
			, t2.user_nm
			, t2.user_id
			, t2.dept_cd
			,(select dept_nm from $SCHEMA$.ez_dept where dept_cd = t2.dept_cd) dept_nm
			,t1.cur_approval_seq
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') AS draft_date
			,to_char(t1.ins_date,'YYYY/MM/DD HH24:MI:SS') AS ins_date
			,(case when t1.draft_date is not null then to_char(t1.draft_date,'YYYYMMDD') else to_char(t1.ins_date,'YYYYMMDD') end) AS search_ins_date
			,t1.post_approval_yn
			,(CASE WHEN t3.dept_nm != 'GROUP' then (SELECT user_nm FROM $SCHEMA$.ez_user WHERE user_cd = t3.user_cd) ELSE ''  END) AS alarm_user
			,CASE WHEN t3.dept_nm = 'GROUP' then (SELECT GROUP_LINE_GRP_NM  FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE GROUP_LINE_GRP_CD = t3.group_line_grp_cd) ELSE ''  END detail_status
			,(case when t1.doc_gb='01' then (select title from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select title from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select title from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select title from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select title from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select title from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select title from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select title from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select title from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
					when t1.doc_gb='10' then (select error_description from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
			 		else '' end) AS title
			,(case when t1.doc_gb='01' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select job_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select job_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select job_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select file_nm from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select job_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select job_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select job_name from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
					when t1.doc_gb='10' then (select job_name from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
			 		else '' end) AS job_name
			,(case when t1.doc_gb='01' then (select description from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select description from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select description from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select description from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select description from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select description from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select description from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					when t1.doc_gb='10' then (select b.description from $SCHEMA$.ez_doc_10 a, DEF_JOB b where a.doc_cd=t1.doc_cd and a.job_name = b.job_name)
			 		else '' end) AS description
			,(case when t1.doc_gb='01' then (select data_center from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select data_center from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select  data_center from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select data_center from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select data_center from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select data_center from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select data_center from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select data_center from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select data_center from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
					when t1.doc_gb='10' then (select data_center from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
			        else '' end) AS data_center
			,(case when t1.doc_gb='01' then (select apply_date from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
				when t1.doc_gb='02' then (select apply_date from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
				when t1.doc_gb='03' then (select apply_date from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
				when t1.doc_gb='04' then (select apply_date from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
				when t1.doc_gb='05' then (select order_date from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
				when t1.doc_gb='06' then (select apply_date from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
				when t1.doc_gb='07' then (select apply_date from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
				when t1.doc_gb='09' then (select apply_date from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
				else '' end) AS apply_exe_date

			,(case when t1.doc_gb='01' then (select application from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select application from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select  application from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select application from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
<!-- 					when t1.doc_gb='05' then (select '' from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd) -->
<!-- 					when t1.doc_gb='06' then (select '' from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd) -->
					when t1.doc_gb='07' then (select application from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select application from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			        else '' end) AS application

			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check = 'Y' and t1.apply_cd = '02')
			        else 0 end) AS s_cnt
			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check = 'E' and t1.apply_cd = '02')
			        else 0 end) AS e_cnt
			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check is null and t1.apply_cd = '02')
			        else 0 end) AS w_cnt
			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check = 'R' and t1.apply_cd = '02')
			        else 0 end) AS r_cnt
			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and t1.apply_cd = '02')						
		        	else 0 end) AS total_cnt
		    ,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check != 'Y' and t1.apply_cd = '02')						
		        	else 0 end) AS fail_cnt        
			        
 			,(case when t1.doc_gb='05' and t1.doc_group_id != '' then (SELECT count(doc_cd) FROM $SCHEMA$.EZ_DOC_MASTER WHERE MAIN_DOC_CD=t1.doc_cd AND APPLY_CD='04')
 					when t1.doc_gb='09' then (SELECT count(doc_cd) FROM $SCHEMA$.EZ_DOC_MASTER WHERE MAIN_DOC_CD=t1.doc_cd AND APPLY_CD='04')
 			    	else (SELECT count(doc_cd) FROM $SCHEMA$.EZ_DOC_MASTER WHERE doc_cd=t1.doc_cd AND APPLY_CD='04') end) AS apply_fail_cnt

			,t1.state_cd, t1.apply_cd, to_char(t1.apply_date,'YYYY/MM/DD HH24:MI:SS') AS apply_date
			,to_char(t1.apply_date,'YYYYMMDD') AS search_apply_date
			,(case when t1.doc_gb='05' then t1.doc_cd
					when t1.doc_gb='09' then t1.doc_cd else '' end) main_doc_cd
			,(case when t1.doc_gb='03' then (select job_id from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select job_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
			 		else 0 end) AS job_id
			  ,(case when t1.doc_gb='03' then (select table_id from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select table_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd) else 0 end) AS table_id

			,(case when t1.doc_gb='01' then (select table_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select table_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select  table_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select table_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select table_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select table_name from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and seq = '1')
					when t1.doc_gb='07' then (select table_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select table_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			        else '' end) AS sched_table
        	,(case when t1.doc_gb='02' then (select t_general_date from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select order_date from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select '20' || odate from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select order_date from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			 		else '' end) AS odate
	        ,(case when t1.doc_gb='01' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_01 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
	        		when t1.doc_gb='02' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_02 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
	        		when t1.doc_gb='03' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_03 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
	        		when t1.doc_gb='04' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_04 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1,  $SCHEMA$.EZ_doc_06 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
			 		else '' end) AS s_apply_date
			,(case when t1.doc_gb='06' then (select act_gb from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select after_status from $SCHEMA$.EZ_doc_07 tb1 where tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select doc_gb from $SCHEMA$.EZ_doc_09 tb1 where tb1.doc_cd=t1.doc_cd)
					else '' end) AS task_nm_detail
			 ,(CASE WHEN t1.doc_gb='05' and doc_group_id is not null THEN (SELECT count(doc_cd) FROM $SCHEMA$.ez_doc_master tb1 WHERE t1.doc_cd = tb1.main_doc_cd)
		 			WHEN t1.doc_gb='09' THEN (SELECT count(doc_cd) FROM $SCHEMA$.ez_doc_master tb1 WHERE t1.doc_cd = tb1.main_doc_cd)
					else 0 end) AS doc_cnt
			,(case when t1.doc_gb='09' then (select doc_gb from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
					else '' end) AS ori_doc_gb
			,(case when t1.doc_gb='01' then (select task_type from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select task_type from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select task_type from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select task_type from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
			 		else '' end) AS task_type
		<include refid="myDocInfoListInc" />
		order by DOC_CD desc

			)TTT
			where 1=1
		) tb1

		<isNotEmpty property="pagingNum">
			OFFSET $startRowNum$ ROWS FETCH FIRST $pagingNum$ ROWS ONLY
		</isNotEmpty>

	</select>


	<select id="myDocInfoListCnt" resultClass="Commonbean" parameterClass="java.util.Map">
	/* ORACLE_T > myDocInfoListCnt */
		SELECT count(1) as total_cnt FROM(
			SELECT rownum as row_num, TTT.* FROM(

		select tt.*,
			   ( CASE WHEN INSTR(tt.data_center, ',') > 0
				   	   THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(tt.data_center, 1, INSTR(tt.data_center, ',')-1))
				      ELSE tt.data_center END ) AS data_center_name,
		      (SELECT line_gb || ',' || approval_gb line_approval
				  FROM $SCHEMA$.EZ_APPROVAL_DOC
				 WHERE seq = (select min(seq) from $SCHEMA$.ez_approval_doc where doc_cd = tt.doc_cd and approval_cd = '01')
				   AND doc_cd = tt.doc_cd) as line_approval,
			   (SELECT line_gb || ',' || approval_gb line_approval
				  FROM $SCHEMA$.EZ_APPROVAL_DOC
				 WHERE approval_cd = '04'
				   AND doc_cd = tt.doc_cd) as return_line_approval
				<!-- 작업종류(정시/수시), 결재자, 결재일자, 반려자, 반려일자 추가 (2020.08.04, 김수정) -->
				,TT2.JOBSCHEDGB
				,(SELECT (select user_nm from $SCHEMA$.ez_user where user_cd = A.udt_user_cd)
					FROM $SCHEMA$.EZ_APPROVAL_DOC A
					WHERE A.DOC_CD = TT.DOC_CD
						AND A.SEQ = (SELECT MAX(SEQ) FROM $SCHEMA$.EZ_APPROVAL_DOC WHERE DOC_CD = TT.DOC_CD AND APPROVAL_CD = '02')) as approval_user_nm
				,(SELECT TO_CHAR(A.APPROVAL_DATE,'YYYY/MM/DD HH24:MI:SS')
					FROM $SCHEMA$.EZ_APPROVAL_DOC A
					WHERE A.DOC_CD = TT.DOC_CD
						AND A.SEQ = (SELECT MAX(SEQ) FROM $SCHEMA$.EZ_APPROVAL_DOC WHERE DOC_CD = TT.DOC_CD AND APPROVAL_CD = '02')) as approval_date
				,(SELECT (select user_nm from $SCHEMA$.ez_user where user_cd = A.udt_user_cd)
					FROM $SCHEMA$.EZ_APPROVAL_DOC A
					WHERE A.DOC_CD = TT.DOC_CD AND A.APPROVAL_CD = '04') as reject_user_nm
				,(SELECT TO_CHAR(A.APPROVAL_DATE,'YYYY/MM/DD HH24:MI:SS') FROM $SCHEMA$.EZ_APPROVAL_DOC A  WHERE A.DOC_CD = TT.DOC_CD AND A.APPROVAL_CD = '04') as reject_date
				,(SELECT A.approval_comment FROM $SCHEMA$.EZ_APPROVAL_DOC A  WHERE A.DOC_CD = TT.DOC_CD AND A.APPROVAL_CD = '04') as reject_comment
		from(
		select
			t1.doc_cd
			,t1.doc_gb
			,t1.doc_group_id
			,t1.user_cd
			, t2.user_nm
			, t2.user_id
			, t2.dept_cd
			,(select dept_nm from $SCHEMA$.ez_dept where dept_cd = t2.dept_cd) dept_nm
			,t1.cur_approval_seq
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') AS draft_date
			,to_char(t1.ins_date,'YYYY/MM/DD HH24:MI:SS') AS ins_date
			,(case when t1.draft_date is not null then to_char(t1.draft_date,'YYYYMMDD') else to_char(t1.ins_date,'YYYYMMDD') end) AS search_ins_date
			,t1.post_approval_yn
			,(CASE WHEN t3.dept_nm != 'GROUP' then (SELECT user_nm FROM $SCHEMA$.ez_user WHERE user_cd = t3.user_cd) ELSE ''  END) AS alarm_user
			,CASE WHEN t3.dept_nm = 'GROUP' then (SELECT GROUP_LINE_GRP_NM  FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE GROUP_LINE_GRP_CD = t3.group_line_grp_cd) ELSE ''  END detail_status
			,(case when t1.doc_gb='01' then (select title from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select title from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select title from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select title from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select title from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select title from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select title from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select title from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select title from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
					when t1.doc_gb='10' then (select error_description from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
					else '' end) AS title
			,(case when t1.doc_gb='01' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select job_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select job_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select job_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select file_nm from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select job_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select job_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select job_name from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
					when t1.doc_gb='10' then (select job_name from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
			 		else '' end) AS job_name
			,(case when t1.doc_gb='01' then (select description from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select description from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select description from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select description from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select description from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select description from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select description from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			 		else '' end) AS description
			,(case when t1.doc_gb='01' then (select data_center from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select data_center from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select  data_center from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select data_center from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select data_center from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select data_center from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select data_center from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select data_center from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select data_center from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
					when t1.doc_gb='10' then (select data_center from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
			        else '' end) AS data_center

			,(case when t1.doc_gb='01' then (select application from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select application from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select  application from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select application from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select '' from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select '' from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select application from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select application from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			        else '' end) AS application      		

			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check = 'Y' and t1.apply_cd = '02')
			        else 0 end) AS s_cnt
			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check = 'E' and t1.apply_cd = '02')						
			        else 0 end) AS e_cnt
			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check is null and t1.apply_cd = '02')						
			        else 0 end) AS w_cnt
			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check = 'R' and t1.apply_cd = '02')						
			        else 0 end) AS r_cnt

			,(case when t1.doc_gb='05' and t1.doc_group_id != '' then (SELECT count(doc_cd) FROM $SCHEMA$.EZ_DOC_MASTER WHERE MAIN_DOC_CD=t1.doc_cd AND APPLY_CD='04')
					when t1.doc_gb='09' then (SELECT count(doc_cd) FROM $SCHEMA$.EZ_DOC_MASTER WHERE MAIN_DOC_CD=t1.doc_cd AND APPLY_CD='04')
					else (SELECT count(doc_cd) FROM $SCHEMA$.EZ_DOC_MASTER WHERE doc_cd=t1.doc_cd AND APPLY_CD='04') end) AS apply_fail_cnt

			,t1.state_cd, t1.apply_cd, to_char(t1.apply_date,'YYYY/MM/DD HH24:MI:SS') AS apply_date
			,to_char(t1.apply_date,'YYYYMMDD') AS search_apply_date
			,(case when t1.doc_gb='05' then t1.doc_cd
					when t1.doc_gb='09' then t1.doc_cd else '' end) main_doc_cd
			,(case when t1.doc_gb='03' then (select job_id from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select job_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
			 		else 0 end) AS job_id
			  ,(case when t1.doc_gb='03' then (select table_id from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select table_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd) else 0 end) AS table_id
					
			,(case when t1.doc_gb='01' then (select table_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select table_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select  table_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select table_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select table_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select table_name from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and seq = '1')
					when t1.doc_gb='07' then (select table_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select table_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			        else '' end) AS sched_table
        	,(case when t1.doc_gb='02' then (select t_general_date from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select order_date from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select '20' || odate from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select order_date from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			 		else '' end) AS odate
	        ,(case when t1.doc_gb='01' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_01 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
	        		when t1.doc_gb='02' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_02 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
	        		when t1.doc_gb='03' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_03 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
	        		when t1.doc_gb='04' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_04 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1,  $SCHEMA$.EZ_doc_06 tb2 where tb1. doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
			 		else '' end) AS s_apply_date
			 ,(case when t1.doc_gb='06' then (select act_gb from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select after_status from $SCHEMA$.EZ_doc_07 tb1 where tb1.doc_cd=t1.doc_cd)
					else '' end) AS task_nm_detail

			 ,(CASE WHEN t1.doc_gb='05' and doc_group_id is not null THEN (SELECT count(doc_cd) FROM $SCHEMA$.ez_doc_master tb1 WHERE t1.doc_cd = tb1.main_doc_cd)
		 			WHEN t1.doc_gb='09' THEN (SELECT count(doc_cd) FROM $SCHEMA$.ez_doc_master tb1 WHERE t1.doc_cd = tb1.main_doc_cd)
					else 0 end) AS doc_cnt
			,(case when t1.doc_gb='01' then (select node_id from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select node_id from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select node_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					else '' end) AS host_id

		<include refid="myDocInfoListInc" />
		order by DOC_CD desc
		
			)TTT
			where 1=1
		) tb1

	</select>

	<!-- approvalDocInfoList -->
	<sql id="approvalDocInfoListInc">
	/* ORACLE_T > approvalDocInfoListInc */
		from $SCHEMA$.EZ_DOC_MASTER t1
			LEFT OUTER JOIN ( SELECT doc_cd, LISTAGG(batchjobgrade, ',') WITHIN GROUP (ORDER BY job) AS all_batchjobgrade FROM $SCHEMA$.EZ_JOB_MAPPER_DOC GROUP BY doc_cd ) tt1 on t1.doc_cd = tt1.doc_cd
			INNER JOIN $SCHEMA$.EZ_APPROVAL_DOC t2 on t1.doc_cd = t2.doc_cd
			INNER JOIN $SCHEMA$.EZ_USER t3 on t1.user_cd = t3.user_cd
			LEFT OUTER JOIN $SCHEMA$.EZ_USER t4 ON t2.user_cd = t4.user_cd
		where 1=1
		and t1.del_yn = 'N'
		and (
			t2.user_cd = (CASE WHEN t2.dept_nm = 'GROUP' THEN '' ELSE #s_user_cd# END)
			OR (t2.approval_cd = '01' AND t4.absence_user_cd = #s_user_cd#
										AND TO_CHAR(t4.absence_start_date, 'yyyy-mm-dd') <![CDATA[ <= ]]> TO_CHAR(CURRENT_DATE, 'yyyy-mm-dd')
										AND TO_CHAR(t4.absence_end_date, 'yyyy-mm-dd') <![CDATA[ >= ]]> TO_CHAR(CURRENT_DATE, 'yyyy-mm-dd'))
              OR (#s_user_cd# IN (SELECT approval_cd FROM $SCHEMA$.EZ_GROUP_APPROVAL_LINE WHERE group_line_grp_cd = t2.user_cd and t2.dept_nm = 'GROUP')
				<!-- grp_approval_userList에 해당하는 결재자에게만 노출(23.03.10 신한캐피탈) -->
				and #s_user_cd# IN (select REGEXP_SUBSTR(t2.grp_approval_userlist, '[^,]+', 1, LEVEL)
							  		from dual
							  		CONNECT BY REGEXP_SUBSTR(t2.grp_approval_userlist, '[^,]+', 1, LEVEL) IS NOT NULL)
				)
			)
		<isNotEqual property="p_s_approval_cd" compareValue="05">
			and t2.approval_cd = #p_s_approval_cd#
		</isNotEqual>
		 and (t1.apply_cd != '03' or t1.apply_cd is null or t1.apply_cd = '')
		<!--<isNotEqual property="p_s_apply_cd" compareValue="99">
			and apply_cd = #p_s_apply_cd#
		</isNotEqual>-->
		<isEmpty property="p_doc_cd_list">
		AND (t1.jobgroup_id IS NULL or t1.jobgroup_id = '')
		AND t1.doc_cd = (CASE WHEN t1.main_doc_cd IS NOT NULL THEN t1.main_doc_cd ELSE t1.doc_cd END)
		</isEmpty>
		<isNotEmpty property="p_doc_cd_list" open="(" close=")" prepend="and">
			<iterate property="p_doc_cd_list" conjunction="OR">
				t1.doc_cd = #p_doc_cd_list[]#
			</iterate>
		</isNotEmpty>
		<isEqual prepend="and" property="p_s_approval_cd" compareValue="01">
			t1.cur_approval_seq = t2.seq
		</isEqual>

	) tt
		left outer join $SCHEMA$.EZ_JOB_MAPPER tt2  on tt.job_name = tt2.job

		where 1=1
		
		<isNotEmpty property="data_center">
			and tt.data_center = #data_center#
		</isNotEmpty>
		
		<isNotEmpty property="p_s_doc_gb">
			<isNotEmpty property="p_task_nm">
				<isNotEqual property="p_task_nm" compareValue="05G">
					and doc_gb = #p_task_nm#
					and doc_group_id IS NULL
				</isNotEqual>
				<isEqual property="p_task_nm" compareValue="05G">
					and doc_gb = '05'
					and doc_group_id IS NOT NULL
				</isEqual>
			</isNotEmpty>
		</isNotEmpty>
		<isEmpty property="p_doc_cd_list">
		<isNotEmpty property="p_s_text">
			<isEqual property="p_s_gb" compareValue="01">
				and doc_cd like '%'||#p_s_text#||'%'
			</isEqual>
			<isEqual property="p_s_gb" compareValue="02">
				and title like '%'||#p_s_text#||'%'
			</isEqual>
			<isEqual property="p_s_gb" compareValue="03">
				and job_name like '%'||#p_s_text#||'%'
			</isEqual>
			<isEqual property="p_s_gb" compareValue="04">
				and user_nm like '%'||#p_s_text#||'%'
			</isEqual>
			<isEqual property="p_s_gb" compareValue="05">
				and tt.description like '%'||#p_s_text#||'%'
			</isEqual>
		</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="p_s_doc_gb">
			<isEqual property="p_s_doc_gb" compareValue="01">
				<isNotEmpty property="p_task_nm">
					and doc_gb = #p_task_nm#
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_s_doc_gb" compareValue="03">
				and doc_gb in ('01','03','04')
				<isNotEmpty property="p_task_nm">
					and doc_gb = #p_task_nm#
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_s_doc_gb" compareValue="04">
				and doc_gb in ('01','03','04')
				<isNotEmpty property="p_task_nm">
					and doc_gb = #p_task_nm#
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_s_doc_gb" compareValue="02">
				and doc_gb in ('02','05','07','08')
				<isNotEmpty property="p_task_nm">
					and doc_gb = #p_task_nm#
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_s_doc_gb" compareValue="06">
				and doc_gb in ('06')
				<isNotEmpty property="p_task_nm">
					and task_type = #p_task_nm#
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_s_doc_gb" compareValue="99">
				<isNotEmpty property="p_task_nm">
					<isNotEqual property="p_task_nm" compareValue="05G">
						and doc_gb = #p_task_nm#
						and doc_group_id IS NULL
					</isNotEqual>
					<isEqual property="p_task_nm" compareValue="05G">
						and doc_gb = '05'
						and doc_group_id IS NOT NULL
					</isEqual>
				</isNotEmpty>
			</isEqual>
		</isNotEmpty>

		<isNotEmpty property="p_s_search_date">
			and search_draft_date <![CDATA[ >= ]]> #p_s_search_date#
		</isNotEmpty>
		<isNotEmpty property="p_e_search_date">
			and search_draft_date <![CDATA[ <= ]]> #p_e_search_date#
		</isNotEmpty>
		<isNotEmpty property="p_s_search_date2">
			and s_apply_date <![CDATA[ >= ]]> #p_s_search_date2#
		</isNotEmpty>
		<isNotEmpty property="p_e_search_date2">
			and s_apply_date <![CDATA[ <= ]]> #p_e_search_date2#
		</isNotEmpty>

		<isNotEmpty property="p_check_approval_yn">
			<isEqual property="p_check_approval_yn" compareValue="Y">
				and post_approval_yn = #p_check_approval_yn#
			</isEqual>
			<isEqual property="p_check_approval_yn" compareValue="N">
				and post_approval_yn = #p_check_approval_yn#
			</isEqual>
			<isEqual property="p_check_approval_yn" compareValue="A">
				and post_approval_yn = #p_check_approval_yn#
			</isEqual>
		</isNotEmpty>
		
	</sql>


	<select id="approvalDocInfoListCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalDocInfoListCnt */
	<![CDATA[
		SELECT count(*) as total_count
		from
		(select
			t1.doc_cd
			,t1.doc_gb
			,t1.post_approval_yn
			,t1.doc_group_id
			,(case when t1.doc_gb='01' then (select title from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select title from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select title from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select title from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select title from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select title from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select title from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select title from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			    	when t1.doc_gb='09' then (select title from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
			    	WHEN t1.doc_gb='10' THEN (SELECT error_description FROM $SCHEMA$.EZ_doc_10 WHERE doc_cd = t1.doc_cd)
			 		else '' end) AS title
			,(case when t1.doc_gb='01' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select job_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select job_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select job_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select file_nm from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select job_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select job_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			   		when t1.doc_gb='09' then (select job_name from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
			    	when t1.doc_gb='10' then (select job_name from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
			 		else '' end) AS job_name
			,(case when t1.doc_gb='01' then (select description from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select description from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select description from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select description from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select description from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select description from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select description from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			   		when t1.doc_gb='10' then (select b.description from $SCHEMA$.ez_doc_10 a, DEF_JOB b where a.doc_cd=t1.doc_cd and a.job_name = b.job_name)
			 		else '' end) AS description
			,t3.user_nm
			,to_char(t2.approval_date,'YYYYMMDD') AS search_approval_date
			,to_char(t1.draft_date,'YYYYMMDD') AS search_draft_date
			,to_char(t1.apply_date,'YYYYMMDD') AS search_apply_date

			 ,apply_cd, to_char(t1.apply_date,'YYYY/MM/DD HH24:MI:SS') AS apply_date
			 ,(case when t1.doc_gb='01' then (select apply_check from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select apply_check from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select apply_check from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select apply_check from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select apply_check from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select apply_check from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then ''
					when t1.doc_gb='08' then ''
					when t1.doc_gb='09' then ''
			 		else '' end) AS apply_check
			 ,t1.main_doc_cd

			 ,(case when t1.doc_gb='01' then (select data_center from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select data_center from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select data_center from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select data_center from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select data_center from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select data_center from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select data_center from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select data_center from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			   		when t1.doc_gb='09' then (select data_center from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
			     	when t1.doc_gb='10' then (select data_center from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
			        else '' end) AS data_center
 			,(case when t1.doc_gb='01' then ('정기등록')
					when t1.doc_gb='02' then ('수시')
					when t1.doc_gb='03' then ('정기삭제')
					when t1.doc_gb='04' then ('정기수정')
					when t1.doc_gb='05' then ('비정기')
					when t1.doc_gb='06' then (select act_gb from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then ('상태변경')
					when t1.doc_gb='08' then ('예약상태변경')
					when t1.doc_gb='09' then ('일괄요청서')
 			    	when t1.doc_gb='10' then ('오류처리')
					else '' end) AS task_type
			,(case when t1.doc_gb='01' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_01 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_02 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_03 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_04 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1,  $SCHEMA$.EZ_doc_06 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
			    	when t1.doc_gb='10' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
					else '' end) AS s_apply_date

	]]>
		<include refid="approvalDocInfoListInc" />

	</select>

	<select id="approvalDocInfoList" resultClass="DocInfoBean" parameterClass="java.util.Map" remapResults="true">
	/* ORACLE_T > approvalDocInfoList */

		SELECT * FROM(
			SELECT rownum as row_num, TTT.*, (CASE WHEN ttt.data_center IS NOT NULL THEN ( CASE WHEN INSTR(ttt.data_center, ',') > 0
				   	   THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(ttt.data_center, 1, INSTR(ttt.data_center, ',')-1))
				      ELSE ttt.data_center END ) END) AS data_center_name
		      FROM(

		select tt.*, tt2.batchjobgrade
		  from(
		select
			t1.doc_cd
			,t1.doc_gb
			,t1.user_cd
			,t3.user_id
			,t3.user_nm
			,t1.dept_nm
			,t1.duty_nm
			,t1.state_cd
			,to_char(t2.approval_date,'YYYY/MM/DD HH24:MI:SS') AS approval_date
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') AS draft_date
			,to_char(t1.ins_date,'YYYY/MM/DD HH24:MI:SS') AS ins_date
			,to_char(t2.approval_date,'YYYYMMDD') AS search_approval_date
			,to_char(t1.draft_date,'YYYYMMDD') AS search_draft_date
			,to_char(t1.udt_date,'YYYY/MM/DD HH24:MI:SS') AS udt_date
			,t1.post_approval_yn
			,(CASE WHEN t2.dept_nm != 'GROUP' then (SELECT user_nm FROM $SCHEMA$.ez_user WHERE user_cd = t2.user_cd) ELSE ''  END) AS alarm_user
			,(CASE WHEN t2.dept_nm = 'GROUP' then (SELECT GROUP_LINE_GRP_NM  FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE GROUP_LINE_GRP_CD = t2.group_line_grp_cd) ELSE ''  END) AS detail_status
			,(case when t1.doc_gb='01' then (select title from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select title from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select title from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select title from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select title from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select title from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select title from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select title from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select title from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
					WHEN t1.doc_gb='10' THEN (SELECT error_description FROM $SCHEMA$.EZ_doc_10 WHERE doc_cd = t1.doc_cd)
			 		else '' end) AS title
			,(case when t1.doc_gb='01' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select job_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select job_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select job_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select file_nm from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select job_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select job_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select job_name from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
					when t1.doc_gb='10' then (select job_name from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
			 		else '' end) AS job_name
			,(case when t1.doc_gb='01' then (select description from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select description from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select description from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select description from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select description from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select description from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select description from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					when t1.doc_gb='10' then (select b.description from $SCHEMA$.ez_doc_10 a, DEF_JOB b where a.doc_cd=t1.doc_cd and a.job_name = b.job_name)
			 		else '' end) AS description
			,t1.cur_approval_seq
			,t1.doc_group_id

			 ,apply_cd, to_char(t1.apply_date,'YYYY/MM/DD HH24:MI:SS') as apply_date
			 ,(case when t1.doc_gb='01' then (select apply_check from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select apply_check from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select apply_check from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select apply_check from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select apply_check from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select apply_check from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then ''
					when t1.doc_gb='08' then ''
					when t1.doc_gb='09' then ''
			 		else '' end) AS apply_check
			 ,t1.main_doc_cd

			 ,(case when t1.doc_gb='01' then (select data_center from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select data_center from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select data_center from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select data_center from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select data_center from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select data_center from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select data_center from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select data_center from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select data_center from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
					when t1.doc_gb='10' then (select data_center from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
			        else '' end) AS data_center
			  ,(case when t1.doc_gb='02' then (select t_general_date from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select order_date from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select '20' || odate from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select order_date from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			 		else '' end) AS odate
			,(case when t1.doc_gb='01' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_01 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_02 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_03 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_04 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1,  $SCHEMA$.EZ_doc_06 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
					when t1.doc_gb='10' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
			 		else '' end) AS s_apply_date

			,(case when t1.doc_gb='06' then (select act_gb from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select after_status from $SCHEMA$.EZ_doc_07 tb1 where tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select doc_gb from $SCHEMA$.EZ_doc_09 tb1 where tb1.doc_cd=t1.doc_cd)
					else '' end) AS task_nm_detail
			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check = 'Y' and t1.apply_cd = '02')
					else 0 end) AS s_cnt
			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check = 'E' and t1.apply_cd = '02')
					else 0 end) AS e_cnt
			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check is null and t1.apply_cd = '02')
					else 0 end) AS w_cnt
			,(case when t1.doc_gb='06' then (select count(job_name) from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and apply_check = 'R' and t1.apply_cd = '02')
					else 0 end) AS r_cnt
			,(case when t1.doc_gb='05' and t1.doc_group_id != '' then (SELECT count(doc_cd) FROM $SCHEMA$.EZ_DOC_MASTER WHERE MAIN_DOC_CD=t1.doc_cd AND APPLY_CD='04')
					when t1.doc_gb='09' then (SELECT count(doc_cd) FROM $SCHEMA$.EZ_DOC_MASTER WHERE MAIN_DOC_CD=t1.doc_cd AND APPLY_CD='04')
					else (SELECT count(doc_cd) FROM $SCHEMA$.EZ_DOC_MASTER WHERE doc_cd=t1.doc_cd AND APPLY_CD='04') end) AS apply_fail_cnt

			,(CASE WHEN t1.doc_gb='05' and doc_group_id is not null THEN (SELECT count(doc_cd) FROM $SCHEMA$.ez_doc_master tb1 WHERE t1.doc_cd = tb1.main_doc_cd)
					WHEN t1.doc_gb='09' THEN (SELECT count(doc_cd) FROM $SCHEMA$.ez_doc_master tb1 WHERE t1.doc_cd = tb1.main_doc_cd)
			else 0 end) AS doc_cnt
		<include refid="approvalDocInfoListInc" />
		
		<isEqual property="p_approval_cd" compareValue="05">
			order by tt.draft_date DESC, tt.udt_date DESC
		</isEqual>	
		<isEqual property="p_approval_cd" compareValue="01">
			order by tt.draft_date DESC, tt.udt_date DESC
		</isEqual>		
		<isEqual property="p_approval_cd" compareValue="02">
			order by tt.draft_date DESC, tt.udt_date DESC	
		</isEqual>		
		<isEqual property="p_approval_cd" compareValue="03">
			order by tt.draft_date DESC, tt.udt_date DESC		
		</isEqual>
		<isEqual property="p_approval_cd" compareValue="04">
			order by tt.draft_date DESC, tt.udt_date DESC	
		</isEqual>

			)TTT
		) tb1
		<isNotEmpty property="pagingNum">
			OFFSET $startRowNum$ ROWS FETCH FIRST $pagingNum$ ROWS ONLY
		</isNotEmpty>
		
	</select>

	<!-- doc01 -->
	<select id="doc01" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc01 */
	<![CDATA[
		select
			t1.doc_cd
			,t1.doc_gb
			,t1.user_cd
			,t1.post_approval_yn
			,t3.user_id
			,t3.user_nm
			,case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end AS dept_nm
			,case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end AS duty_nm
			,t1.cur_approval_seq
			,t1.state_cd
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') AS draft_date
			,t2.title
			,t2.content			
			,t2.table_id               	
			,t2.job_id                 	
			,t2.data_center              
			,t2.table_name
			,t2.application
			,t2.group_name           	
			,t2.mem_name               	
			,t2.job_name               	
			,t2.description            	
			,t2.author                 	
			,t2.owner                  	
			,t2.priority               	
			,t2.critical               	
			,t2.task_type              	
			,t2.cyclic                 	
			,t2.node_id                	
			,t2.rerun_interval         	
			,t2.rerun_interval_time      
			,t2.mem_lib                	
			,t2.command                	
			,t2.confirm_flag           	
			,t2.days_cal               	
			,t2.weeks_cal              	
			,t2.retro                  	
			,t2.max_wait               	
			,t2.rerun_max              	
			,t2.time_from              	
			,t2.time_until             	
			,t2.month_days
			,t2.dates_str             	
			,t2.week_days              	
			,t2.month_1                	
			,t2.month_2                	
			,t2.month_3                	
			,t2.month_4                	
			,t2.month_5                	
			,t2.month_6                	
			,t2.month_7                	
			,t2.month_8                	
			,t2.month_9                	
			,t2.month_10               	
			,t2.month_11               	
			,t2.month_12               	
			,t2.count_cyclic_from      	
			,t2.time_zone              	
			,t2.multiagent             	
			,t2.user_daily
			,t2.schedule_and_or          
			,t2.in_conditions_opt
			,t2.t_general_date 				
			,t2.t_conditions_in 				
			,t2.t_conditions_out 			
			,t2.t_resources_q 					
			,t2.t_resources_c 					
			,t2.t_set 									
			,t2.t_steps 								
			,t2.t_postproc
			,t2.t_sfile			
			,t2.t_tag_name
			,( SELECT COUNT(*) FROM DEF_TABLES WHERE sched_table = ( CASE WHEN INSTR(t2.table_name, '/') > 0 THEN SUBSTR(t2.table_name, 1, INSTR(t2.table_name, '/') - 1) ELSE t2.table_name END )
										       AND data_center = ( CASE WHEN INSTR(t2.data_center, ',') > 0 THEN SUBSTR(t2.data_center, INSTR(t2.data_center, ',')+1, LENGTH(t2.data_center)) ELSE t2.data_center END ) ) AS table_cnt
			,( SELECT table_type FROM DEF_TABLES WHERE sched_table = ( CASE WHEN INSTR(t2.table_name, '/') > 0 THEN SUBSTR(t2.table_name, 1, INSTR(t2.table_name, '/') - 1) ELSE t2.table_name END )
											     AND data_center = ( CASE WHEN INSTR(t2.data_center, ',') > 0 THEN SUBSTR(t2.data_center, INSTR(t2.data_center, ',')+1, LENGTH(t2.data_center)) ELSE t2.data_center END ) ) AS table_type
			,t2.cyclic_type
			,t2.interval_sequence
			,t2.tolerance
			,t2.specific_times
			,t2.active_from, t2.active_till
			, t2.apply_date, t1.apply_cd, t1.cancel_comment, t1.fail_comment, t2.apply_check
			, ( SELECT late_sub FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS late_sub
			, ( SELECT late_time FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS late_time
			, ( SELECT late_exec FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS late_exec
			, ( SELECT success_sms_yn FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS success_sms_yn
			, conf_cal, shift, shift_num
			,t2.sr_code
			, ( CASE WHEN INSTR(t2.data_center, ',') > 0 
					  THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(t2.data_center, 1, INSTR(t2.data_center, ',')-1)) 
					 ELSE t2.data_center END ) AS data_center_name
		from $SCHEMA$.EZ_DOC_MASTER t1
			 , $SCHEMA$.EZ_DOC_01 t2, $SCHEMA$.EZ_USER t3 
		where 1=1
		and t1.del_yn = 'N'
		and t1.user_cd = t3.user_cd
		and t1.doc_cd = t2.doc_cd
		and t1.doc_cd = #doc_cd#
	]]>
		
	</select>
	
	<!-- doc02 -->
	<select id="doc02" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc02 */
	<![CDATA[
		select
			t1.doc_cd
			,t1.doc_gb
			,t1.user_cd
			,t1.post_approval_yn
			,t3.user_id
			,t3.user_nm
			,case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end AS dept_nm
			,case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end AS duty_nm
			,t1.cur_approval_seq
			,t1.state_cd
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') AS draft_date
			,t2.title
			,t2.content			
			,t2.table_id               	
			,t2.job_id                 	
			,t2.data_center              
			,t2.table_name
			,t2.application
			,t2.group_name           	
			,t2.mem_name               	
			,t2.job_name               	
			,t2.description            	
			,t2.author                 	
			,t2.owner                  	
			,t2.priority               	
			,t2.critical               	
			,t2.task_type              	
			,t2.cyclic                 	
			,t2.node_id                	
			,t2.rerun_interval         	
			,t2.rerun_interval_time      
			,t2.mem_lib                	
			,t2.command                	
			,t2.confirm_flag           	
			,t2.days_cal               	
			,t2.weeks_cal              	
			,t2.retro                  	
			,t2.max_wait               	
			,t2.rerun_max              	
			,t2.time_from              	
			,t2.time_until             	
			,t2.month_days
			,t2.dates_str             	
			,t2.week_days              	
			,t2.month_1                	
			,t2.month_2                	
			,t2.month_3                	
			,t2.month_4                	
			,t2.month_5                	
			,t2.month_6                	
			,t2.month_7                	
			,t2.month_8                	
			,t2.month_9                	
			,t2.month_10               	
			,t2.month_11               	
			,t2.month_12               	
			,t2.count_cyclic_from      	
			,t2.time_zone              	
			,t2.multiagent             	
			,t2.user_daily
			,t2.schedule_and_or          
			,t2.in_conditions_opt
			,t2.t_general_date 				
			,t2.t_conditions_in 				
			,t2.t_conditions_out 			
			,t2.t_resources_q 					
			,t2.t_resources_c 					
			,t2.t_set 									
			,t2.t_steps 								
			,t2.t_postproc
			,t2.t_sfile			
			,t2.t_tag_name
			,( SELECT COUNT(*) FROM DEF_TABLES WHERE sched_table = ( CASE WHEN INSTR(t2.table_name, '/') > 0 THEN SUBSTR(t2.table_name, 1, INSTR(t2.table_name, '/') - 1) ELSE t2.table_name END )
											   AND data_center = ( CASE WHEN INSTR(t2.data_center, ',') > 0 THEN SUBSTR(t2.data_center, INSTR(t2.data_center, ',')+1, LENGTH(t2.data_center)) ELSE t2.data_center END ) ) AS table_cnt
			,( SELECT table_type FROM DEF_TABLES WHERE sched_table = ( CASE WHEN INSTR(t2.table_name, '/') > 0 THEN SUBSTR(t2.table_name, 1, INSTR(t2.table_name, '/') - 1) ELSE t2.table_name END )
												 AND data_center = ( CASE WHEN INSTR(t2.data_center, ',') > 0 THEN SUBSTR(t2.data_center, INSTR(t2.data_center, ',')+1, LENGTH(t2.data_center)) ELSE t2.data_center END ) ) AS table_type
			,t2.cyclic_type
			,t2.interval_sequence
			,t2.tolerance
			,t2.specific_times
			,t2.active_from, t2.active_till
			, t2.apply_date, t1.apply_cd, t1.cancel_comment, t1.fail_comment, t2.apply_check
			, ( SELECT late_sub FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS late_sub
			, ( SELECT late_time FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS late_time
			, ( SELECT late_exec FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS late_exec
			, ( SELECT success_sms_yn FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS success_sms_yn
			, conf_cal, shift, shift_num
			,t2.sr_code
			, ( CASE WHEN INSTR(t2.data_center, ',') > 0 
					  THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(t2.data_center, 1, INSTR(t2.data_center, ',')-1)) 
					 ELSE t2.data_center END ) AS data_center_name
		from $SCHEMA$.EZ_DOC_MASTER t1
			 , $SCHEMA$.EZ_DOC_02 t2, $SCHEMA$.EZ_USER t3 
		where 1=1
		and t1.del_yn = 'N'
		and t1.user_cd = t3.user_cd
		and t1.doc_cd = t2.doc_cd
		and t1.doc_cd = #doc_cd#
	]]>
		
	</select>

	<!-- doc03 -->
	<select id="doc03" resultClass="Doc03Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc03 */
	<![CDATA[
		select 
			t1.doc_cd
			,t1.doc_gb
			,t1.user_cd
			,t1.post_approval_yn
			,t3.user_id
			,t3.user_nm
			,case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end AS dept_nm
			,case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end AS duty_nm
			,t1.cur_approval_seq
			,t1.state_cd
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') AS draft_date
			,t2.title
			,t2.content
			
			,t2.table_id
			,t2.job_id                 	
			,t2.data_center              
			,t2.table_name             	
			,t2.application            	
			,t2.group_name             	
			,t2.mem_name               	
			,t2.job_name       

			,t2.task_type               	
           	,t2.user_daily              	
           	,t2.description              
           	,t2.owner               	    
           	,t2.author              	    
           	,t2.mem_lib               	
           	,t2.command              	
           	,t2.in_condition             
           	,t2.out_condition    
           	,t2.title  	
			, ( SELECT SUBSTR(scode_nm, 5, LENGTH(scode_nm)) FROM $SCHEMA$.EZ_SCODE WHERE SUBSTR(scode_nm, 1, 3) = ( SELECT code FROM COMM WHERE data_center = t2.data_center ) ) AS data_center_name
			, t2.apply_date, t1.apply_cd, t1.cancel_comment, t1.fail_comment, t2.apply_check
			, t2.node_id
		from $SCHEMA$.EZ_DOC_MASTER t1
			 , $SCHEMA$.EZ_DOC_03 t2, $SCHEMA$.EZ_USER t3
		where 1=1
		and t1.del_yn = 'N'
		and t1.user_cd = t3.user_cd
		and t1.doc_cd = t2.doc_cd
		and t1.doc_cd = #doc_cd#
	]]>
		
	</select>
	
	<!-- doc04 -->
	<select id="doc04" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc04 */
	<![CDATA[
		select 
			t1.doc_cd
			,t1.doc_gb
			,t1.user_cd
			,t1.post_approval_yn
			,t3.user_id
			,t3.user_nm
			,case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end AS dept_nm
			,case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end AS duty_nm
			,t1.cur_approval_seq
			,t1.state_cd
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') AS draft_date
			,t2.title
			,t2.content
			
			,t2.table_id               	
			,t2.job_id                 	
			,t2.data_center              
			,t2.table_name             	
			,t2.application            	
			,t2.group_name             	
			,t2.mem_name               	
			,t2.job_name               	
			,t2.description            	
			,t2.author                 	
			,t2.owner                  	
			,t2.priority               	
			,t2.critical               	
			,t2.task_type              	
			,t2.cyclic                 	
			,t2.node_id                	
			,t2.rerun_interval         	
			,t2.rerun_interval_time      
			,t2.mem_lib                	
			,t2.command                	
			,t2.confirm_flag           	
			,t2.days_cal               	
			,t2.weeks_cal              	
			,t2.retro                  	
			,t2.max_wait               	
			,t2.rerun_max              	
			,t2.time_from              	
			,t2.time_until             	
			,t2.month_days             	
			,t2.week_days              	
			,t2.month_1                	
			,t2.month_2                	
			,t2.month_3                	
			,t2.month_4                	
			,t2.month_5                	
			,t2.month_6                	
			,t2.month_7                	
			,t2.month_8                	
			,t2.month_9                	
			,t2.month_10               	
			,t2.month_11               	
			,t2.month_12               	
			,t2.count_cyclic_from      	
			,t2.time_zone              	
			,t2.multiagent             	
			,t2.user_daily
			,t2.schedule_and_or          
			,t2.in_conditions_opt			
			,t2.t_general_date 				
			,t2.t_conditions_in 				
			,t2.t_conditions_out 			
			,t2.t_resources_q 					
			,t2.t_resources_c 					
			,t2.t_set 									
			,t2.t_steps 								
			,t2.t_postproc			
			,t2.before_application
			
			,(CASE WHEN (SELECT COUNT(*) FROM DEF_JOB WHERE job_name = t2.job_name) = 1 
					THEN (SELECT sched_table FROM DEF_TABLES WHERE table_id = (SELECT table_id FROM DEF_JOB WHERE job_name = t2.job_name))
				   ELSE t2.before_table_name END) AS before_table_name
			
			,t2.before_group_name 						
			,t2.t_tag_name
			,( SELECT COUNT(*) FROM DEF_TABLES WHERE sched_table = ( CASE WHEN INSTR(t2.table_name, '/') > 0 THEN SUBSTR(t2.table_name, 1, INSTR(t2.table_name, '/') - 1) ELSE t2.table_name END )
											   AND data_center = ( CASE WHEN INSTR(t2.data_center, ',') > 0 THEN SUBSTR(t2.data_center, INSTR(t2.data_center, ',')+1, LENGTH(t2.data_center)) ELSE t2.data_center END ) ) AS table_cnt
			,( SELECT table_type FROM DEF_TABLES WHERE sched_table = ( CASE WHEN INSTR(t2.table_name, '/') > 0 THEN SUBSTR(t2.table_name, 1, INSTR(t2.table_name, '/') - 1) ELSE t2.table_name END )
											 	 AND data_center = ( CASE WHEN INSTR(t2.data_center, ',') > 0 THEN SUBSTR(t2.data_center, INSTR(t2.data_center, ',')+1, LENGTH(t2.data_center)) ELSE t2.data_center END ) ) AS table_type
			,t2.cyclic_type
			,t2.interval_sequence
			,t2.tolerance
			,t2.specific_times
			,t2.active_from, t2.active_till
			, t2.apply_date, t1.apply_cd, t1.cancel_comment, t1.fail_comment, t2.apply_check
			, ( SELECT late_sub FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS late_sub
			, ( SELECT late_time FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS late_time
			, ( SELECT late_exec FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS late_exec
			, ( SELECT success_sms_yn FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS success_sms_yn
			, t2.sr_code
			, conf_cal, shift, shift_num
			, ( CASE WHEN INSTR(t2.data_center, ',') > 0 
					  THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(t2.data_center, 1, INSTR(t2.data_center, ',')-1)) 
					 ELSE t2.data_center END ) AS data_center_name

		from $SCHEMA$.EZ_DOC_MASTER t1
			 , $SCHEMA$.EZ_DOC_04 t2, $SCHEMA$.EZ_USER t3
		where 1=1
		and t1.del_yn = 'N'
		and t1.user_cd = t3.user_cd
		and t1.doc_cd = t2.doc_cd
		and t1.doc_cd = #doc_cd#
	]]>
		
	</select>
	
	<!-- doc04_original -->
	<select id="doc04_original" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc04_original */
	<![CDATA[
		select 
			t1.doc_cd
			,t1.doc_gb
			,t1.user_cd
			,t3.user_id
			,t3.user_nm
			,case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end AS dept_nm
			,case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end AS duty_nm
			,t1.cur_approval_seq
			,t1.state_cd
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') AS draft_date
			,t2.title
			,t2.content
			
			,t2.table_id               	
			,t2.job_id                 	
			,t2.data_center              
			,t2.table_name             	
			,t2.application            	
			,t2.group_name             	
			,t2.mem_name               	
			,t2.job_name               	
			,t2.description            	
			,t2.author                 	
			,t2.owner                  	
			,t2.priority               	
			,t2.critical               	
			,t2.task_type              	
			,t2.cyclic                 	
			,t2.node_id                	
			,t2.rerun_interval         	
			,t2.rerun_interval_time      
			,t2.mem_lib                	
			,t2.command                	
			,t2.confirm_flag           	
			,t2.days_cal               	
			,t2.weeks_cal              	
			,t2.retro                  	
			,t2.max_wait               	
			,t2.rerun_max              	
			,t2.time_from              	
			,t2.time_until             	
			,t2.month_days             	
			,t2.week_days              	
			,t2.month_1                	
			,t2.month_2                	
			,t2.month_3                	
			,t2.month_4                	
			,t2.month_5                	
			,t2.month_6                	
			,t2.month_7                	
			,t2.month_8                	
			,t2.month_9                	
			,t2.month_10               	
			,t2.month_11               	
			,t2.month_12               	
			,t2.count_cyclic_from      	
			,t2.time_zone              	
			,t2.multiagent             	
			,(SELECT user_daily FROM $SCHEMA$.EZ_APP_GRP_CODE WHERE grp_eng_nm = (select GRP_ENG_NM from $SCHEMA$.ez_app_grp_code where grp_eng_nm = t2.table_name and grp_depth = 1 AND scode_cd = ( CASE WHEN INSTR(t2.data_center, ',') > 0 
																										   THEN SUBSTR(t2.data_center, 1, INSTR(t2.data_center, ',')-1)
																										  ELSE t2.data_center END )) AND scode_cd = ( CASE WHEN INSTR(t2.data_center, ',') > 0 
																										   THEN SUBSTR(t2.data_center, 1, INSTR(t2.data_center, ',')-1)
																										  ELSE t2.data_center END )) AS user_daily
			,t2.schedule_and_or          
			,t2.in_conditions_opt			
			,t2.t_general_date 				
			,t2.t_conditions_in 				
			,t2.t_conditions_out 			
			,t2.t_resources_q 					
			,t2.t_resources_c 					
			,t2.t_set 									
			,t2.t_steps 								
			,t2.t_postproc			
			,t2.before_application
			
			,(CASE WHEN (SELECT COUNT(*) FROM DEF_JOB WHERE job_name = t2.job_name) > 0 
					THEN (SELECT sched_table FROM DEF_TABLES WHERE table_id = (SELECT table_id FROM DEF_JOB WHERE job_name = t2.job_name))
				   ELSE t2.before_table_name END) AS before_table_name
			
			,t2.before_group_name 						
			,t2.t_tag_name
			,( SELECT COUNT(*) FROM DEF_TABLES WHERE sched_table = ( CASE WHEN INSTR(t2.table_name, '/') > 0 THEN SUBSTR(t2.table_name, 1, INSTR(t2.table_name, '/') - 1) ELSE t2.table_name END )
											   AND data_center = ( CASE WHEN INSTR(t2.data_center, ',') > 0 THEN SUBSTR(t2.data_center, INSTR(t2.data_center, ',')+1, LENGTH(t2.data_center)) ELSE t2.data_center END ) ) AS table_cnt
			,( SELECT table_type FROM DEF_TABLES WHERE sched_table = ( CASE WHEN INSTR(t2.table_name, '/') > 0 THEN SUBSTR(t2.table_name, 1, INSTR(t2.table_name, '/') - 1) ELSE t2.table_name END )
												 AND data_center = ( CASE WHEN INSTR(t2.data_center, ',') > 0 THEN SUBSTR(t2.data_center, INSTR(t2.data_center, ',')+1, LENGTH(t2.data_center)) ELSE t2.data_center END ) ) AS table_type
			,t2.cyclic_type
			,t2.interval_sequence
			,t2.tolerance
			,t2.specific_times 						
			,t2.active_from, t2.active_till
			, t2.apply_date, t1.apply_cd, t1.cancel_comment, t1.fail_comment, t2.apply_check
			, ( SELECT late_sub FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS late_sub
			, ( SELECT late_time FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS late_time
			, ( SELECT late_exec FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS late_exec
			, ( SELECT success_sms_yn FROM $SCHEMA$.EZ_JOB_MAPPER_DOC WHERE job = t2.job_name AND data_center = t2.data_center AND doc_cd = t2.doc_cd ) AS success_sms_yn
			, t2.sr_code
			, conf_cal, shift, shift_num
			, ( CASE WHEN INSTR(t2.data_center, ',') > 0 
					  THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(t2.data_center, 1, INSTR(t2.data_center, ',')-1)) 
					 ELSE t2.data_center END ) AS data_center_name
		from $SCHEMA$.EZ_DOC_MASTER t1
			 , $SCHEMA$.EZ_DOC_04_original t2, $SCHEMA$.EZ_USER t3
		where 1=1
		and t1.del_yn = 'N'
		and t1.user_cd = t3.user_cd
		and t1.doc_cd = t2.doc_cd
		and t1.doc_cd = #doc_cd#
	]]>
		
	</select>
	
	<select id="doc05" resultClass="Doc05Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc05 */
		select 	t1.doc_cd,
				t2.title,
				t2.content,
				t2.table_id, 
				t2.job_id,
				t2.data_center,

				<!-- ORDER 전 작업이 수정되면 table_id, job_id 로 table_name을 가져올 수 없다. (2023.09.18 강명준) -->
				<!-- a.parent_table AS table_name, -->
				t2.table_name,

				t2.mem_name,
				t2.job_name,
				t2.hold_yn,
				t2.force_yn,
				t2.wait_for_odate_yn,
				t2.order_date,
				t3.user_nm,
				t1.post_approval_yn,
				case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end AS dept_nm,
				case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end AS duty_nm,
				a.application, a.group_name, b.sched_table, a.cmd_line, a.owner, a.description, a.node_id, a.task_type,
				t2.from_time, t2.cmd_line2, t2.t_set, t1.apply_cd, t1.cancel_comment, t1.fail_comment, t2.apply_check
				,c.condition as t_conditions_in
				,d.condition as t_conditions_out
				,d.sign as out_sign
				,t2.status, t1.doc_group_id
				,t2.order_into_folder
				
		from $SCHEMA$.EZ_DOC_05 t2 LEFT OUTER JOIN DEF_JOB a 
		  on t2.table_id = a.table_id
		 and t2.job_id = a.job_id
		 LEFT OUTER JOIN DEF_TABLES b
		 on a.table_id = b.table_id
		 LEFT OUTER JOIN ( SELECT job_id, table_id, LISTAGG(condition, ',') WITHIN GROUP (ORDER BY job_id) AS condition FROM DEF_LNKI_P GROUP BY job_id, table_id ) c
		  on t2.table_id = c.table_id
		 and t2.job_id = c.job_id
		LEFT OUTER JOIN ( SELECT job_id, table_id, LISTAGG(condition, ',') WITHIN GROUP (ORDER BY job_id) AS condition, LISTAGG(sign, ',') WITHIN GROUP (ORDER BY job_id) AS sign FROM DEF_LNKO_P GROUP BY job_id, table_id ) d
		on t2.table_id = d.table_id
		 and t2.job_id = d.job_id
		
		     ,$SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_USER t3
	   where 1=1
		 and t1.del_yn = 'N'
		 and t1.user_cd = t3.user_cd
		 and t1.doc_cd = t2.doc_cd		 
		 and t1.doc_cd = #doc_cd#
	</select>
	
	<select id="doc07" resultClass="Doc07Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc07 */
	<![CDATA[
		select 	t1.doc_cd,
				t2.title,
				t2.content,
				t2.order_id, 
				t2.odate,
				t2.data_center,
				t2.table_name,
				t2.application,
				t2.group_name,
				t2.job_name,
				t2.description,
				t2.before_status,
				t2.after_status,
				t1.post_approval_yn,
				t1.apply_cd,
				case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end AS dept_nm,
				case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end AS duty_nm,
				t3.user_nm,
				t1.ins_user_cd,
				t1.fail_comment,
				t4.user_nm AS ins_user_nm,
				(select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t4.dept_cd ) AS ins_dept_nm,
				(select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t4.duty_cd ) AS ins_duty_nm				
		from $SCHEMA$.EZ_DOC_07 t2, $SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_USER t3, $SCHEMA$.EZ_USER t4
	   where 1=1
		 and t1.del_yn = 'N'
		 and t1.user_cd = t3.user_cd
		 and t1.ins_user_cd = t4.user_cd
		 and t1.doc_cd = t2.doc_cd
		 and t1.doc_cd = #doc_cd#
	]]>
		
	</select> 
	
	<select id="doc08" resultClass="Doc08Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc08 */
	<![CDATA[
		select 	t1.doc_cd,
				t1.fail_comment,
				t1.apply_cd,
				to_char(t1.apply_date,'YYYY/MM/DD HH24:MI:SS') as apply_date,
				t2.title,
				t2.content,
				t2.order_date,
				t2.data_center,
				t2.table_name,
				t2.application,
				t2.group_name,
				t2.job_name,
				t2.description,
				t2.from_time,
				t2.after_status,
				case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end AS dept_nm,
				case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end AS duty_nm,
				t3.user_nm,
				t1.ins_user_cd,
				t4.user_nm AS ins_user_nm,
				(select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t4.dept_cd ) AS ins_dept_nm,
				(select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t4.duty_cd ) AS ins_duty_nm				
		from $SCHEMA$.EZ_DOC_08 t2, $SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_USER t3, $SCHEMA$.EZ_USER t4
	   where 1=1
		 and t1.del_yn = 'N'
		 and t1.user_cd = t3.user_cd
		 and t1.ins_user_cd = t4.user_cd
		 and t1.doc_cd = t2.doc_cd
		 and t1.doc_cd = #doc_cd#
	]]>
		
	</select>
	
	<select id="groupDoc05" resultClass="Doc05Bean" parameterClass="java.util.Map">
	/* ORACLE_T > groupDoc05 */
	<![CDATA[
		select 	t1.doc_cd,
				t2.title,
				t2.content,
				t2.table_id, 
				t2.job_id,
				t2.data_center,
				t2.table_name,
				t2.mem_name,
				t2.job_name,
				t2.hold_yn,
				t2.force_yn,
				t2.wait_for_odate_yn,
				t2.order_date,
				t2.t_set,
				t3.user_nm,
				case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end AS dept_nm,
				case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end AS duty_nm,
				t4.jobgroup_name, t4.content AS group_content,
				( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = t4.udt_user_cd ) AS udt_user_nm,
			    TO_CHAR(t4.udt_date, 'YYYY-MM-DD') AS udt_date
		from $SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_DOC_05 t2, $SCHEMA$.EZ_USER t3, $SCHEMA$.EZ_JOBGROUP t4, $SCHEMA$.EZ_DOC_GROUP t5 
	   where 1=1
		 and t1.del_yn = 'N'
		 and t1.user_cd = t3.user_cd
		 and t1.doc_cd = t2.doc_cd		 
		 and t1.doc_group_id = t5.doc_group_id
		 and t4.jobgroup_id = t5.jobgroup_id
		 and t1.doc_cd = #doc_cd#
	]]>
		
	</select>

	<!--일괄요청서 조회 -->
	<select id="Doc09" resultClass="Doc05Bean" parameterClass="java.util.Map">
	/* ORACLE_T > Doc09 */
	<![CDATA[
		select 	t1.doc_cd,
				  t2.title,
				  t2.content,
				  t2.table_id,
				  t2.job_id,
				  t2.data_center,
				  t2.table_name,
				  t2.job_name,
				  t3.user_nm,
				  case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end AS dept_nm,
				  case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end AS duty_nm
		from $SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_USER t3
		where 1=1
		  and t1.del_yn = 'N'
		  and t1.user_cd = t3.user_cd
		  and t1.doc_cd = #doc_cd#
		]]>

	</select>

	<!-- 오류처리 문서 조회 -->
	<select id="doc10" resultClass="Doc01Bean" parameterClass="java.util.Map">
		/* ORACLE_T > Doc10 */
		<![CDATA[
			select 	t1.doc_cd, t4.job_name, t4.description, t1.apply_cd, t2.error_description as title

			from $SCHEMA$.EZ_DOC_10 t2 left outer join $SCHEMA$.EZ_ALARM t4 on t4.alarm_cd = t2.alarm_cd
			,$SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_USER t3
			where 1=1
			and t1.del_yn = 'N'
			and t1.user_cd = t3.user_cd
			and t1.doc_cd = t2.doc_cd
			and t1.doc_cd = #doc_cd#
		]]>
	</select>

	<!-- job modify -->
	<select id="jobModifyInfoBasic" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > jobModifyInfoBasic */
		select 
		   t2.data_center as data_center
<!-- 		   ,(CASE WHEN t1.task_type = 'Sub-Table' THEN t1.parent_table || '/' || t1.job_name ELSE t1.parent_table END) as table_name -->
		   ,t1.parent_table as table_name
		   ,t2.user_daily as user_daily
		   ,t1.job_name as job_name
		   ,t1.application as application
		   ,t1.group_name as group_name
		   ,(case when t1.appl_type = 'KBN062023' then 'Kubernetes' 
		   		  when t1.appl_type = 'FILE_TRANS' then 'MFT'
		   		  else lower(t1.task_type) end) as task_type
		   ,t1.mem_lib as mem_lib
		   ,t1.memname as mem_name
		   ,t1.owner as owner
		   ,t1.author as author
		   ,t1.description as description
		   ,t1.cmd_line as command
		   ,t1.node_id
		   ,t1.day_str as month_days
		   ,case when t1.days_and_or = 'A' then '1' when t1.days_and_or = 'O' then '0' else t1.days_and_or end as schedule_and_or
		   ,t1.w_day_str as week_days
		   ,t1.weeks_cal as weeks_cal
		   ,t1.days_cal as days_cal
		   ,t1.retro as retro
		   ,t1.month_1
		   ,t1.month_2
		   ,t1.month_3
		   ,t1.month_4
		   ,t1.month_5
		   ,t1.month_6
		   ,t1.month_7
		   ,t1.month_8
		   ,t1.month_9
		   ,t1.month_10
		   ,t1.month_11
		   ,t1.month_12
		   ,case when t1.multy_agent='Y' then '1' else '0' end as multiagent
		   ,t1.confirm_flag 
		   ,t1.priority
		   ,t1.critical
		   ,t1.from_time as time_from
		   ,t1.to_time as time_until
		   ,t1.time_zone
		   ,t1.cyclic
		   ,substr(t1.interval,1,5) as rerun_interval
		   ,substr(t1.interval,6,1) as rerun_interval_time
		   ,case when t1.ind_cyclic='S' then 'start' when t1.ind_cyclic='T' then 'target' when t1.ind_cyclic='E' then 'end' else t1.ind_cyclic end as count_cyclic_from
		   ,t1.max_rerun AS rerun_max
		   ,t1.max_wait 
		   ,trim(t1.dates_str) as t_general_date
		   , c.condition AS in_condition, d.condition AS out_condition, t1.table_id, t1.job_id
		   ,t1.interval_sequence
		   ,t1.specific_times
		   ,t1.tolerance
		   ,t1.cyclic_type
		   ,t1.active_from, t1.active_till
		   ,t1.shift, t1.shift_num, t1.conf_cal
		   ,(SELECT scode_nm FROM $SCHEMA$.EZ_SCODE
   			  WHERE scode_cd = (SELECT CASE WHEN INSTR(data_center, ',') > 0
 		   			 	   				    THEN SUBSTR(data_center, 1, INSTR(data_center, ',')-1)
				   		   			 	   ELSE data_center END
 			   	 				 FROM $SCHEMA$.EZ_JOB_MAPPER WHERE job = t1.job_name)) as data_center_name
		from def_job t1 LEFT OUTER JOIN ( SELECT job_id, table_id, LISTAGG(condition, ',') WITHIN GROUP (ORDER BY job_id) as condition FROM DEF_LNKI_P GROUP BY job_id, table_id ) c
		  ON t1.table_id = c.table_id
		 AND t1.job_id = c.job_id
		 	 LEFT OUTER JOIN ( SELECT job_id, table_id, LISTAGG(condition, ',') WITHIN GROUP (ORDER BY job_id) as condition FROM DEF_LNKO_P GROUP BY job_id, table_id ) d
		  ON t1.table_id = d.table_id
		 AND t1.job_id = d.job_id
		, def_tables t2
		where t1.table_id = t2.table_id
		  and t1.job_name = #job_name#
		<isNotEmpty prepend="and" property="p_sched_table">
			parent_table = #p_sched_table#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_application_of_def">
			application = #p_application_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_group_name_of_def">
			group_name = #p_group_name_of_def#
		</isNotEmpty>
		<!-- 	<isNotEmpty property="table_id">
			and t1.table_id = #table_id#
		</isNotEmpty>	
		<isNotEmpty property="job_id">
			and t1.job_id = #job_id#
		</isNotEmpty>  -->

	</select>
	
	<select id="jobModifyInfoConditionsIn" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > jobModifyInfoConditionsIn */
	<![CDATA[
		select 
			case when t1.and_or = 'A' then 'and' when t1.and_or = 'O' then 'or' else t1.and_or end AS in_conditions_opt
		    ,(case when t1.parentheses = '(' then '(' else '' end)|| t1.condition || (case when t1.parentheses = ')' then ')' else '' end)|| ',' ||  t1.odate || ',' || case when t1.and_or = 'A' then 'and' when t1.and_or = 'O' then 'or' else t1.and_or end AS t_conditions_in
		from def_lnki_p t1, def_job t2
		where 1=1
	      and t1.table_id = t2.table_id
	      and t1.job_id = t2.job_id
	      and t2.job_name = #job_name#
	]]>
		<isNotEmpty prepend="and" property="p_sched_table">
			parent_table = #p_sched_table#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_application_of_def">
			application = #p_application_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_group_name_of_def">
			group_name = #p_group_name_of_def#
		</isNotEmpty>
		<!-- 
		<isNotEmpty property="table_id">
			and t1.table_id = #table_id#
		</isNotEmpty>	
		<isNotEmpty property="job_id">
			and t1.job_id = #job_id#
		</isNotEmpty>	
		-->
		order by order_
	</select>
	
	<select id="jobModifyInfoConditionsOut" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > jobModifyInfoConditionsOut */
	<![CDATA[
		select 
		    t1.condition || ',' || t1.odate || ',' || case when t1.sign='+' then 'add' when t1.sign='-' then 'delete' else t1.sign end AS t_conditions_out
		from def_lnko_p t1, def_job t2
		where 1=1
	      and t1.table_id = t2.table_id
	      and t1.job_id = t2.job_id
	      and t2.job_name = #job_name#		
	]]>
		<isNotEmpty prepend="and" property="p_sched_table">
			parent_table = #p_sched_table#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_application_of_def">
			application = #p_application_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_group_name_of_def">
			group_name = #p_group_name_of_def#
		</isNotEmpty>
		<!-- 
		<isNotEmpty property="table_id">
			and t1.table_id = #table_id#
		</isNotEmpty>	
		<isNotEmpty property="job_id">
			and t1.job_id = #job_id#
		</isNotEmpty>
		-->
	
	</select>
	
	<select id="jobModifyInfoResourcesQ" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > jobModifyInfoResourcesQ */
	<![CDATA[
		select
		    t1.resource_ || ',' || t1.quant AS t_resources_q
		from def_lnki_q t1, def_job t2
		where 1=1
	      and t1.table_id = t2.table_id
	      and t1.job_id = t2.job_id
	      and t2.job_name = #job_name#			
	]]>
		<isNotEmpty prepend="and" property="p_sched_table">
			parent_table = #p_sched_table#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_application_of_def">
			application = #p_application_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_group_name_of_def">
			group_name = #p_group_name_of_def#
		</isNotEmpty>
		<!-- 
		<isNotEmpty property="table_id">
			and t1.table_id = #table_id#
		</isNotEmpty>	
		<isNotEmpty property="job_id">
			and t1.job_id = #job_id#
		</isNotEmpty>
		-->
	
	</select>
	
	<select id="jobModifyInfoResourcesC" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > jobModifyInfoResourcesC */
	<![CDATA[
		select
		    t1.resource_ || ',' || case when t1.type='E' then 'exclusive' when t1.type='S' then 'shared' else  t1.type end AS t_resources_c
		from def_lnki_c t1, def_job t2
		where 1=1
	      and t1.table_id = t2.table_id
	      and t1.job_id = t2.job_id
	      and t2.job_name = #job_name#		
	]]>
		<isNotEmpty prepend="and" property="p_sched_table">
			parent_table = #p_sched_table#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_application_of_def">
			application = #p_application_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_group_name_of_def">
			group_name = #p_group_name_of_def#
		</isNotEmpty>
		<!-- 
		<isNotEmpty property="table_id">
			and t1.table_id = #table_id#
		</isNotEmpty>	
		<isNotEmpty property="job_id">
			and t1.job_id = #job_id#
		</isNotEmpty>
		-->
	
	</select>
	
	<select id="jobModifyInfoSetVar" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > jobModifyInfoSetVar */
	<![CDATA[
		select
		    replace(t1.name, '%', '') || ',' || coalesce(t1.value,'') AS t_set
		from def_setvar t1, def_job t2
		where 1=1
	      and t1.table_id = t2.table_id
	      and t1.job_id = t2.job_id
	      and t2.job_name = #job_name#	
	]]>
		<isNotEmpty prepend="and" property="p_sched_table">
			parent_table = #p_sched_table#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_application_of_def">
			application = #p_application_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_group_name_of_def">
			group_name = #p_group_name_of_def#
		</isNotEmpty>
		<!-- 
		<isNotEmpty property="table_id">
			and t1.table_id = #table_id#
		</isNotEmpty>	
		<isNotEmpty property="job_id">
			and t1.job_id = #job_id#
		</isNotEmpty>	
		-->
		order by order_
	</select>
	
	<select id="jobModifyInfoStep" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > jobModifyInfoStep */
	<![CDATA[
		]]>
		select
			case when u.on_do='on' then 'O' else 'A' end
		    ||','|| u.type
		    || case when u.type = 'Statement' then ',' || u.stmt || ',' || u.code
		        when u.type = 'Set-Var' then ',' || u.setvar_name || ',' || u.setvar_value
		        when u.type = 'Shout' then ',' || u.shout_destination || ',' || case when u.shout_urgency='R' then 'regular' when u.shout_urgency='U' then 'urgent' else 'very_urgent' end || ',' || shout_message 
		        when u.type = 'Force-Job' then ',' || u.forcej_sched_table || ',' || u.forcej_job || ',' || forcej_odate
		        when u.type = 'Sysout' then ',' || u.sysout_sysopt || ',' || u.sysout_parm
		        when u.type = 'Condition' then ',' || u.cond_condition || ',' || u.cond_odate || ',' || (case when u.cond_sign='+' then 'add' when u.cond_sign='-' then 'delete' else u.cond_sign end)
		        when u.type = 'Mail' then ',' || u.mail_destination || ',' || u.mail_cc_destination || ',' || u.mail_subject_line || ',' || case when u.mail_urgency='R' then 'regular' when u.mail_urgency='U' then 'urgent' else 'very_urgent' end || ',' || u.mail_message 
		        else '' end  as t_steps
		from
		    (
		    select
		    	if_no, on_no AS no_,'on' AS on_do, 'Statement' AS type
		    	,stmt AS stmt, code AS code
		    	,'' AS setvar_name, '' AS setvar_value
		    	,'' AS shout_destination, '' AS shout_urgency, '' AS shout_message
		    	,'' AS forcej_sched_table, '' AS forcej_job, '' AS forcej_odate
		    	,'' AS sysout_sysopt, '' AS sysout_parm
		    	,'' AS cond_condition, '' AS cond_odate, '' AS cond_sign
		    	,'' AS mail_destination, '' AS mail_cc_destination, '' AS mail_subject_line, '' AS mail_urgency, '' AS mail_message
		    from def_on t1, def_job t2
			where 1=1
		      and t1.table_id = t2.table_id
		      and t1.job_id = t2.job_id
		      and t2.job_name = #job_name#	
		    <isNotEmpty prepend="and" property="p_sched_table">
				parent_table = #p_sched_table#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_application_of_def">
				application = #p_application_of_def#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_group_name_of_def">
				group_name = #p_group_name_of_def#
			</isNotEmpty>
			
		    union all
		    select 
		    	if_no, do_no,'do', action
		    	,'', ''
		    	,'', ''
		    	,'', '', ''
		    	,'', '', ''
		    	,'', ''
		    	,'', '', ''
		    	,'', '', '', '', ''
		    from def_do t1, def_job t2
			where 1=1
		      and t1.table_id = t2.table_id
		      and t1.job_id = t2.job_id
		      and t2.job_name = #job_name#	
		    <isNotEmpty prepend="and" property="p_sched_table">
				parent_table = #p_sched_table#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_application_of_def">
				application = #p_application_of_def#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_group_name_of_def">
				group_name = #p_group_name_of_def#
			</isNotEmpty>
			
		    union all
		    select 
		    	if_no, do_no,'do', 'Set-Var'
		    	,'', ''
		    	,name, value
		    	,'', '', ''
		    	,'', '', ''
		    	,'', ''
		    	,'', '', ''
		    	,'', '', '', '', ''
		    from def_do_setvar t1, def_job t2
			where 1=1
		      and t1.table_id = t2.table_id
		      and t1.job_id = t2.job_id
		      and t2.job_name = #job_name#	
			<isNotEmpty prepend="and" property="p_sched_table">
				parent_table = #p_sched_table#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_application_of_def">
				application = #p_application_of_def#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_group_name_of_def">
				group_name = #p_group_name_of_def#
			</isNotEmpty>
			
		    union all
		    select 
		    	if_no, do_no,'do', 'Shout'
		    	,'', ''
		    	,'', ''
		    	,destination, urgency, message
		    	,'', '', ''
		    	,'', ''
		    	,'', '', ''
		    	,'', '', '', '', ''
		    from  def_do_shout t1, def_job t2
			where 1=1
		      and t1.table_id = t2.table_id
		      and t1.job_id = t2.job_id
		      and t2.job_name = #job_name#	
			<isNotEmpty prepend="and" property="p_sched_table">
				parent_table = #p_sched_table#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_application_of_def">
				application = #p_application_of_def#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_group_name_of_def">
				group_name = #p_group_name_of_def#
			</isNotEmpty>
			
		    union all
		    select 
		    	if_no, do_no,'do', 'Force-Job'
		    	,'', ''
		    	,'', ''
		    	,'', '', ''
		    	,sched_table, job, odate
		    	,'', ''
		    	,'', '', ''
		    	,'', '', '', '', ''
		    from  def_do_forcej t1, def_job t2
			where 1=1
		      and t1.table_id = t2.table_id
		      and t1.job_id = t2.job_id
		      and t2.job_name = #job_name#	
			<isNotEmpty prepend="and" property="p_sched_table">
				parent_table = #p_sched_table#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_application_of_def">
				application = #p_application_of_def#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_group_name_of_def">
				group_name = #p_group_name_of_def#
			</isNotEmpty>
			
			union all
		    select 
		    	t1.if_no, t1.do_no,'do', 'Sysout'
		    	,'', ''
		    	,'', ''
		    	,'', '', ''
		    	,'', '', ''
		    	,t1.sysopt, t1.parm
		    	,'', '', ''
		    	,'', '', '', '', ''
		    from  def_do_sysout t1, def_job t2
			where 1=1
		      and t1.table_id = t2.table_id
		      and t1.job_id = t2.job_id
		      and t2.job_name = #job_name#	
			<isNotEmpty prepend="and" property="p_sched_table">
				parent_table = #p_sched_table#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_application_of_def">
				application = #p_application_of_def#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_group_name_of_def">
				group_name = #p_group_name_of_def#
			</isNotEmpty>
			
			union all
		    select 
		    	if_no, do_no,'do', 'Condition'
		    	,'', ''
		    	,'', ''
		    	,'', '', ''
		    	,'', '', ''
		    	,'', ''
		    	,condition, odate, sign
		    	,'', '', '', '', ''
		    from  def_do_cond t1, def_job t2
			where 1=1
		      and t1.table_id = t2.table_id
		      and t1.job_id = t2.job_id
		      and t2.job_name = #job_name#	
			<isNotEmpty prepend="and" property="p_sched_table">
				parent_table = #p_sched_table#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_application_of_def">
				application = #p_application_of_def#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_group_name_of_def">
				group_name = #p_group_name_of_def#
			</isNotEmpty>
			
			union all
		    select 
		    	if_no, do_no,'do', 'Mail'
		    	,'', ''
		    	,'', ''
		    	,'', '', ''
		    	,'', '', ''
		    	,'', ''
		    	,'', '', ''
		    	,destination, cc_destination, subject_line, urgency, substr(message, 5)
		    from  def_do_mail t1, def_job t2
			where 1=1
		      and t1.table_id = t2.table_id
		      and t1.job_id = t2.job_id
		      and t2.job_name = #job_name#	
		    <isNotEmpty prepend="and" property="p_sched_table">
				parent_table = #p_sched_table#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_application_of_def">
				application = #p_application_of_def#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="p_group_name_of_def">
				group_name = #p_group_name_of_def#
			</isNotEmpty>	    
				<!-- 
				<isNotEmpty property="table_id">
					and t1.table_id = #table_id#
				</isNotEmpty>	
				<isNotEmpty property="job_id">
					and t1.job_id = #job_id#
				</isNotEmpty>
				-->
		    
		    ) u
		where 1=1		
		order by if_no, no_, on_do DESC	
	
	</select>
	
	<select id="jobModifyInfoShout" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > jobModifyInfoShout */
	<![CDATA[
		select
		    case when t1.when_cond='OK' then 'ok'
		    			when t1.when_cond='NOTOK' then 'not_ok'
		    			when t1.when_cond='RERUN' then 'rerun'
		    			when t1.when_cond='LATESUB' then 'late_submission'
		    			when t1.when_cond='LATETIME' then 'late_time'
		    			when t1.when_cond='EXECTIME' then 'execution_time'
		    			else t1.when_cond end
		    || ',' || nvl(t1.shout_time, '')
		    || ',' || t1.destination
		    || ',' || case when t1.urgency='R' then 'regular' when t1.urgency='U' then 'urgent' else 'very_urgent' end  || ',' || t1.message AS t_postproc
		from def_shout t1, def_job t2
		where 1=1
		  and t1.table_id = t2.table_id
		  and t1.job_id = t2.job_id	
		  and t2.job_name = #job_name#
	]]>		
		<isNotEmpty prepend="and" property="p_sched_table">
			parent_table = #p_sched_table#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_application_of_def">
			application = #p_application_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_group_name_of_def">
			group_name = #p_group_name_of_def#
		</isNotEmpty>

	</select>
	
	<select id="jobModifyInfoTags" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > jobModifyInfoTags */
		SELECT tag_name AS t_tag_name
		  
		<isEqual property="task_type" compareValue="SMART Table">
			FROM DEF_TAGS tb1, def_job t2		
		</isEqual>
		<isNotEqual property="task_type" compareValue="SMART Table">
			FROM DEF_JOB_TAGS tb1, def_job t2
		</isNotEqual>
		
		WHERE 1 = 1
		  and t1.table_id = t2.table_id
		  and t1.job_id = t2.job_id
		
		  and t2.job_name = #job_name#
		  
		<isNotEmpty prepend="and" property="p_sched_table">
			parent_table = #p_sched_table#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_application_of_def">
			application = #p_application_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_group_name_of_def">
			group_name = #p_group_name_of_def#
		</isNotEmpty>

	</select>

	<select id="jobMapperInfo" resultClass="JobMapperBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobMapperInfo */
		SELECT  case when tb2.user_id is null then null else tb1.user_cd_1 END AS user_cd_1,
			case when tb3.user_id is null then null else tb1.user_cd_2 END AS user_cd_2,
			case when tb4.user_id is null then null else tb1.user_cd_3 END AS user_cd_3,
			case when tb5.user_id is null then null else tb1.user_cd_4 END AS user_cd_4,
			case when tb6.user_id is null then null else tb1.user_cd_5 END AS user_cd_5,
			case when tb7.user_id is null then null else tb1.user_cd_6 END AS user_cd_6,
			case when tb8.user_id is null then null else tb1.user_cd_7 END AS user_cd_7,
			case when tb9.user_id is null then null else tb1.user_cd_8 END AS user_cd_8,
			case when tb10.user_id is null then null else tb1.user_cd_9 END AS user_cd_9,
			case when tb11.user_id is null then null else tb1.user_cd_10 END AS user_cd_10,
			case when tb12.group_line_grp_nm is null then null else tb1.grp_cd_1 END AS grp_cd_1,
			case when tb13.group_line_grp_nm is null then null else tb1.grp_cd_2 END AS grp_cd_2

			 , tb2.user_nm AS user_nm_1, tb3.user_nm AS user_nm_2, tb4.user_nm AS user_nm_3, tb5.user_nm AS user_nm_4
			 , tb6.user_nm AS user_nm_5, tb7.user_nm AS user_nm_6, tb8.user_nm AS user_nm_7,tb9.user_nm AS user_nm_8
			 , tb10.user_nm AS user_nm_9, tb11.user_nm AS user_nm_10
			 , tb12.group_line_grp_nm AS grp_nm_1, tb13.group_line_grp_nm AS grp_nm_2

			 , tb2.user_hp AS user_hp_1, tb3.user_hp AS user_hp_2

			 , tb2.user_tel AS user_tel_1, tb3.user_tel AS user_tel_2

			 , tb2.user_email AS user_email_1, tb3.user_email AS user_email_2

			 , tb2.dept_cd as dept_cd_1
			 , ( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb2.dept_cd ) AS dept_nm_1
			 , ( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb3.dept_cd ) AS dept_nm_2

			 , ( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb2.duty_cd ) AS duty_nm_1
			 , ( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb3.duty_cd ) AS duty_nm_2

			 , tb1.sms_1, tb1.sms_2, tb1.sms_3, tb1.sms_4, tb1.sms_5, tb1.sms_6, tb1.sms_7, tb1.sms_8, tb1.sms_9, tb1.sms_10
			 , tb1.mail_1, tb1.mail_2, tb1.mail_3, tb1.mail_4, tb1.mail_5, tb1.mail_6, tb1.mail_7, tb1.mail_8, tb1.mail_9, tb1.mail_10
		     , tb1.grp_sms_1, tb1.grp_sms_2, tb1.grp_mail_1, tb1.grp_mail_2

			 , tb1.error_description
			 , tb1.late_sub, tb1.late_time, tb1.late_exec, tb1.data_center

			 ,tb1.batchjobgrade as batchJobGrade
			 ,tb1.jobSchedGb

			 ,( CASE WHEN INSTR(tb1.data_center, ',') > 0
						 THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(tb1.data_center, 1, INSTR(tb1.data_center, ',')-1))
					 ELSE tb1.data_center END ) AS data_center_name
			 ,tb1.success_sms_yn
		FROM $SCHEMA$.EZ_JOB_MAPPER tb1
				 left outer join $SCHEMA$.EZ_USER tb2 on tb1.user_cd_1 = tb2.user_cd
				 left outer join $SCHEMA$.EZ_USER tb3 on tb1.user_cd_2 = tb3.user_cd
				 left outer join $SCHEMA$.EZ_USER tb4 on tb1.user_cd_3 = tb4.user_cd
				 left outer join $SCHEMA$.EZ_USER tb5 on tb1.user_cd_4 = tb5.user_cd
				 left outer join $SCHEMA$.EZ_USER tb6 on tb1.user_cd_5 = tb6.user_cd
				 left outer join $SCHEMA$.EZ_USER tb7 on tb1.user_cd_6 = tb7.user_cd
				 left outer join $SCHEMA$.EZ_USER tb8 on tb1.user_cd_7 = tb8.user_cd
				 left outer join $SCHEMA$.EZ_USER tb9 on tb1.user_cd_8 = tb9.user_cd
				 left outer join $SCHEMA$.EZ_USER tb10 on tb1.user_cd_9 = tb10.user_cd
				 left outer join $SCHEMA$.EZ_USER tb11 on tb1.user_cd_10 = tb11.user_cd
				 left outer join $SCHEMA$.EZ_GROUP_APPROVAL_GROUP tb12 on tb1.grp_cd_1 = tb12.group_line_grp_cd
				 left outer join $SCHEMA$.EZ_GROUP_APPROVAL_GROUP tb13 on tb1.grp_cd_2 = tb13.group_line_grp_cd

		WHERE 1 = 1
		  AND job = #job_name#
		  AND data_center = #data_center#
	</select>
	
	<select id="jobMapperOriInfo" resultClass="JobMapperBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobMapperOriInfo */
		SELECT  case when tb2.user_id is null then null else tb1.user_cd_1 END AS user_cd_1,
			case when tb3.user_id is null then null else tb1.user_cd_2 END AS user_cd_2,
			case when tb4.user_id is null then null else tb1.user_cd_3 END AS user_cd_3,
			case when tb5.user_id is null then null else tb1.user_cd_4 END AS user_cd_4,
			case when tb6.user_id is null then null else tb1.user_cd_5 END AS user_cd_5,
			case when tb7.user_id is null then null else tb1.user_cd_6 END AS user_cd_6,
			case when tb8.user_id is null then null else tb1.user_cd_7 END AS user_cd_7,
			case when tb9.user_id is null then null else tb1.user_cd_8 END AS user_cd_8,
			case when tb10.user_id is null then null else tb1.user_cd_9 END AS user_cd_9,
			case when tb11.user_id is null then null else tb1.user_cd_10 END AS user_cd_10,
			case when tb12.group_line_grp_nm is null then null else tb1.grp_cd_1 END AS grp_cd_1,
			case when tb13.group_line_grp_nm is null then null else tb1.grp_cd_2 END AS grp_cd_2

			 , tb2.user_nm AS user_nm_1, tb3.user_nm AS user_nm_2, tb4.user_nm AS user_nm_3, tb5.user_nm AS user_nm_4
			 , tb6.user_nm AS user_nm_5, tb7.user_nm AS user_nm_6, tb8.user_nm AS user_nm_7,tb9.user_nm AS user_nm_8
			 , tb10.user_nm AS user_nm_9, tb11.user_nm AS user_nm_10
			 , tb12.group_line_grp_nm AS grp_nm_1, tb13.group_line_grp_nm AS grp_nm_2

			 , tb2.user_hp AS user_hp_1, tb3.user_hp AS user_hp_2

			 , tb2.user_tel AS user_tel_1, tb3.user_tel AS user_tel_2

			 , tb2.user_email AS user_email_1, tb3.user_email AS user_email_2

			 , tb2.dept_cd as dept_cd_1
			 , ( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb2.dept_cd ) AS dept_nm_1
			 , ( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb3.dept_cd ) AS dept_nm_2

			 , ( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb2.duty_cd ) AS duty_nm_1
			 , ( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb3.duty_cd ) AS duty_nm_2

			 , tb1.sms_1, tb1.sms_2, tb1.sms_3, tb1.sms_4, tb1.sms_5, tb1.sms_6, tb1.sms_7, tb1.sms_8, tb1.sms_9, tb1.sms_10
			 , tb1.mail_1, tb1.mail_2, tb1.mail_3, tb1.mail_4, tb1.mail_5, tb1.mail_6, tb1.mail_7, tb1.mail_8, tb1.mail_9, tb1.mail_10
		     , tb1.grp_sms_1, tb1.grp_sms_2, tb1.grp_mail_1, tb1.grp_mail_2

			 , tb1.error_description
			 , tb1.late_sub, tb1.late_time, tb1.late_exec, tb1.data_center

			 ,tb1.batchjobgrade as batchJobGrade
			 ,tb1.jobSchedGb

			 ,( CASE WHEN INSTR(tb1.data_center, ',') > 0
						 THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(tb1.data_center, 1, INSTR(tb1.data_center, ',')-1))
					 ELSE tb1.data_center END ) AS data_center_name
			 ,tb1.success_sms_yn
		FROM $SCHEMA$.EZ_JOB_MAPPER_ORIGINAL tb1
				 left outer join $SCHEMA$.EZ_USER tb2 on tb1.user_cd_1 = tb2.user_cd
				 left outer join $SCHEMA$.EZ_USER tb3 on tb1.user_cd_2 = tb3.user_cd
				 left outer join $SCHEMA$.EZ_USER tb4 on tb1.user_cd_3 = tb4.user_cd
				 left outer join $SCHEMA$.EZ_USER tb5 on tb1.user_cd_4 = tb5.user_cd
				 left outer join $SCHEMA$.EZ_USER tb6 on tb1.user_cd_5 = tb6.user_cd
				 left outer join $SCHEMA$.EZ_USER tb7 on tb1.user_cd_6 = tb7.user_cd
				 left outer join $SCHEMA$.EZ_USER tb8 on tb1.user_cd_7 = tb8.user_cd
				 left outer join $SCHEMA$.EZ_USER tb9 on tb1.user_cd_8 = tb9.user_cd
				 left outer join $SCHEMA$.EZ_USER tb10 on tb1.user_cd_9 = tb10.user_cd
				 left outer join $SCHEMA$.EZ_USER tb11 on tb1.user_cd_10 = tb11.user_cd
				 left outer join $SCHEMA$.EZ_GROUP_APPROVAL_GROUP tb12 on tb1.grp_cd_1 = tb12.group_line_grp_cd
				 left outer join $SCHEMA$.EZ_GROUP_APPROVAL_GROUP tb13 on tb1.grp_cd_2 = tb13.group_line_grp_cd

		WHERE 1 = 1
		  AND job = #job_name#
		  AND data_center = #data_center#
		  AND doc_cd = #doc_cd# 
	</select>

	<select id="jobMapperDocInfo" resultClass="JobMapperBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobMapperDocInfo */
		SELECT  case when tb2.user_id is null then null else tb1.user_cd_1 END AS user_cd_1,
			case when tb3.user_id is null then null else tb1.user_cd_2 END AS user_cd_2,
			case when tb4.user_id is null then null else tb1.user_cd_3 END AS user_cd_3,
			case when tb5.user_id is null then null else tb1.user_cd_4 END AS user_cd_4,
			case when tb6.user_id is null then null else tb1.user_cd_5 END AS user_cd_5,
			case when tb7.user_id is null then null else tb1.user_cd_6 END AS user_cd_6,
			case when tb8.user_id is null then null else tb1.user_cd_7 END AS user_cd_7,
			case when tb9.user_id is null then null else tb1.user_cd_8 END AS user_cd_8,
			case when tb10.user_id is null then null else tb1.user_cd_9 END AS user_cd_9,
			case when tb11.user_id is null then null else tb1.user_cd_10 END AS user_cd_10,
			case when tb13.group_line_grp_nm is null then null else tb1.grp_cd_1 END AS grp_cd_1,
			case when tb14.group_line_grp_nm is null then null else tb1.grp_cd_2 END AS grp_cd_2

			 , tb2.user_nm AS user_nm_1, tb3.user_nm AS user_nm_2, tb4.user_nm AS user_nm_3, tb5.user_nm AS user_nm_4
			 , tb6.user_nm AS user_nm_5, tb7.user_nm AS user_nm_6, tb8.user_nm AS user_nm_7,tb9.user_nm AS user_nm_8
			 , tb10.user_nm AS user_nm_9, tb11.user_nm AS user_nm_10
			 , tb13.group_line_grp_nm AS grp_nm_1, tb14.group_line_grp_nm AS grp_nm_2

		     , tb2.user_hp AS user_hp_1, tb3.user_hp AS user_hp_2

			 , tb2.user_tel AS user_tel_1, tb3.user_tel AS user_tel_2

			 , tb2.user_email AS user_email_1, tb3.user_email AS user_email_2

			 , ( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb2.dept_cd ) AS dept_nm_1
			 , ( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb3.dept_cd ) AS dept_nm_2

			 , ( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb2.duty_cd ) AS duty_nm_1
			 , ( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb3.duty_cd ) AS duty_nm_2

			 , tb1.sms_1, tb1.sms_2, tb1.sms_3, tb1.sms_4, tb1.sms_5, tb1.sms_6, tb1.sms_7, tb1.sms_8, tb1.sms_9, tb1.sms_10
			 , tb1.mail_1, tb1.mail_2, tb1.mail_3, tb1.mail_4, tb1.mail_5, tb1.mail_6, tb1.mail_7, tb1.mail_8, tb1.mail_9, tb1.mail_10
			 , tb1.grp_sms_1, tb1.grp_sms_2, tb1.grp_mail_1, tb1.grp_mail_2

			 , tb1.error_description
			 , tb1.late_sub, tb1.late_time, tb1.late_exec, tb1.data_center

			 ,tb1.batchjobgrade as batchJobGrade

			 ,tb1.jobSchedGb

			 ,tb1.job
			 ,( CASE WHEN INSTR(tb1.data_center, ',') > 0
						 THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(tb1.data_center, 1, INSTR(tb1.data_center, ',')-1))
					 ELSE tb1.data_center END ) AS data_center_name
			 , tb1.success_sms_yn
			 ,(case when tb12.doc_gb='01' then (select t_steps from $SCHEMA$.EZ_doc_01 where doc_cd=tb1.doc_cd)
					when tb12.doc_gb='04' then (select t_steps from $SCHEMA$.EZ_doc_04 where doc_cd=tb1.doc_cd)
					when tb12.doc_gb='06' then (select t_steps from $SCHEMA$.EZ_doc_06_detail where doc_cd=tb1.doc_cd and job_name = #job#)
					else '' end) as t_steps
			 ,(case when tb12.doc_gb='01' then (select priority from $SCHEMA$.EZ_doc_01 where doc_cd=tb1.doc_cd)
					when tb12.doc_gb='04' then (select priority from $SCHEMA$.EZ_doc_04 where doc_cd=tb1.doc_cd)
					when tb12.doc_gb='06' then (select priority from $SCHEMA$.EZ_doc_06_detail where doc_cd=tb1.doc_cd and job_name = #job#)
					else '' end) as priority
		FROM $SCHEMA$.EZ_JOB_MAPPER_DOC tb1
				 left outer join $SCHEMA$.EZ_USER tb2 on tb1.user_cd_1 = tb2.user_cd
				 left outer join $SCHEMA$.EZ_USER tb3 on tb1.user_cd_2 = tb3.user_cd
				 left outer join $SCHEMA$.EZ_USER tb4 on tb1.user_cd_3 = tb4.user_cd
				 left outer join $SCHEMA$.EZ_USER tb5 on tb1.user_cd_4 = tb5.user_cd
				 left outer join $SCHEMA$.EZ_USER tb6 on tb1.user_cd_5 = tb6.user_cd
				 left outer join $SCHEMA$.EZ_USER tb7 on tb1.user_cd_6 = tb7.user_cd
				 left outer join $SCHEMA$.EZ_USER tb8 on tb1.user_cd_7 = tb8.user_cd
				 left outer join $SCHEMA$.EZ_USER tb9 on tb1.user_cd_8 = tb9.user_cd
				 left outer join $SCHEMA$.EZ_USER tb10 on tb1.user_cd_9 = tb10.user_cd
				 left outer join $SCHEMA$.EZ_USER tb11 on tb1.user_cd_10 = tb11.user_cd
				 left outer join $SCHEMA$.EZ_GROUP_APPROVAL_GROUP tb13 on tb1.grp_cd_1 = tb13.group_line_grp_cd
				 left outer join $SCHEMA$.EZ_GROUP_APPROVAL_GROUP tb14 on tb1.grp_cd_2 = tb14.group_line_grp_cd
		   , $SCHEMA$.ez_doc_master tb12
		WHERE 1 = 1
		  and tb1.doc_cd = tb12.doc_cd
		  AND tb1.doc_cd = #doc_cd#

		<isNotEqual property="doc_gb" compareValue="09">
		  AND tb1.job = #job#
		</isNotEqual>
	</select>

	<select id="jobMapperDocPrevInfo" resultClass="JobMapperBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobMapperDocPrevInfo */
		SELECT  case when tb2.user_id is null then null else tb1.user_cd_1 END AS user_cd_1,
			case when tb3.user_id is null then null else tb1.user_cd_2 END AS user_cd_2,
			case when tb4.user_id is null then null else tb1.user_cd_3 END AS user_cd_3,
			case when tb5.user_id is null then null else tb1.user_cd_4 END AS user_cd_4,
			case when tb6.user_id is null then null else tb1.user_cd_5 END AS user_cd_5,
			case when tb7.user_id is null then null else tb1.user_cd_6 END AS user_cd_6,
			case when tb8.user_id is null then null else tb1.user_cd_7 END AS user_cd_7,
			case when tb9.user_id is null then null else tb1.user_cd_8 END AS user_cd_8,
			case when tb10.user_id is null then null else tb1.user_cd_9 END AS user_cd_9,
			case when tb11.user_id is null then null else tb1.user_cd_10 END AS user_cd_10,
			case when tb13.group_line_grp_nm is null then null else tb1.grp_cd_1 END AS grp_cd_1,
			case when tb14.group_line_grp_nm is null then null else tb1.grp_cd_2 END AS grp_cd_2

		     , tb2.user_nm AS user_nm_1, tb3.user_nm AS user_nm_2, tb4.user_nm AS user_nm_3, tb5.user_nm AS user_nm_4
		     , tb6.user_nm AS user_nm_5, tb7.user_nm AS user_nm_6, tb8.user_nm AS user_nm_7,tb9.user_nm AS user_nm_8
		     , tb10.user_nm AS user_nm_9, tb11.user_nm AS user_nm_10
		     , tb13.group_line_grp_nm AS grp_nm_1, tb14.group_line_grp_nm AS grp_nm_2

			 , tb1.job
			 , tb1.late_sub, tb1.late_time, tb1.late_exec, tb1.data_center, tb1.jobSchedGb
			 ,(select scode_nm from $SCHEMA$.ez_scode where scode_nm = tb1.batchJobGrade) as batchJobGrade

		    ,(case when tb12.doc_gb='01' then (select description from $SCHEMA$.EZ_doc_01 where doc_cd=tb1.doc_cd)
				   when tb12.doc_gb='02' then (select description from $SCHEMA$.EZ_doc_02 where doc_cd=tb1.doc_cd)
				   when tb12.doc_gb='03' then (select description from $SCHEMA$.EZ_doc_03 where doc_cd=tb1.doc_cd)
				   when tb12.doc_gb='04' then (select description from $SCHEMA$.EZ_doc_04 where doc_cd=tb1.doc_cd)
				   when tb12.doc_gb='05' then (select description from $SCHEMA$.EZ_doc_05 where doc_cd=tb1.doc_cd)
				   when tb12.doc_gb='06' then (select description from $SCHEMA$.EZ_doc_06_detail where doc_cd=tb1.doc_cd and job_name = #job_name#)
				   when tb12.doc_gb='07' then (select description from $SCHEMA$.EZ_doc_07 where doc_cd=tb1.doc_cd)
				   else '' end) as description

			 ,( CASE WHEN INSTR(tb1.data_center, ',') > 0
						 THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(tb1.data_center, 1, INSTR(tb1.data_center, ',')-1))
					 ELSE tb1.data_center END ) AS data_center_name
			 ,tb1.job as job_name
			 ,tb1.batchjobgrade
			 ,tb1.late_sub
			 ,tb1.late_time
			 ,tb1.late_exec
			 ,to_char(tb12.apply_date, 'YYYY-MM-DD HH24:MI:SS') as apply_date
			 ,tb1.success_sms_yn
			 ,(case when tb12.doc_gb='01' then (select t_steps from $SCHEMA$.EZ_doc_01 where doc_cd=tb1.doc_cd)
					when tb12.doc_gb='04' then (select t_steps from $SCHEMA$.EZ_doc_04 where doc_cd=tb1.doc_cd)
					when tb12.doc_gb='06' then (select t_steps from $SCHEMA$.EZ_doc_06_detail where doc_cd=tb1.doc_cd and job_name = #job_name#)
					else '' end) as t_steps
			 ,(case when tb12.doc_gb='01' then (select priority from $SCHEMA$.EZ_doc_01 where doc_cd=tb1.doc_cd)
					when tb12.doc_gb='04' then (select priority from $SCHEMA$.EZ_doc_04 where doc_cd=tb1.doc_cd)
					when tb12.doc_gb='06' then (select priority from $SCHEMA$.EZ_doc_06_detail where doc_cd=tb1.doc_cd and job_name = #job_name#)
					else '' end) as priority
			 ,(case when tb12.doc_gb='01' then (select days_cal from $SCHEMA$.EZ_doc_01 where doc_cd=tb1.doc_cd)
					when tb12.doc_gb='04' then (select days_cal from $SCHEMA$.EZ_doc_04 where doc_cd=tb1.doc_cd)
					when tb12.doc_gb='06' then (select days_cal from $SCHEMA$.EZ_doc_06_detail where doc_cd=tb1.doc_cd and job_name = #job_name#)
					else '' end) as calendar_nm
		FROM $SCHEMA$.EZ_JOB_MAPPER_DOC tb1
				 left outer join $SCHEMA$.EZ_USER tb2 on tb1.user_cd_1 = tb2.user_cd
				 left outer join $SCHEMA$.EZ_USER tb3 on tb1.user_cd_2 = tb3.user_cd
				 left outer join $SCHEMA$.EZ_USER tb4 on tb1.user_cd_3 = tb4.user_cd
				 left outer join $SCHEMA$.EZ_USER tb5 on tb1.user_cd_4 = tb5.user_cd
				 left outer join $SCHEMA$.EZ_USER tb6 on tb1.user_cd_5 = tb6.user_cd
				 left outer join $SCHEMA$.EZ_USER tb7 on tb1.user_cd_6 = tb7.user_cd
				 left outer join $SCHEMA$.EZ_USER tb8 on tb1.user_cd_7 = tb8.user_cd
				 left outer join $SCHEMA$.EZ_USER tb9 on tb1.user_cd_8 = tb9.user_cd
				 left outer join $SCHEMA$.EZ_USER tb10 on tb1.user_cd_9 = tb10.user_cd
				 left outer join $SCHEMA$.EZ_USER tb11 on tb1.user_cd_10 = tb11.user_cd
				 left outer join $SCHEMA$.EZ_GROUP_APPROVAL_GROUP tb13 on tb1.grp_cd_1 = tb13.group_line_grp_cd
				 left outer join $SCHEMA$.EZ_GROUP_APPROVAL_GROUP tb14 on tb1.grp_cd_2 = tb14.group_line_grp_cd

		   ,$SCHEMA$.EZ_DOC_MASTER tb12
		WHERE 1 = 1
		  and tb1.doc_cd = tb12.doc_cd
		  AND job = #job_name#
		  and tb1.doc_cd = #doc_cd#
	</select>

	<select id="jobMapperDocNowInfo" resultClass="JobMapperBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobMapperDocNowInfo */
		SELECT  case when tb2.user_id is null then null else tb1.user_cd_1 END AS user_cd_1,
		case when tb3.user_id is null then null else tb1.user_cd_2 END AS user_cd_2,
		case when tb4.user_id is null then null else tb1.user_cd_3 END AS user_cd_3,
		case when tb5.user_id is null then null else tb1.user_cd_4 END AS user_cd_4,
		case when tb6.user_id is null then null else tb1.user_cd_5 END AS user_cd_5,
		case when tb7.user_id is null then null else tb1.user_cd_6 END AS user_cd_6,
		case when tb8.user_id is null then null else tb1.user_cd_7 END AS user_cd_7,
		case when tb9.user_id is null then null else tb1.user_cd_8 END AS user_cd_8,
		case when tb10.user_id is null then null else tb1.user_cd_9 END AS user_cd_9,
		case when tb11.user_id is null then null else tb1.user_cd_10 END AS user_cd_10,
		case when tb13.group_line_grp_nm is null then null else tb1.grp_cd_1 END AS grp_cd_1,
		case when tb14.group_line_grp_nm is null then null else tb1.grp_cd_2 END AS grp_cd_2

	    , tb2.user_nm AS user_nm_1, tb3.user_nm AS user_nm_2, tb4.user_nm AS user_nm_3, tb5.user_nm AS user_nm_4
	    , tb6.user_nm AS user_nm_5, tb7.user_nm AS user_nm_6, tb8.user_nm AS user_nm_7,tb9.user_nm AS user_nm_8
	    , tb10.user_nm AS user_nm_9, tb11.user_nm AS user_nm_10
	    , tb13.group_line_grp_nm AS grp_nm_1, tb14.group_line_grp_nm AS grp_nm_2

		, tb2.user_hp AS user_hp_1, tb3.user_hp AS user_hp_2

		, tb2.user_tel AS user_tel_1, tb3.user_tel AS user_tel_2

		, tb2.user_email AS user_email_1, tb3.user_email AS user_email_2

		, ( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb2.dept_cd ) AS dept_nm_1
		, ( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb3.dept_cd ) AS dept_nm_2

		, ( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb2.duty_cd ) AS duty_nm_1
		, ( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb3.duty_cd ) AS duty_nm_2

	    , tb1.sms_1, tb1.sms_2, tb1.sms_3, tb1.sms_4, tb1.sms_5, tb1.sms_6, tb1.sms_7, tb1.sms_8, tb1.sms_9, tb1.sms_10
	    , tb1.mail_1, tb1.mail_2, tb1.mail_3, tb1.mail_4, tb1.mail_5, tb1.mail_6, tb1.mail_7, tb1.mail_8, tb1.mail_9, tb1.mail_10
	    , tb1.grp_sms_1, tb1.grp_sms_2, tb1.grp_mail_1, tb1.grp_mail_2

		, tb1.error_description
		, tb1.late_sub, tb1.late_time, tb1.late_exec, tb1.data_center , tb1.jobSchedGb

	    , tb12.description

		,( CASE WHEN INSTR(tb1.data_center, ',') > 0
		THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(tb1.data_center, 1, INSTR(tb1.data_center, ',')-1))
		ELSE tb1.data_center END ) AS data_center_name
		,tb12.job_name
		,tb12.application
		,tb12.group_name
		,LOWER(tb12.task_type) as task_type
		,tb12.node_id
		,tb12.owner
		,tb12.mem_lib
		,tb12.cmd_line
		,tb12.memname
		,(select LISTAGG(t_set, '|') WITHIN GROUP (ORDER BY t_set) as t_set from (select t1.name || ',' || t1.value AS t_set from def_setvar t1 where t1.table_id = tb12.table_id and t1.job_id = tb12.job_id)tt)  as t_set
		,tb1.batchjobgrade
		,tb12.from_time
		,tb12.to_time
		,tb1.late_sub
		,tb1.late_time
		,tb1.late_exec
		,to_char(to_date(tb12.creation_date || tb12.creation_time, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') as apply_date
		, c.condition AS t_conditions_in, d.condition AS t_conditions_out
		, tb1.success_sms_yn, tb12.cyclic
		, tb12.critical
		, tb1.success_sms_yn
		, tb12.confirm_flag, tb12.max_rerun as rerun_max
		, tb12.days_cal as calendar_nm
		, tb12.weeks_cal
		, tb12.conf_cal
		, tb12.shift
		, tb12.shift_num
		, tb12.dates_str AS t_general_date
		, tb12.month_1
	   	, tb12.month_2
	   	, tb12.month_3
	   	, tb12.month_4
	   	, tb12.month_5
	   	, tb12.month_6
	  	, tb12.month_7
	   	, tb12.month_8
	   	, tb12.month_9
	   	, tb12.month_10
	   	, tb12.month_11
	   	, tb12.month_12
		FROM $SCHEMA$.EZ_JOB_MAPPER tb1
				 left outer join $SCHEMA$.EZ_USER tb2 on tb1.user_cd_1 = tb2.user_cd
				 left outer join $SCHEMA$.EZ_USER tb3 on tb1.user_cd_2 = tb3.user_cd
				 left outer join $SCHEMA$.EZ_USER tb4 on tb1.user_cd_3 = tb4.user_cd
				 left outer join $SCHEMA$.EZ_USER tb5 on tb1.user_cd_4 = tb5.user_cd
				 left outer join $SCHEMA$.EZ_USER tb6 on tb1.user_cd_5 = tb6.user_cd
				 left outer join $SCHEMA$.EZ_USER tb7 on tb1.user_cd_6 = tb7.user_cd
				 left outer join $SCHEMA$.EZ_USER tb8 on tb1.user_cd_7 = tb8.user_cd
				 left outer join $SCHEMA$.EZ_USER tb9 on tb1.user_cd_8 = tb9.user_cd
				 left outer join $SCHEMA$.EZ_USER tb10 on tb1.user_cd_9 = tb10.user_cd
				 left outer join $SCHEMA$.EZ_USER tb11 on tb1.user_cd_10 = tb11.user_cd
				 left outer join $SCHEMA$.EZ_GROUP_APPROVAL_GROUP tb13 on tb1.grp_cd_1 = tb13.group_line_grp_cd
				 left outer join $SCHEMA$.EZ_GROUP_APPROVAL_GROUP tb14 on tb1.grp_cd_2 = tb14.group_line_grp_cd


		   ,def_job tb12
		LEFT OUTER JOIN ( SELECT job_id, table_id, LISTAGG(condition, ',') WITHIN GROUP (ORDER BY job_id) AS condition FROM DEF_LNKI_P GROUP BY job_id, table_id ) c
		ON tb12.table_id = c.table_id
		AND tb12.job_id = c.job_id
		LEFT OUTER JOIN ( SELECT job_id, table_id, LISTAGG(condition, ',') WITHIN GROUP (ORDER BY job_id) AS condition FROM DEF_LNKO_P GROUP BY job_id, table_id ) d
		ON tb12.table_id = d.table_id
		AND tb12.job_id = d.job_id
		WHERE 1 = 1
		and tb1.job = tb12.job_name
		AND job = #job_name#
	</select>

	<select id="prevDocInfo" resultClass="JobMapperBean" parameterClass="java.util.Map">
	/* ORACLE_T > prevDocInfo */
		select tt.*
		  from (
			select rownum rnum, ttt.*
<!-- 			select ROW_NUMBER() OVER() AS rnum, ttt.* -->
			  from (
			select tb1.doc_cd, tb1.doc_gb
			  from $SCHEMA$.ez_doc_master tb1, $SCHEMA$.ez_JOB_MAPPER_DOC tb2
			  		LEFT OUTER JOIN $SCHEMA$.ez_doc_06_detail tb3 ON tb2.doc_cd = tb3.doc_cd and tb3.job_name = #job_name#
			 where tb1.doc_cd = tb2.doc_cd
			   and tb2.job = #job_name#
			   and tb1.apply_cd = '02'
			   and tb1.doc_gb in ('01','04')
			 order by tb1.apply_date desc ) ttt) tt
		 where rnum = 2
	</select>

	<select id="nowDocInfo" resultClass="JobMapperBean" parameterClass="java.util.Map">
	/* ORACLE_T > nowDocInfo */
		select tt.*
		  from (
			select rownum rnum, ttt.*
<!-- 			select ROW_NUMBER() OVER() AS rnum, ttt.* -->
			  from (
			select tb1.doc_cd, tb1.doc_gb, tb2.job
			  from $SCHEMA$.ez_doc_master tb1, $SCHEMA$.ez_JOB_MAPPER_DOC tb2
			  		LEFT OUTER JOIN $SCHEMA$.ez_doc_06_detail tb3 ON tb2.doc_cd = tb3.doc_cd and tb3.job_name = #job_name#
			 where tb1.doc_cd = tb2.doc_cd
			   and tb2.job = #job_name#
			   and tb1.apply_cd = '02'
			   and tb1.doc_gb in ('01','04')
			 order by tb1.apply_date desc ) ttt) tt
		 where rnum = 1
	</select>
	
	<select id="deptCnt" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	/* ORACLE_T > deptCnt */
		SELECT COUNT(*) AS cnt FROM $SCHEMA$.ez_dept WHERE dept_nm = #dept_nm# AND del_yn = 'N' AND dept_cd != #dept_cd#
	</select>
	
	<select id="dutyCnt" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	/* ORACLE_T > dutyCnt */
		SELECT COUNT(*) AS cnt FROM $SCHEMA$.ez_duty WHERE duty_nm  = #duty_nm# AND del_yn = 'N' AND duty_cd != #duty_cd#
	</select>

	<!-- prc -->

	<!-- spDeptPrc -->
	<parameterMap id="spDeptPrcMap" class="java.util.Map">
		<parameter property="r_code" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="flag" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="dept_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="dept_nm" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="dept_id" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spDeptPrc" resultClass="java.util.List" parameterMap="spDeptPrcMap">
		{ call $SCHEMA$.SP_EZ_DEPT_PRC	( 	?, ?, ?, ?, ?,
											?, ?, ?
										)
		}
	</procedure>

	<!-- spDutyPrc -->
	<parameterMap id="spDutyPrcMap" class="java.util.Map">
		<parameter property="r_code" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="flag" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="duty_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="duty_nm" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="duty_id" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spDutyPrc" resultClass="java.util.List" parameterMap="spDutyPrcMap">
		{ call $SCHEMA$.SP_EZ_DUTY_PRC	( 	?, ?, ?, ?, ?,
											?, ?, ?
										)
		}
	</procedure>

	<parameterMap id="spPartPrcMap" class="java.util.Map">
		<parameter property="r_code" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="flag" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="part_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="part_nm" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spPartPrc" resultClass="java.util.List" parameterMap="spPartPrcMap">
		{ call $SCHEMA$.SP_EZ_PART_PRC	( 	?, ?, ?, ?, ?,
											?, ?
										)
		}
	</procedure>

	<!-- spUserPrc -->
	<parameterMap id="spUserPrcMap" class="java.util.Map">
		<parameter property="r_code" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="flag" 						javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_id" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_nm" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_pw" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_gb" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_email" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_hp" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="dept_cd" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="duty_cd" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="no_auth" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="select_data_center_code" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="select_table_name"		 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="select_application"	 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="select_group_name"		 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="del_yn" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="retire_yn" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="pw_fail_cnt"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="pw_date"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="before_pw"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="account_lock"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_tel"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="absence_start_date"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="absence_end_date"			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="absence_reason"			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="absence_user_cd"			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="default_paging"			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="reset_yn"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="dept_id"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="dept_nm"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="duty_id"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="duty_nm"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_appr_gb"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="folder_auth"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="ALL_GB"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_ip"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="data_center"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

	</parameterMap>
	<procedure id="spUserPrc" resultClass="java.util.List" parameterMap="spUserPrcMap">
		{ call $SCHEMA$.SP_EZ_USER_PRC	( 	?, ?, ?, ?, ?,
											?, ?, ?, ?, ?,
											?, ?, ?, ?, ?,
											?, ?, ?, ?, ?,
											?, ?, ?, ?, ?,
											?, ?, ?, ?, ?,
											?, ?, ?, ?, ?,
											?, ?, ?, ?, ?,
											?
							 			)
		}
	</procedure>

	<!-- spApprovalLinePrc -->
	<parameterMap id="spApprovalLinePrcMap" class="java.util.Map">
		<parameter property="r_code" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="flag" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_gb" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spApprovalLinePrc" resultClass="java.util.List" parameterMap="spApprovalLinePrcMap">
		{ call $SCHEMA$.SP_EZ_APPROVAL_LINE_PRC	( 	?, ?, ?, ?, ?,
													?, ?
												)
		}
	</procedure>

	<!-- spApprovalLinePrc_new -->
	<parameterMap id="spApprovalLinePrcMap_new" class="java.util.Map">
		<parameter property="r_code" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="flag" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_gb" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spApprovalLinePrc_new" resultClass="java.util.List" parameterMap="spApprovalLinePrcMap_new">
		{ call $SCHEMA$.SP_EZ_APPROVAL_LINE_PRC_NEW	( 	?, ?, ?, ?, ?,
														?, ?
													)
		}
	</procedure>

	<!-- spDoc01Prc -->
	<parameterMap id="spDoc01PrcMap" class="java.util.Map">

		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_gb" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="title" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="content" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="table_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="data_center" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="table_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="application" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="group_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mem_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="description" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="author" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="owner" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="priority" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="critical" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="task_type" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="cyclic" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="node_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="rerun_interval" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="rerun_interval_time" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mem_lib" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="command" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="confirm_flag" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="days_cal" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="weeks_cal" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="retro" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="max_wait" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="rerun_max" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="time_from" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="time_until" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_days" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="week_days" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="month_1" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_2" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_3" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_4" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_5" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="month_6" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_7" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_8" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_9" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_10" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="month_11" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_12" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="count_cyclic_from" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="time_zone" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="multiagent" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="user_daily" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="schedule_and_or" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="in_conditions_opt" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_general_date" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_conditions_in" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="t_conditions_out" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_resources_q" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_resources_c" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_set" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_steps" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="t_postproc" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_sfile" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="temp_doc_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_tag_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="interval_sequence" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="specific_times" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="tolerance" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="cyclic_type" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="active_from" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="active_till" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="apply_date" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_check" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="sr_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="conf_cal" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="shift" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="shift_num" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="dates_str"	 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="monitor_time"	 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="monitor_interval"	 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="filesize_comparison"	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="num_of_iterations"	 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="stop_time"		 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="post_approval_time"	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="post_approval_yn"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_approval_userList" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="grp_alarm_userList" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="main_doc_cd"	 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spDoc01Prc" resultClass="java.util.List" parameterMap="spDoc01PrcMap">
		{ call $SCHEMA$.SP_EZ_DOC_01_PRC_NEW	( 	?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?
												)
		}
	</procedure>

	<!-- spDoc02Prc -->
	<parameterMap id="spDoc02PrcMap" class="java.util.Map">

		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_gb" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="title" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="content" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="table_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="data_center" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="table_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="application" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="group_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mem_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="description" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="author" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="owner" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="priority" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="critical" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="task_type" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="cyclic" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="node_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="rerun_interval" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="rerun_interval_time" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mem_lib" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="command" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="confirm_flag" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="days_cal" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="weeks_cal" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="retro" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="max_wait" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="rerun_max" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="time_from" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="time_until" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_days" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="week_days" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_1" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_2" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_3" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_4" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_5" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_6" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_7" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_8" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_9" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_10" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_11" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_12" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="count_cyclic_from" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="time_zone" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="multiagent" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_daily" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="schedule_and_or" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="in_conditions_opt" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_general_date" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_conditions_in" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_conditions_out" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_resources_q" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_resources_c" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_set" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_steps" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_postproc" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_sfile" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="temp_doc_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_tag_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="interval_sequence" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="specific_times" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="tolerance" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="cyclic_type" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="active_from" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="active_till" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_date" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_check" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="sr_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="conf_cal" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="shift" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="shift_num" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="dates_str"	 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="monitor_time"	 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="monitor_interval"	 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="filesize_comparison"	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="num_of_iterations"	 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="stop_time"		 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="post_approval_time"	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="post_approval_yn"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_approval_userList" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_alarm_userList" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spDoc02Prc" resultClass="java.util.List" parameterMap="spDoc02PrcMap">
		{ call $SCHEMA$.SP_EZ_DOC_02_PRC_NEW	( 	?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?
												)
		}
	</procedure>

	<!-- spDoc03Prc -->
	<parameterMap id="spDoc03PrcMap" class="java.util.Map">
		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_gb" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="title" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="content" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="table_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="data_center" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="table_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="application" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="group_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mem_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="task_type" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_daily" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="description" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="owner" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="author" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mem_lib" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="command" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="in_condition" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="out_condition" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_date" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_check" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="post_approval_time"	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="post_approval_yn"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="node_id"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_approval_userList" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_alarm_userList" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="main_doc_cd"	 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="deleted_yn" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spDoc03Prc" resultClass="java.util.List" parameterMap="spDoc03PrcMap">
		{ call $SCHEMA$.SP_EZ_DOC_03_PRC	( 	?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?
										)
		}
	</procedure>


	<!-- spDoc04Prc -->
	<parameterMap id="spDoc04PrcMap" class="java.util.Map">
		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_gb" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="title" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="content" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="table_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="data_center" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="table_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="application" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="group_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mem_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="description" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="author" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="owner" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="priority" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="critical" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="task_type" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="cyclic" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="node_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="rerun_interval" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="rerun_interval_time" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mem_lib" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="command" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="confirm_flag" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="days_cal" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="weeks_cal" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="retro" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="max_wait" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="rerun_max" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="time_from" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="time_until" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_days" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="week_days" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="month_1" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_2" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_3" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_4" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_5" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="month_6" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_7" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_8" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_9" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_10" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="month_11" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_12" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="count_cyclic_from" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="time_zone" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="multiagent" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="user_daily" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="schedule_and_or" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="in_conditions_opt" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_general_date" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_conditions_in" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="t_conditions_out" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_resources_q" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_resources_c" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_set" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_steps" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="t_postproc" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="before_application" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="before_table_name" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="before_group_name" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="temp_doc_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="t_tag_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="interval_sequence" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="specific_times" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="tolerance" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="cyclic_type" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="active_from" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="active_till" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_date" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_check" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="sr_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="dates_str" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="conf_cal" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="shift" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="shift_num" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="monitor_time"	 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="monitor_interval"	 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="filesize_comparison"	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="num_of_iterations"	 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="stop_time"		 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="post_approval_time"	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="post_approval_yn"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_approval_userList" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_alarm_userList" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="main_doc_cd"	 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spDoc04Prc" resultClass="java.util.List" parameterMap="spDoc04PrcMap">
		{ call $SCHEMA$.SP_EZ_DOC_04_PRC_NEW	( 	?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?
										)
		}
	</procedure>

	<!-- spDocApprovalPrc -->
	<parameterMap id="spDocApprovalPrcMap" class="java.util.Map">
		<parameter property="r_code" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_state_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_apply_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="doc_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_gb" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="approval_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="approval_seq" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="approval_comment" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="flag" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="seq" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_check"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="main_doc_cd"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spDocApprovalPrc" resultClass="java.util.List" parameterMap="spDocApprovalPrcMap">
		{ call $SCHEMA$.SP_EZ_DOC_APPROVAL_PRC	( 	?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?
											   	)
		}
	</procedure>

	<!-- spJobMapperTOBEPrc -->
	<parameterMap id="spJobMapperPrcMap" class="java.util.Map">
		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="data_center" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="user_cd_1" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd_2" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd_3" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd_4" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd_5" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd_6" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd_7" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd_8" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd_9" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd_10" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="error_description"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mapper_cd"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="sms_1"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="sms_2"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="sms_3"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="sms_4"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="sms_5"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="sms_6"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="sms_7"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="sms_8"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="sms_9"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="sms_10"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="mail_1"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mail_2"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mail_3"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mail_4"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mail_5"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mail_6"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mail_7"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mail_8"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mail_9"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mail_10"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="grp_cd_1"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_cd_2"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_sms_1"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_sms_2"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_mail_1"			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_mail_2"			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="late_sub"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="late_time"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="late_exec"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="batchJobGrade"			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="udt_user"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="del_user"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="jobSchedGb"			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="success_sms_yn"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spJobMapperPrc" resultClass="java.util.List" parameterMap="spJobMapperPrcMap">

		{ call $SCHEMA$.SP_EZ_JOB_MAPPER_NEW_PRC( 	?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?
												)
		}
	</procedure>

	<select id="mCodeList" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > mCodeList */	
		SELECT * FROM(
		SELECT tb1.MCODE_CD, tb1.MCODE_NM, tb1.MCODE_DESC,
			   TO_CHAR(tb1.INS_DATE, 'YYYY-MM-DD') AS INS_DATE, tb1.DEL_YN, LENGTH(tb1.MCODE_CD) AS LEN
		  FROM $SCHEMA$.EZ_MCODE tb1
		 WHERE 1=1 
		 	AND DEL_YN != 'Y'
		 	
		) tb1
		
		<isNotEmpty property="mcode_search">
			ORDER BY MCODE_DESC
		</isNotEmpty>
		<isEmpty property="mcode_search">
			ORDER BY LEN, MCODE_CD
		</isEmpty>
		
	</select>
	
	<select id="sCodeList" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > sCodeList */	
		SELECT tb1.SCODE_CD, tb1.SCODE_NM, tb1.ORDER_NO, tb1.SCODE_ENG_NM, tb1.SCODE_DESC, tb1.SCODE_USE_YN, tb1.HOST_CD, 
			   '' AS HOST_NM, tb1.MCODE_CD,
			   TO_CHAR(tb1.INS_DATE, 'YYYY-MM-DD') AS INS_DATE
		  FROM $SCHEMA$.EZ_SCODE tb1, $SCHEMA$.EZ_MCODE tb2
		 WHERE 1=1
		 	AND tb1.MCODE_CD = tb2.MCODE_CD
		 	
		   <isNotEmpty property="host_cd">AND tb2.MCODE_CD = #mcode_cd# AND tb1.HOST_CD = $host_cd$</isNotEmpty>
		   <isEmpty property="host_cd">
		   		<isEmpty property="mcode_nm">
			   		AND tb2.MCODE_CD = #mcode_cd#
			   		<isEmpty property="host_eng_nm">		   			
				   			AND tb1.HOST_CD = (SELECT HOST_CD FROM $SCHEMA$.EZ_HOST WHERE DATA_CENTER = #data_center# AND AGENT = #agent# AND SERVER_GUBUN != 'E')
			   		</isEmpty>
		   		</isEmpty>
		   		
		   		<isNotEmpty property="mcode_nm">
		   			AND tb2.MCODE_NM = #mcode_nm#
		   			
			   		<isNotEmpty property="scode_nm">
			   			AND tb1.SCODE_NM LIKE '%'||UPPER(#scode_nm#)||'%'
			   		</isNotEmpty>
		   		</isNotEmpty>
		   		
		   </isEmpty>
		   
		   <!--isNotEmpty property="host_eng_nm">AND tb1.SCODE_ENG_NM = #host_eng_nm#</isNotEmpty-->
		   	<isNotEqual property="admin" compareValue="Y">
		   		AND tb1.SCODE_USE_YN = 'Y'
		   	</isNotEqual>
		   
		   
		 ORDER BY tb1.ORDER_NO
	</select>
	
	<!-- spCodePrc -->
	<parameterMap id="spCodePrcMap" class="java.util.Map">
		<parameter property="r_code" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		
		<parameter property="flag" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="code_gubun" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mcode_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mcode_nm" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="scode_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="scode_nm" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="order_no" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spCodePrc" resultClass="java.util.List" parameterMap="spCodePrcMap">
		{ call $SCHEMA$.SP_EZ_CODE_PRC	( 	?, ?, ?, ?, ?, 
											?, ?, ?, ?
									 	) 
		}
	</procedure>
	
	<select id="defJobInfo" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > defJobInfo */	
		SELECT tb1.table_id, tb1.job_id, tb1.application, tb1.group_name, tb2.sched_table AS table_name
		  FROM DEF_JOB tb1, DEF_TABLES tb2
		 WHERE tb1.table_id = tb2.table_id 
		   AND tb1.JOB_NAME = #job_name#
	</select>
	
	<select id="jobGroupListCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobGroupListCnt */		
				SELECT count(*) as total_count
				  FROM (  
						SELECT tb1.JOBGROUP_ID, tb1.JOBGROUP_NAME, 
							   ( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.INS_USER_CD ) AS INS_USER_NM, 
							   ( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.UDT_USER_CD ) AS UDT_USER_NM,
							   TO_CHAR(tb1.INS_DATE, 'YYYY-MM-DD') AS INS_DATE,
							   TO_CHAR(tb1.UDT_DATE, 'YYYY-MM-DD') AS UDT_DATE,
							   tb1.CONTENT			   
						  FROM $SCHEMA$.EZ_JOBGROUP tb1
						 WHERE tb1.JOBGROUP_ID IS NOT NULL
						 
						<isNotEmpty prepend="and" property="jobgroup_name">
							tb1.JOBGROUP_NAME LIKE '%'||#jobgroup_name#||'%'
						</isNotEmpty>
						 	
					   ) TTT				
	</select>
	
	<select id="jobGroupList" resultClass="JobGroupBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobGroupList */	
			SELECT * 
			  FROM (
					SELECT rownum as row_num, TTT.* 
					  FROM (  
							SELECT tb1.JOBGROUP_ID, tb1.JOBGROUP_NAME, 
								   ( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.INS_USER_CD ) AS INS_USER_NM, 
								   ( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.UDT_USER_CD ) AS UDT_USER_NM,
								   TO_CHAR(tb1.INS_DATE, 'YYYY-MM-DD') AS INS_DATE,
								   TO_CHAR(tb1.UDT_DATE, 'YYYY-MM-DD') AS UDT_DATE,
								   tb1.CONTENT,
								   ( SELECT count(*) FROM $SCHEMA$.EZ_JOBGROUP_JOB a, DEF_JOB b WHERE a.job_name = b.job_name and jobgroup_id = tb1.JOBGROUP_ID ) AS GRP_DETAIL_CNT,
								   ( SELECT count(*) FROM $SCHEMA$.EZ_JOBGROUP_JOB a, DEF_JOB b WHERE a.job_name = b.job_name and jobgroup_id = tb1.JOBGROUP_ID ) AS COUNT
							  FROM $SCHEMA$.EZ_JOBGROUP tb1
							 WHERE tb1.JOBGROUP_ID IS NOT NULL
							 
							<isNotEmpty prepend="and" property="jobgroup_name">
								tb1.JOBGROUP_NAME LIKE '%'||#jobgroup_name#||'%'
							</isNotEmpty>
							 	
							 ORDER BY tb1.INS_DATE ) TTT
					) tb1
				<isNotEmpty property="startRowNum">
					WHERE row_num between #startRowNum# and #endRowNum#
				</isNotEmpty>
	</select>
	
		<select id="approvalGroupUserList" resultClass="CommonBean" parameterClass="java.util.Map">
		/* ORACLE_T > approvalGroupUserList */
		   SELECT DISTINCT
				a.USER_CD,
				a.USER_ID, 
				a.USER_NM,
				(select duty_nm from $SCHEMA$.ez_duty where duty_cd = a.duty_cd) DUTY_NM,
				(select dept_nm from $SCHEMA$.ez_dept where dept_cd = a.dept_cd) DEPT_NM,
				a.USER_TEL,
				a.USER_HP,
				a.USER_EMAIL,
				<!-- case when INSTR(nvl(grp_approval_userlist,''), nvl(a.USER_CD,'')) > 0 then 'Y' else 'N' end as approval_yn,
				case when INSTR(nvl(grp_alarm_userlist,''), nvl(a.USER_CD,'')) > 0 then 'Y' else 'N' end as notice_yn -->
				<!-- INSTR 로는 문자열이 포함되면 무조건 0보다 크기 때문에 쿼리 수정 (2023.06.27 강명준) -->
				(select b.user_nm from $SCHEMA$.ez_user b where b.user_cd = a.absence_user_cd ) as absence_user_nm,
		        TO_CHAR(a.absence_start_date, 'yyyy-mm-dd') as absence_start_date,
		        TO_CHAR(a.absence_end_date, 'yyyy-mm-dd') as absence_end_date,
		        a.absence_reason,
				
				CASE WHEN a.USER_CD = ANY(
					SELECT DISTINCT REGEXP_SUBSTR(grp_approval_userlist, '[^,]+', 1, LEVEL)
					FROM dual
					CONNECT BY REGEXP_SUBSTR(grp_approval_userlist, '[^,]+', 1, LEVEL) IS NOT NULL
					)
					THEN 'Y' ELSE 'N' END as approval_yn,
				CASE WHEN a.USER_CD = ANY(
					SELECT DISTINCT REGEXP_SUBSTR(grp_alarm_userlist, '[^,]+', 1, LEVEL)
					FROM dual
					CONNECT BY REGEXP_SUBSTR(grp_alarm_userlist, '[^,]+', 1, LEVEL) IS NOT NULL
					)
					THEN 'Y' ELSE 'N' END as notice_yn
			FROM
				 $SCHEMA$.EZ_USER a
				,$SCHEMA$.EZ_GROUP_APPROVAL_LINE b
				,$SCHEMA$.EZ_APPROVAL_DOC c
			WHERE 1=1
			and b.GROUP_LINE_GRP_CD = #user_cd#
			and a.user_cd = b.approval_cd 
			and a.del_yn != 'Y'
			and b.group_line_grp_cd = c.group_line_grp_cd 
			
			<isNotEmpty property="doc_cd">
				and c.doc_cd = #doc_cd#
			</isNotEmpty>
			
			ORDER BY a.USER_NM
	</select>
	
	<select id="jobUserInfo" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobUserInfo */
		select tb1.user_cd_1, tb1.user_cd_2, tb1.user_cd_3, tb1.user_cd_4, tb1.user_cd_5, tb1.user_cd_6, tb1.user_cd_7, tb1.user_cd_8, tb1.user_cd_9, tb1.user_cd_10,
			   (select user_id from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_1) user_id_1,
			   (select user_nm from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_1) user_nm_1,
			   (select (select duty_nm from $SCHEMA$.ez_duty where duty_cd = tb2.duty_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_1) duty_nm_1,
			   (select (select dept_nm from $SCHEMA$.ez_dept where dept_cd = tb2.dept_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_1) dept_nm_1,
			   (select user_tel from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_1) user_tel_1,
			   (select user_hp from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_1) user_hp_1,
			   (select user_email from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_1) user_email_1,
			   sms_1,
			   mail_1,
			   (select user_id from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_2) user_id_2,
			   (select user_nm from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_2) user_nm_2,
			   (select (select duty_nm from $SCHEMA$.ez_duty where duty_cd = tb2.duty_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_2) duty_nm_2,
			   (select (select dept_nm from $SCHEMA$.ez_dept where dept_cd = tb2.dept_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_2) dept_nm_2,
			   (select user_tel from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_2) user_tel_2,
			   (select user_hp from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_2) user_hp_2,
			   (select user_email from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_2) user_email_2,
			   sms_2,
			   mail_2,
			   (select user_id from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_3) user_id_3,
			   (select user_nm from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_3) user_nm_3,
			   (select (select duty_nm from $SCHEMA$.ez_duty where duty_cd = tb2.duty_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_3) duty_nm_3,
			   (select (select dept_nm from $SCHEMA$.ez_dept where dept_cd = tb2.dept_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_3) dept_nm_3,
			   (select user_tel from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_3) user_tel_3,
			   (select user_hp from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_3) user_hp_3,
			   (select user_email from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_3) user_email_3,
			   sms_3,
			   mail_3,
			   (select user_id from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_4) user_id_4,
			   (select user_nm from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_4) user_nm_4,
			   (select (select duty_nm from $SCHEMA$.ez_duty where duty_cd = tb2.duty_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_4) duty_nm_4,
			   (select (select dept_nm from $SCHEMA$.ez_dept where dept_cd = tb2.dept_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_4) dept_nm_4,
			   (select user_tel from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_4) user_tel_4,
			   (select user_hp from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_4) user_hp_4,
			   (select user_email from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_4) user_email_4,
			   sms_4,
			   mail_4,
			   (select user_id from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_5) user_id_5,
			   (select user_nm from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_5) user_nm_5,
			   (select (select duty_nm from $SCHEMA$.ez_duty where duty_cd = tb2.duty_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_5) duty_nm_5,
			   (select (select dept_nm from $SCHEMA$.ez_dept where dept_cd = tb2.dept_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_5) dept_nm_5,
			   (select user_tel from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_5) user_tel_5,
			   (select user_hp from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_5) user_hp_5,
			   (select user_email from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_5) user_email_5,
			   sms_5,
			   mail_5,
			   (select user_id from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_6) user_id_6,
			   (select user_nm from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_6) user_nm_6,
			   (select (select duty_nm from $SCHEMA$.ez_duty where duty_cd = tb2.duty_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_6) duty_nm_6,
			   (select (select dept_nm from $SCHEMA$.ez_dept where dept_cd = tb2.dept_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_6) dept_nm_6,
			   (select user_tel from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_6) user_tel_6,
			   (select user_hp from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_6) user_hp_6,
			   (select user_email from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_6) user_email_6,
			   sms_6,
			   mail_6,
			   (select user_id from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_7) user_id_7,
			   (select user_nm from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_7) user_nm_7,
			   (select (select duty_nm from $SCHEMA$.ez_duty where duty_cd = tb2.duty_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_7) duty_nm_7,
			   (select (select dept_nm from $SCHEMA$.ez_dept where dept_cd = tb2.dept_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_7) dept_nm_7,
			   (select user_tel from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_7) user_tel_7,
			   (select user_hp from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_7) user_hp_7,
			   (select user_email from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_7) user_email_7,
			   sms_7,
			   mail_7,
			   (select user_id from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_8) user_id_8,
			   (select user_nm from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_8) user_nm_8,
			   (select (select duty_nm from $SCHEMA$.ez_duty where duty_cd = tb2.duty_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_8) duty_nm_8,
			   (select (select dept_nm from $SCHEMA$.ez_dept where dept_cd = tb2.dept_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_8) dept_nm_8,
			   (select user_tel from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_8) user_tel_8,
			   (select user_hp from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_8) user_hp_8,
			   (select user_email from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_8) user_email_8,
			   sms_8,
			   mail_8,
			   (select user_id from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_9) user_id_9,
			   (select user_nm from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_9) user_nm_9,
			   (select (select duty_nm from $SCHEMA$.ez_duty where duty_cd = tb2.duty_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_9) duty_nm_9,
			   (select (select dept_nm from $SCHEMA$.ez_dept where dept_cd = tb2.dept_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_9) dept_nm_9,
			   (select user_tel from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_9) user_tel_9,
			   (select user_hp from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_9) user_hp_9,
			   (select user_email from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_9) user_email_9,
			   sms_9,
			   mail_9,
			   (select user_id from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_10) user_id_10,
			   (select user_nm from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_10) user_nm_10,
			   (select (select duty_nm from $SCHEMA$.ez_duty where duty_cd = tb2.duty_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_10) duty_nm_10,
			   (select (select dept_nm from $SCHEMA$.ez_dept where dept_cd = tb2.dept_cd) from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_10) dept_nm_10,
			   (select user_tel from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_10) user_tel_10,
			   (select user_hp from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_10) user_hp_10,
			   (select user_email from $SCHEMA$.ez_user tb2 where tb2.user_cd = tb1.user_cd_10) user_email_10,
			   sms_10,
			   mail_10,
			   (select group_line_grp_nm from $SCHEMA$.EZ_GROUP_APPROVAL_GROUP tb2 where tb2.group_line_grp_cd = tb1.grp_cd_1) grp_nm_1,
			   grp_sms_1,
			   grp_mail_1,
			   (select group_line_grp_nm from $SCHEMA$.EZ_GROUP_APPROVAL_GROUP tb2 where tb2.group_line_grp_cd = tb1.grp_cd_2) grp_nm_2,
			   grp_sms_2,
			   grp_mail_2,
			   error_description
		from $SCHEMA$.EZ_JOB_MAPPER tb1
		where job = #job_name#
	</select>

	<select id="approvalUserList" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalUserList */
		SELECT a.user_cd,
			   a.USER_ID,
			   a.USER_NM,
			   (select duty_nm from $SCHEMA$.ez_duty where duty_cd = a.duty_cd) DUTY_NM,
			   (select dept_nm from $SCHEMA$.ez_dept where dept_cd = a.dept_cd) DEPT_NM,
			   a.USER_TEL,
			   a.USER_HP,
			   a.USER_EMAIL,
			   (select b.user_nm from $SCHEMA$.ez_user b where b.user_cd = a.absence_user_cd ) as absence_user_nm,
		       TO_CHAR(a.absence_start_date, 'yyyy-mm-dd') as absence_start_date,
		       TO_CHAR(a.absence_end_date, 'yyyy-mm-dd') as absence_end_date,
		       a.absence_reason
		FROM $SCHEMA$.EZ_USER a
		WHERE a.user_cd = $user_cd$
	</select>
	
	<select id="approvalAdminUserList" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalAdminUserList */
		 SELECT a.user_cd,
		        a.USER_ID, 
		        a.USER_NM,
		        (select duty_nm from $SCHEMA$.ez_duty where duty_cd = a.duty_cd) DUTY_NM,
		        (select dept_nm from $SCHEMA$.ez_dept where dept_cd = a.dept_cd) DEPT_NM,
		        a.USER_TEL,
		        a.USER_HP,
		        a.USER_EMAIL,
		        (select b.user_nm from $SCHEMA$.ez_user b where b.user_cd = a.absence_user_cd ) as absence_user_nm,
		        TO_CHAR(a.absence_start_date, 'yyyy-mm-dd') as absence_start_date,
		        TO_CHAR(a.absence_end_date, 'yyyy-mm-dd') as absence_end_date,
		        a.absence_reason
		   FROM $SCHEMA$.EZ_USER a
		  WHERE a.user_cd = #user_cd#
	</select>
	
	<select id="approvalGroupUserInfo" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalGroupUserInfo */
		SELECT tb1.user_cd, tb1.user_id, tb1.user_nm, tb1.user_hp,
			   ( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb1.dept_cd ) AS dept_nm,
			   ( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb1.duty_cd ) AS duty_nm
		  FROM $SCHEMA$.EZ_USER tb1
		 WHERE 1 = 1
		   AND tb1.del_yn = 'N'
		   <!--AND tb1.status_admin = 'Y'-->
		
	</select>
	
	<select id="approvalUserInfo" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalUserInfo */
		SELECT tb1.user_cd, tb1.user_id, tb1.user_nm, tb1.user_hp,
			   ( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb1.dept_cd ) AS dept_nm,
			   ( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb1.duty_cd ) AS duty_nm
		  FROM $SCHEMA$.EZ_USER tb1
		 WHERE 1 = 1
		   AND tb1.del_yn = 'N'
		   <!--AND tb1.status_admin = 'Y'-->
		
	</select>
	
	
	
	<select id="jobGroupDetail" resultClass="JobGroupBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobGroupDetail */	
		
		SELECT tb1.JOBGROUP_ID, tb1.JOBGROUP_NAME, 
			   ( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.INS_USER_CD ) AS INS_USER_NM,
			   ( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.UDT_USER_CD ) AS UDT_USER_NM,
			   TO_CHAR(tb1.INS_DATE, 'YYYY-MM-DD') AS INS_DATE,
			   TO_CHAR(tb1.UDT_DATE, 'YYYY-MM-DD') AS UDT_DATE,
			   tb1.CONTENT, tb1.INS_USER_CD
		  FROM $SCHEMA$.EZ_JOBGROUP tb1
		 WHERE tb1.JOBGROUP_ID IS NOT NULL
		   AND tb1.JOBGROUP_ID = #jobgroup_id#
		
	</select>
	
	<select id="jobGroupDetailId" resultClass="JobGroupBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobGroupDetailId */	
		
		SELECT tb1.JOBGROUP_ID
		  FROM $SCHEMA$.EZ_JOBGROUP tb1
		 WHERE tb1.JOBGROUP_ID IS NOT NULL
		   AND tb1.JOBGROUP_NAME = #jobgroup_name#
		   <!--AND tb1.INS_USER_CD = #s_user_cd#-->
		
	</select>
	
	<select id="jobGroupDetailListCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobGroupDetailListCnt */		
				SELECT count(*) as total_count
				  FROM (  
						SELECT TTT.* 
						  FROM (  
								SELECT tb1.JOBGROUP_ID, tb2.JOB_NAME, tb3.data_center,
								       tb2.application, tb2.group_name, tb2.description, tb3.sched_table,
								       tb2.table_id, tb2.job_id,
								       (SELECT scode_cd FROM $SCHEMA$.ez_scode WHERE mcode_cd = 'M6' AND scode_eng_nm = tb1.data_center) AS scode_cd
								  FROM $SCHEMA$.EZ_JOBGROUP_JOB tb1, DEF_JOB tb2, DEF_TABLES tb3
								 WHERE tb1.JOBGROUP_ID IS NOT NULL
								   AND tb1.JOBGROUP_ID = #jobgroup_id#		
								   AND tb1.job_name = tb2.job_name
								   AND tb2.table_id = tb3.table_id
<!-- 								   AND tb1.table_id = tb2.table_id -->
<!-- 						   		   AND tb1.job_id = tb2.job_id 	 -->
<!--    								   AND tb1.table_id = tb2.table_id	   -->
								 ORDER BY tb3.sched_table, tb2.application, tb2.group_name, tb2.JOB_NAME ) TTT
						) tb1
	</select>
	
	<select id="jobGroupDetailList" resultClass="tDefJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobGroupDetailList */
				SELECT TTT.* 
				  FROM (  
						SELECT tb1.JOBGROUP_ID, tb2.JOB_NAME, tb3.data_center,
						       tb2.application, tb2.group_name, tb2.description, tb3.sched_table,
						       tb2.table_id, tb2.job_id,
						       (SELECT scode_cd FROM $SCHEMA$.ez_scode WHERE mcode_cd = 'M6' AND scode_eng_nm = tb1.data_center) AS scode_cd
						  FROM $SCHEMA$.EZ_JOBGROUP_JOB tb1, DEF_JOB tb2, DEF_TABLES tb3
						 WHERE tb1.JOBGROUP_ID IS NOT NULL
						   AND tb1.JOBGROUP_ID = #jobgroup_id#		
						   AND tb1.job_name = tb2.job_name
						   AND tb2.table_id = tb3.table_id
						   
				<isNotEmpty prepend="and" property="p_search_text_out">
					<isEqual property="p_search_gubun_out" compareValue="job_name">
						UPPER(tb2.job_name) like UPPER('%'||#p_search_text_out#||'%')
					</isEqual>
					<isEqual property="p_search_gubun_out" compareValue="description">
						tb2.description like '%'||#p_search_text_out#||'%'
					</isEqual>
				</isNotEmpty>
				<isNotEmpty prepend="and" property="p_sched_table_out">
					tb3.sched_table in
					<iterate property="p_search_text_folder_list" open="(" close=")" conjunction=",">
						#p_search_text_folder_list[]# 
					</iterate>
				</isNotEmpty>
				<isNotEmpty prepend="and" property="p_application_of_def_out">
					tb2.application = #p_application_of_def_out#
				</isNotEmpty>
				<isNotEmpty prepend="and" property="p_group_name_of_def_out">
					tb2.group_name = #p_group_name_of_def_out# 
				</isNotEmpty>
				
<!-- 						   AND tb1.job_id = tb2.job_id 	 -->
<!--    						   AND tb1.table_id = tb2.table_id 	 -->
						 ORDER BY tb3.sched_table, tb2.application, tb2.group_name, tb2.JOB_NAME ) TTT
	</select>
	
	<select id="jobGroupDefJobListCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobGroupDefJobListCnt */	
		SELECT count(*) as total_count	
		  FROM DEF_JOB a , DEF_TABLES b,
		       ( SELECT * FROM $SCHEMA$.EZ_JOBGROUP_JOB 
		          WHERE jobgroup_id = #jobgroup_id# 
		            AND data_center = #data_center# ) c			     
		 WHERE 1=1												  
		   AND a.table_id = b.table_id
		   AND b.data_center = #data_center#
		   AND a.table_id = c.table_id (+)
		   AND a.job_id = c.job_id (+)
		   AND c.table_id IS NULL
	
			<isNotEmpty prepend="and" property="sched_table">
				sched_table = #sched_table#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="application_of_def">
				application = #application_of_def#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="group_name_of_def">
				group_name = #group_name_of_def#
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="search_text">
				<isEqual property="search_gubun" compareValue="job_name">
					UPPER(a.job_name) like UPPER('%'||#search_text#||'%')
				</isEqual>
				<isEqual property="search_gubun" compareValue="description">
					description like '%'||#search_text#||'%'
				</isEqual>
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="job_name">
				UPPER(a.job_name) like UPPER('%'||#job_name#||'%')
			</isNotEmpty>
		
	</select>
	
	<select id="jobGroupDefJobList" resultClass="tDefJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobGroupDefJobList */	
	
		SELECT * 
		  FROM (
				SELECT rownum as row_num, TTT.* 
				  FROM (  
				  		SELECT 	a.table_id
								,a.job_id
								,b.data_center data_center
								,b.SCHED_TABLE sched_table
								,a.APPLICATION application
								,a.GROUP_NAME group_name
								,trim(a.JOB_NAME) job_name
								,trim(a.MEMNAME) memname
								,a.task_type, b.user_daily, a.author, a.owner
								,a.mem_lib, a.cmd_line command, a.description
						  FROM DEF_JOB a , DEF_TABLES b,
						       ( SELECT * FROM $SCHEMA$.EZ_JOBGROUP_JOB 
						          WHERE jobgroup_id = #jobgroup_id# 
						            AND data_center = #data_center# ) c			     
						 WHERE 1=1												  
						   AND a.table_id = b.table_id
						   AND b.data_center = #data_center#
						   AND a.table_id = c.table_id (+)
						   AND a.job_id = c.job_id (+)
						   AND c.table_id IS NULL
						   
							<isNotEmpty prepend="and" property="sched_table">
								sched_table = #sched_table#
							</isNotEmpty>
							<isNotEmpty prepend="and" property="application_of_def">
								application = #application_of_def#
							</isNotEmpty>
							<isNotEmpty prepend="and" property="group_name_of_def">
								group_name = #group_name_of_def#
							</isNotEmpty>
							
							<isNotEmpty prepend="and" property="search_text">
								<isEqual property="search_gubun" compareValue="job_name">
									UPPER(a.job_name) like UPPER('%'||#search_text#||'%')
								</isEqual>
								<isEqual property="search_gubun" compareValue="description">
									description like '%'||#search_text#||'%'
								</isEqual>
							</isNotEmpty>
							
							<isNotEmpty prepend="and" property="job_name">
								UPPER(a.job_name) like UPPER('%'||#job_name#||'%')
							</isNotEmpty>					 	
						 ORDER BY b.SCHED_TABLE, a.APPLICATION, a.GROUP_NAME, a.JOB_NAME ) TTT
				) tb1
				
			WHERE 1 = 1
		
			
	</select>

	<parameterMap id="spJobGroupPrcMap" class="java.util.Map">
		<parameter property="r_code" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		
		<parameter property="flag" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="table_id" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_id" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="data_center" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />	
		<parameter property="jobgroup_id" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />	
		<parameter property="jobgroup_name" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="content" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />	
		<parameter property="table_name"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />			
		<parameter property="application"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />			
		<parameter property="group_name"     	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />					
	</parameterMap>
	<procedure id="spJobGroupPrc" resultClass="java.util.List" parameterMap="spJobGroupPrcMap">
		{ call $SCHEMA$.SP_EZ_JOBGROUP_PRC	( 	?, ?, ?, ?, ?, 
												?, ?, ?, ?, ?,
												?, ?, ?, ?
									 		 ) 
		}
	</procedure>
	
	<parameterMap id="spDoc05PrcMap" class="java.util.Map">
		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		
		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="jobgroup_id"			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="title" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="content" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="table_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="data_center" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="table_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="application" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="group_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mem_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="hold_yn" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="force_yn" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="order_date" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="from_time" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="cmd_line2"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_set"					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_check" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="wait_for_odate_yn" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="post_approval_time" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="post_approval_yn"	 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />	
		<parameter property="s_user_ip" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cds" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="main_doc_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="grp_approval_userList" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_alarm_userList" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		
		<parameter property="order_into_folder" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spDoc05Prc" resultClass="java.util.List" parameterMap="spDoc05PrcMap">
		{ call $SCHEMA$.SP_EZ_DOC_05_PRC	( 	?, ?, ?, ?, ?, 
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?
							 			)
		}
	</procedure>
	
	<select id="jobGroupId" resultClass="JobGroupBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobGroupId */	
		SELECT jobgroup_id FROM $SCHEMA$.EZ_DOC_GROUP WHERE doc_group_id = #doc_group_id#
	</select>
	
	<select id="jobGroupMainCd" resultClass="JobGroupBean" parameterClass="java.util.Map">
	/* ORACLE_T > jobGroupMainCd */
		select max(doc_cd) from $SCHEMA$.ez_doc_master A, $SCHEMA$.ez_doc_group B where A.doc_group_id=B.doc_group_id and B.jobgroup_id = #jobgroup_id#
	</select>
	
	<select id="jobGroupDetailApprovalList" resultClass="Doc05Bean" parameterClass="java.util.Map">
	/* ORACLE_T > jobGroupDetailApprovalList */

			SELECT * FROM(

			SELECT rownum as row_num, TTT.* FROM(

				select
				t1.doc_cd
				,t1.doc_gb
				,t1.doc_group_id
				,(case when t1.doc_gb='01' then (select title from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
				when t1.doc_gb='02' then (select title from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
				when t1.doc_gb='03' then (select title from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
				when t1.doc_gb='04' then (select title from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
				when t1.doc_gb='05' then (select title from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
				when t1.doc_gb='06' then (select title from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
				when t1.doc_gb='07' then (select title from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
				when t1.doc_gb='08' then (select title from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
				when t1.doc_gb='09' then (select title from $SCHEMA$.EZ_doc_09 where main_doc_cd=t1.doc_cd)
				else '' end) AS title
				,(case when t1.doc_gb='01' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
				when t1.doc_gb='02' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
				when t1.doc_gb='03' then (select job_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
				when t1.doc_gb='04' then (select job_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
				when t1.doc_gb='05' then (select job_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
				when t1.doc_gb='06' then (select file_nm from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
				when t1.doc_gb='07' then (select job_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
				when t1.doc_gb='08' then (select job_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
				when t1.doc_gb='09' then (select job_name from $SCHEMA$.EZ_doc_09 where main_doc_cd=t1.doc_cd)
				else '' end) AS job_name
				,(case when t1.doc_gb='01' then (select data_center from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
				when t1.doc_gb='02' then (select data_center from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
				when t1.doc_gb='03' then (select  data_center from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
				when t1.doc_gb='04' then (select data_center from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
				when t1.doc_gb='05' then (select data_center from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
				when t1.doc_gb='06' then (select data_center from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
				when t1.doc_gb='07' then (select data_center from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
				when t1.doc_gb='08' then (select data_center from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
				when t1.doc_gb='09' then (select data_center from $SCHEMA$.EZ_doc_09 where main_doc_cd=t1.doc_cd)
				else '' end) AS data_center
				,(case when t1.doc_gb='09' then t1.doc_cd else '' end) AS main_doc_cd
				,(case when t1.doc_gb='03' then (select job_id from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
				when t1.doc_gb='04' then (select job_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
				when t1.doc_gb='05' then (select job_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
				else 0 end) AS job_id
				,(case when t1.doc_gb='03' then (select table_id from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
				when t1.doc_gb='04' then (select table_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
				when t1.doc_gb='05' then (select table_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
				else 0 end) AS table_id

				,(case when t1.doc_gb='01' then (select table_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
				when t1.doc_gb='02' then (select table_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
				when t1.doc_gb='03' then (select  table_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
				when t1.doc_gb='04' then (select table_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
				when t1.doc_gb='05' then (select table_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
				when t1.doc_gb='06' then (select table_name from $SCHEMA$.EZ_doc_06_detail where doc_cd=t1.doc_cd and seq = '1')
				when t1.doc_gb='07' then (select table_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
				when t1.doc_gb='08' then (select table_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
				else '' end) AS table_name
				,(case when t1.doc_gb='02' then (select t_general_date from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
				when t1.doc_gb='05' then (select order_date from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
				when t1.doc_gb='07' then (select '20' || odate from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
				when t1.doc_gb='08' then (select order_date from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
				else '' end) AS order_date

				,(CASE WHEN t1.doc_gb='05' THEN (SELECT force_yn FROM $SCHEMA$.EZ_doc_05 tb1 WHERE tb1.doc_cd = t1.main_doc_cd)
				else '' end) AS force_yn

				,(CASE WHEN t1.doc_gb='05' THEN (SELECT hold_yn FROM $SCHEMA$.EZ_doc_05 tb1 WHERE tb1.doc_cd = t1.main_doc_cd)
				else '' end) AS hold_yn
				,(CASE WHEN t1.doc_gb='05' THEN (SELECT wait_for_odate_yn FROM $SCHEMA$.EZ_doc_05 tb1 WHERE tb1.doc_cd = t1.main_doc_cd)
				else '' end) AS wait_for_odate_yn

				from $SCHEMA$.EZ_DOC_MASTER t1

				where 1=1
				and t1.del_yn = 'N'

				AND t1.main_doc_cd = #doc_cd#

			order by DOC_CD desc

			)TTT
			where 1=1

			) tb1
		
	</select>
	
	<select id="chkApprovalLineCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkApprovalLineCnt */
		SELECT SUM(approval_cnt2) AS approval_cnt2, SUM(approval_cnt3) AS approval_cnt3, SUM(approval_cnt5) AS approval_cnt5
		  FROM (
				SELECT <!-- 9로 시작하는 의뢰자용 -->
					   <!-- (CASE WHEN tb2.approval_seq = 2 AND tb2.approval_gb = '01' THEN 1 ELSE 0 END) AS approval_cnt1, -->
					   (CASE WHEN tb2.approval_seq = 2 AND tb2.approval_gb = '02' THEN 1 ELSE 0 END) AS approval_cnt2,
					   (CASE WHEN tb2.approval_seq = 1 AND tb2.approval_gb = '03' THEN 1 ELSE 0 END) AS approval_cnt3,
					   
					   <!-- 2로 시작하는 의뢰자용 -->
					   <!-- (CASE WHEN tb2.approval_seq = 1 AND tb2.approval_gb = '01' THEN 1 ELSE 0 END) AS approval_cnt4, -->
					   (CASE WHEN tb2.approval_seq = 1 AND tb2.approval_gb = '02' THEN 1 ELSE 0 END) AS approval_cnt5
					   
				  FROM $SCHEMA$.EZ_USER_APPROVAL_GROUP tb1, $SCHEMA$.EZ_USER_APPROVAL_LINE tb2
				 WHERE tb1.line_grp_cd = tb2.line_grp_cd
				   AND tb1.use_yn = 'Y'
				   AND tb1.ins_user_cd = #s_user_cd# ) t
	</select>
	
	<select id="finalAppList" resultClass="ApprovalLineBean" parameterClass="java.util.Map">
	/* ORACLE_T > finalAppList */	
		SELECT tb1.final_line_cd, tb1.USER_CD, tb1.ORDER_NO, tb2.USER_ID, tb2.USER_NM, tb3.duty_nm, tb1.status, tb1.doc_gb,
			   TO_CHAR(tb1.INS_DATE, 'YYYY-MM-DD') AS INS_DATE, tb4.dept_nm
		  FROM $SCHEMA$.EZ_FINAL_APPROVAL_LINE tb1, 
		  		$SCHEMA$.EZ_USER tb2 
		  			LEFT OUTER JOIN $SCHEMA$.EZ_DUTY tb3 ON tb2.duty_cd = tb3.duty_cd
		  			LEFT OUTER JOIN $SCHEMA$.EZ_DEPT tb4 ON tb2.dept_cd = tb4.dept_cd
		 WHERE 1 = 1
		   AND tb1.user_cd = tb2.user_cd
		   AND doc_gb IN ($doc_gb$)
		ORDER BY tb1.doc_gb, tb1.ORDER_NO
	</select>
	
	
	<select id="deptAppList" resultClass="ApprovalLineBean" parameterClass="java.util.Map">
	/* ORACLE_T > deptAppList */	
		SELECT tb1.USER_CD, tb1.ORDER_NO, tb2.USER_ID, tb2.USER_NM, tb3.duty_nm, tb1.status, tb1.doc_gb,
			   TO_CHAR(tb1.INS_DATE, 'YYYY-MM-DD') AS INS_DATE,
			   (select dept_nm from $SCHEMA$.ez_dept where dept_cd = tb1.dept_cd) as DEPT_NM,
			   tb1.dept_cd
		  FROM $SCHEMA$.EZ_DEPT_APPROVAL_LINE tb1, $SCHEMA$.EZ_USER tb2, $SCHEMA$.EZ_DUTY tb3 
		 WHERE 1 = 1
		   AND tb1.user_cd = tb2.user_cd
		   AND tb2.duty_cd = tb3.duty_cd
		   AND doc_gb = '01'
		ORDER BY DEPT_NM
	</select>
	
	<!-- spFinalAppPrc -->
	<parameterMap id="spFinalAppPrcMap" class="java.util.Map">
		<parameter property="r_code" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		
		<parameter property="final_line_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_gb" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="flag" 						javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="order_no" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="group_approval_line_cd" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="group_id" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />	
		<parameter property="dept_cd" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<!--parameter property="status" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" -->			
					
	</parameterMap>
	<procedure id="spFinalAppPrc" resultClass="java.util.List" parameterMap="spFinalAppPrcMap">
		{ call $SCHEMA$.SP_EZ_FINAL_APPROVAL_LINE_PRC	( 	?, ?, ?, ?, ?,
														?, ?, ?, ?, ?
							 						) 
		}
	</procedure>
	
	<!-- spFinalAppPrc -->
	<parameterMap id="spApprovalLinePrc_generalMap" class="java.util.Map">
		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		
		<parameter property="approval_line_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_gb" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="user_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="seq" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />	
		<parameter property="s_user_ip" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />			
	</parameterMap>
	<procedure id="spApprovalLinePrc_general" resultClass="java.util.List" parameterMap="spApprovalLinePrc_generalMap">
		{ call $SCHEMA$.SP_EZ_GEN_APPROVAL_LINE_PRC	( 	?, ?, ?, ?, ?,
														?, ?, ?, ?
		
							 						) 
		}
	</procedure>
	
	<select id="approvalLineCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalLineCnt */
		SELECT COUNT(*) AS total_count
		  FROM $SCHEMA$.EZ_APPROVAL_DOC tb1, $SCHEMA$.EZ_DOC_MASTER tb2, $SCHEMA$.EZ_USER tb3
		 WHERE tb1.approval_cd = '01'	
		   AND tb1.user_cd = tb3.user_cd	 
		   AND (
		        tb2.user_cd = (CASE WHEN tb1.dept_nm = 'GROUP' THEN '' ELSE #s_user_cd# END) 
		        OR 
		        (tb1.approval_cd = '01' AND tb3.absence_user_cd = $s_user_cd$ 
		                             AND TO_CHAR(tb3.absence_start_date, 'yyyy-mm-dd') <![CDATA[ <= ]]> TO_CHAR(CURRENT_DATE, 'yyyy-mm-dd')
		                             AND TO_CHAR(tb3.absence_end_date, 'yyyy-mm-dd') <![CDATA[ >= ]]> TO_CHAR(CURRENT_DATE, 'yyyy-mm-dd')
		        )		        
		    )
		 
		   AND tb1.seq = tb2.cur_approval_seq
		   AND tb1.doc_cd = tb2.doc_cd
		   AND tb2.jobgroup_id IS NULL
		   AND tb2.del_yn != 'Y'
		   AND tb2.doc_cd = (CASE WHEN tb2.main_doc_cd IS NOT NULL THEN tb2.main_doc_cd ELSE tb2.doc_cd END)
	</select>
	
	<select id="approvalLineCnt_pop" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalLineCnt_pop */
		select COUNT(*) AS total_count from(
		SELECT /*+leading(tb2) use_hash(tb1)*/ tb1.doc_gb, tb3.user_nm, tb1.dept_nm, tb1.duty_nm, 
			   TO_CHAR(tb1.draft_date, 'YYYY/MM/DD HH24:MI:SS') AS draft_date,
			   ( CASE WHEN tb1.doc_gb = '01' THEN (SELECT title FROM $SCHEMA$.EZ_doc_01 WHERE doc_cd = tb1.doc_cd)
				      WHEN tb1.doc_gb = '02' THEN (SELECT title FROM $SCHEMA$.EZ_doc_02 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '03' THEN (SELECT title FROM $SCHEMA$.EZ_doc_03 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '04' THEN (SELECT title FROM $SCHEMA$.EZ_doc_04 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '05' THEN (SELECT title FROM $SCHEMA$.EZ_doc_05 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '06' THEN (SELECT title FROM $SCHEMA$.EZ_doc_06 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '07' THEN (SELECT title FROM $SCHEMA$.EZ_doc_07 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '08' THEN (SELECT title FROM $SCHEMA$.EZ_doc_08 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '09' THEN (SELECT title FROM $SCHEMA$.EZ_doc_09 WHERE doc_cd = tb1.doc_cd)
					  ELSE '' END  ) AS title,
			 ( CASE WHEN tb1.doc_gb = '01' THEN (SELECT job_name FROM $SCHEMA$.EZ_doc_01 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '02' THEN (SELECT job_name FROM $SCHEMA$.EZ_doc_02 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '03' THEN (SELECT job_name FROM $SCHEMA$.EZ_doc_03 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '04' THEN (SELECT job_name FROM $SCHEMA$.EZ_doc_04 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '05' THEN (SELECT job_name FROM $SCHEMA$.EZ_doc_05 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '06' THEN (SELECT job_name FROM $SCHEMA$.EZ_doc_06_detail WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '07' THEN (SELECT job_name FROM $SCHEMA$.EZ_doc_07 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '08' THEN (SELECT job_name FROM $SCHEMA$.EZ_doc_08 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '09' THEN (SELECT job_name FROM $SCHEMA$.EZ_doc_09 WHERE doc_cd = tb1.doc_cd)
					  ELSE '' END  ) AS job_name,
			   ( CASE WHEN tb1.doc_gb = '01' THEN (SELECT data_center FROM $SCHEMA$.EZ_doc_01 WHERE doc_cd = tb1.doc_cd)
				      WHEN tb1.doc_gb = '02' THEN (SELECT data_center FROM $SCHEMA$.EZ_doc_02 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '03' THEN (SELECT data_center FROM $SCHEMA$.EZ_doc_03 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '04' THEN (SELECT data_center FROM $SCHEMA$.EZ_doc_04 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '05' THEN (SELECT data_center FROM $SCHEMA$.EZ_doc_05 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '06' THEN (SELECT data_center FROM $SCHEMA$.EZ_doc_06 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '07' THEN (SELECT data_center FROM $SCHEMA$.EZ_doc_07 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '08' THEN (SELECT data_center FROM $SCHEMA$.EZ_doc_08 WHERE doc_cd = tb1.doc_cd)
					  WHEN tb1.doc_gb = '09' THEN (SELECT data_center FROM $SCHEMA$.EZ_doc_09 WHERE doc_cd = tb1.doc_cd)
					  ELSE '' END  ) AS data_center
		   FROM $SCHEMA$.EZ_DOC_MASTER tb1
		  	 INNER JOIN $SCHEMA$.EZ_APPROVAL_DOC tb2 ON tb1.doc_cd = tb2.doc_cd
		  	 INNER JOIN $SCHEMA$.EZ_USER tb3 ON tb1.user_cd = tb3.user_cd
		  	 LEFT OUTER JOIN $SCHEMA$.EZ_USER tb4 ON tb2.user_cd = tb4.user_cd
		 WHERE 1 = 1
		   AND tb1.del_yn = 'N'
		   AND (
			 tb2.user_cd = (CASE WHEN tb2.dept_nm = 'GROUP' THEN null ELSE #s_user_cd# END)
					OR (tb2.approval_cd = '01' AND tb4.absence_user_cd =  #s_user_cd#
										 	   AND TO_CHAR(tb4.absence_start_date, 'yyyy-mm-dd') <![CDATA[ <= ]]> TO_CHAR(CURRENT_DATE, 'yyyy-mm-dd')
										  	   AND TO_CHAR(tb4.absence_end_date, 'yyyy-mm-dd') <![CDATA[ >= ]]> TO_CHAR(CURRENT_DATE, 'yyyy-mm-dd'))
		              OR ( #s_user_cd# IN (SELECT a.approval_cd FROM $SCHEMA$.EZ_GROUP_APPROVAL_LINE a WHERE a.group_line_grp_cd = tb2.user_cd and tb2.dept_nm = 'GROUP')
		              
								and #s_user_cd# IN (select REGEXP_SUBSTR(grp_approval_userlist, '[^,]+', 1, LEVEL)
											  		from dual
											  		CONNECT BY REGEXP_SUBSTR(grp_approval_userlist, '[^,]+', 1, LEVEL) IS NOT NULL) 
						 )

		    )
		   AND tb2.approval_cd = '01'
		   AND tb1.cur_approval_seq = tb2.seq
		   AND tb1.del_yn = 'N'
  		   and (tb1.apply_cd != '03' or tb1.apply_cd is null or tb1.apply_cd = '')
  		   AND (tb1.jobgroup_id IS NULL or tb1.jobgroup_id = '')
		   AND tb1.doc_cd = (CASE WHEN tb1.main_doc_cd IS NOT NULL THEN tb1.main_doc_cd ELSE tb1.doc_cd END)
  		   
<!-- 		   AND tb1.ins_date > CURRENT_DATE - '8 day'::interval  -->
		 ORDER BY tb1.draft_date DESC
		 ) TT
		 where 1=1
	</select>
	
	<select id="approvalMentInfo" resultClass="ApprovalInfoBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalMentInfo */
		SELECT scode_nm AS approval_ment
  		  FROM $SCHEMA$.EZ_SCODE WHERE mcode_cd = 'M4'
	</select>
	
	<select id="generalApprovalLineCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > generalApprovalLineCnt */
		SELECT COUNT(*) AS total_count
		  FROM $SCHEMA$.EZ_USER_APPROVAL_GROUP tb1, $SCHEMA$.EZ_USER_APPROVAL_LINE tb2
		 WHERE tb1.owner_user_cd = #s_user_cd#
		   AND tb1.use_yn = 'Y'
		   AND tb1.line_grp_cd = tb2.line_grp_cd
	</select>
	
	<select id="smsAdminList" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > smsAdminList */
		SELECT tb1.user_cd, tb1.user_id, tb1.user_nm, tb1.user_hp,
			   ( SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tb1.dept_cd ) AS dept_nm,
			   ( SELECT duty_nm FROM $SCHEMA$.EZ_DUTY WHERE duty_cd = tb1.duty_cd ) AS duty_nm
		  FROM $SCHEMA$.EZ_USER tb1
		 WHERE 1 = 1
		   AND tb1.del_yn = 'N'
		   <!--AND tb1.status_admin = 'Y'-->
		
	</select>
	
	<!-- spTagsPrc -->
	<parameterMap id="spTagsPrcMap" class="java.util.Map">
		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		
		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="tag_cd"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="table_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="tag_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="tag_relation_dc_wc" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="month_1" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_2" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_3" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_4" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_5" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_6" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_7" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_8" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_9" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_10" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_11" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_12" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="days_cal" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="weeks_cal" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="dates_str" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="day_str" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="w_day_str" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="active_from" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="active_till" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />				
	</parameterMap>
	<procedure id="spTagsPrc" resultClass="java.util.List" parameterMap="spTagsPrcMap">
		{ call $SCHEMA$.SP_EZ_TAGS_PRC	( 	?, ?, ?, ?, ?, 
											?, ?, ?, ?, ?,
											?, ?, ?, ?, ?,
											?, ?, ?, ?, ?,
											?, ?, ?, ?, ?,
											?, ?, ?
										 ) 
		}
	</procedure>
	
	<select id="tagsList" resultClass="TagsBean" parameterClass="java.util.Map">
	/* ORACLE_T > tagsList */
		SELECT tb1.tag_cd, tb1.doc_cd, tb1.table_id, tb1.job_id, tb1.tag_name
		  FROM $SCHEMA$.EZ_TAGS tb1
		 WHERE 1 = 1
		   AND tb1.doc_cd = #doc_cd#	
		 ORDER BY tag_cd 
	</select>
	
	<select id="tagsAllList" resultClass="TagsBean" parameterClass="java.util.Map">
	/* ORACLE_T > tagsAllList */
		SELECT tb1.tag_cd, doc_cd, tag_name, tag_relation_dc_wc, month_1, month_2, month_3, month_4, month_5, month_6, month_7, month_8, 
			   month_9, month_10, month_11, month_12, days_cal, weeks_cal, dates_str, day_str, w_day_str, active_from, active_till
	      FROM $SCHEMA$.EZ_TAGS tb1 
		 WHERE 1 = 1
		   AND tb1.doc_cd = #doc_cd#		
	</select>
	
	<select id="tagsSchedInfo" resultClass="TagsBean" parameterClass="java.util.Map">
	/* ORACLE_T > tagsSchedInfo */		
		SELECT tb1.tag_cd, doc_cd, tag_name, tag_relation_dc_wc, month_1, month_2, month_3, month_4, month_5, month_6, month_7, month_8, 
			   month_9, month_10, month_11, month_12, days_cal, weeks_cal, dates_str, day_str, w_day_str, active_from, active_till
		  FROM $SCHEMA$.EZ_TAGS tb1
		 WHERE tb1.tag_cd = $tag_cd$		
	</select>

	<select id="defTagsList" resultClass="TagsBean" parameterClass="java.util.Map">
	/* ORACLE_T > defTagsList */
		SELECT tb1.table_id, tb1.job_id, tb1.tag_name
		  FROM DEF_TAGS tb1
		 WHERE 1 = 1
		   AND tb1.table_id = $table_id$
		   AND tb1.job_id = $job_id$
	</select>
	
	<select id="defTagsSchedInfo" resultClass="TagsBean" parameterClass="java.util.Map">
	/* ORACLE_T > defTagsSchedInfo */		
		SELECT tag_name, tag_relation_dc_wc, month_1, month_2, month_3, month_4, month_5, month_6, month_7, month_8, 
			   month_9, month_10, month_11, month_12, days_cal, weeks_cal, dates_str, day_str, w_day_str, active_from, active_till 
		  FROM DEF_TAGS tb1
		 WHERE 1 = 1
		   AND tb1.table_id = $table_id$
		   AND tb1.job_id = $job_id$
		   AND tb1.tag_name = #tag_name#
	</select>
	
	<select id="getTableInfo" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > getTableInfo */		
		SELECT tb1.table_type || ',' || tb2.application || ',' || tb2.group_name AS ajax_value
		  FROM DEF_TABLES tb1, DEF_JOB tb2
		 WHERE tb1.sched_table = #table_name#
		   AND tb1.table_id = tb2.table_id
		   AND tb1.sched_table = tb2.job_name
		   AND tb1.table_type = 2
	</select>
	
	<select id="defTagsList2" resultClass="TagsBean" parameterClass="java.util.Map">
	/* ORACLE_T > defTagsList2 */
		SELECT tb1.table_id, tb1.job_id, tb2.tag_name 
		  FROM (
		        SELECT table_id, job_id
		          FROM DEF_JOB
		         WHERE job_name = #table_name#
		           AND task_type = 'SMART Table' ) tb1, DEF_TAGS tb2
		 WHERE tb1.table_id = tb2.table_id
		   AND tb1.job_id = tb2.job_id
	</select>
	
	<select id="getTagsInfo" resultClass="TagsBean" parameterClass="java.util.Map">
	/* ORACLE_T > getTagsInfo */		
		SELECT tb1.table_id, tb1.job_id, tb1.tag_name
		  FROM DEF_TAGS tb1
		 WHERE tb1.tag_name = #tag_name#
		   AND table_id = ( SELECT table_id FROM DEF_TABLES WHERE sched_table = #table_name# )
	</select>
	
	<select id="ajobTableCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > ajobTableCnt */		
		SELECT total_count, LISTAGG(order_id, ',') WITHIN GROUP (ORDER BY order_id) AS smart_table_order_id
		  FROM (
		
			SELECT COUNT(*) AS total_count, order_id
					  FROM $active_net_name$JOB 
					 WHERE job_name IN (
								SELECT parent_table
								  FROM DEF_JOB
								 WHERE job_name = #job_name#
								   AND task_type != 'SMART Table'
								   AND task_type != 'Sub-Table' )
					   AND odate = SUBSTR(#order_date#, 3, 8)
					   AND state != 'Deleted'
				 GROUP BY order_id
				 ORDER BY order_id DESC ) tb1
		 GROUP BY total_count
	</select>
	
	<select id="eaiUserCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > eaiUserCnt */		
		SELECT COUNT(*) AS total_count
		  FROM $SCHEMA$.EZ_USER_EAI
		 WHERE user_id NOT IN ( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE del_yn = 'N' )
	</select>
	
	<select id="getOrderId" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > getOrderId */
		SELECT MAX(order_id) AS order_id
  		  FROM $active_net_name$job WHERE job_name = #job_name#
	</select>
	
	<select id="emCommInfo" resultClass="CtmInfoBean" parameterClass="java.util.Map">
	/* ORACLE_T > emCommInfo */
		 SELECT data_center,
		 		ctm_host_name,
		    	control_m_ver,
		    	time_zone,
		    	ctm_daily_time,
		    	ctm_odate    
		   FROM COMM
		  WHERE 1 = 1
		  			
		<isNotEmpty property="data_center">
			AND data_center = ( CASE WHEN INSTR(#data_center#, ',') > 0
 									  THEN SUBSTR(#data_center#, INSTR(#data_center#, ',')+1, LENGTH(#data_center#))
								     ELSE #data_center# END )
		</isNotEmpty>		    

	</select>
	
	<select id="userPwChk" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > userPwChk */
		SELECT COUNT(*) AS total_count 
		  FROM $SCHEMA$.EZ_USER 
		 WHERE user_id = #user_id#
		   AND user_pw = #user_pw#	
	</select>
	
	
<parameterMap id="spDoc06PrcMap" class="java.util.Map">
		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		
		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="title" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="content" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="data_center" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="file_nm" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="act_gb" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="seq" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="table_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="application" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="group_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="mem_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="description" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="author" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="owner" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="priority" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="critical" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="task_type" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="cyclic" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="node_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="rerun_interval" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="rerun_interval_time" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="mem_lib" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="command" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="confirm_flag" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="days_cal" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="weeks_cal" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="retro" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="max_wait" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="rerun_max" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="time_from" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="time_until" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_days" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="week_days" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="month_1" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_2" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_3" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_4" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_5" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="month_6" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_7" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_8" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_9" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_10" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="month_11" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="month_12" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="count_cyclic_from" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="time_zone" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="multiagent" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="user_daily" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="schedule_and_or" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="in_conditions_opt" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="t_general_date" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_conditions_in" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="t_conditions_out" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_resources_q" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_resources_c" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_set" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_steps" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="t_postproc" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_sfile" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="conf_cal" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="shift" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="shift_num" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="t_tag_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="interval_sequence" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="specific_times" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="tolerance" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="cyclic_type" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="active_from" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="active_till" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_date" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_check" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="dates_str" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="post_approval_time"	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="post_approval_yn"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="ind_cyclic"			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_approval_userList" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_alarm_userList" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spDoc06Prc" resultClass="java.util.List" parameterMap="spDoc06PrcMap">
		{ call $SCHEMA$.SP_EZ_DOC_06_PRC_NEW	( 	?, ?, ?, ?, ?, 
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?, 
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?, 
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?, 
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?, 
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?, 
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?, 
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?,
													?, ?, ?, ?, ?
										) 
		}
	</procedure>
		
	
	<select id="doc06" resultClass="Doc06Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc06 */
	<![CDATA[
		select 
			t1.doc_cd
			,t1.doc_gb
			,t1.user_cd
			,t3.user_id
			,t3.user_nm
			,case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end as dept_nm
			,case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end as duty_nm
			,t1.cur_approval_seq
			,t1.state_cd
			,t1.apply_cd
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') as draft_date
			,t2.title
			,t2.content
			,t2.file_nm
			,t2.act_gb
			,t2.data_center
			, ( CASE WHEN INSTR(t2.data_center, ',') > 0 
					  THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(t2.data_center, 1, INSTR(t2.data_center, ',')-1)) 
					 ELSE t2.data_center END ) AS data_center_name
			, t2.table_name, t2.apply_date, t1.apply_cd, t1.cancel_comment, t1.fail_comment, t2.apply_check
			,(SELECT user_daily FROM $SCHEMA$.EZ_APP_GRP_CODE 
			   WHERE grp_eng_nm = (select GRP_ENG_NM from $SCHEMA$.ez_app_grp_code 
			   						where grp_eng_nm = t2.table_name 
			   						  and grp_depth = 1 
			   						  AND scode_cd = ( CASE WHEN INSTR(t2.data_center, ',') > 0 
															THEN SUBSTR(t2.data_center, 1, INSTR(t2.data_center, ',')-1)
															ELSE t2.data_center END )) AND scode_cd = ( CASE WHEN INSTR(t2.data_center, ',') > 0 
															THEN SUBSTR(t2.data_center, 1, INSTR(t2.data_center, ',')-1)
															ELSE t2.data_center END )
									 AND grp_depth = 1) AS user_daily
		from $SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_DOC_06 t2, $SCHEMA$.EZ_USER t3 
		where 1=1
		and t1.del_yn = 'N'
		and t1.user_cd = t3.user_cd
		and t1.doc_cd = t2.doc_cd
		and t1.doc_cd = #doc_cd#
	]]>		
	</select>
	
	<select id="doc06DetailList" resultClass="Doc06Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc06DetailList */
	<![CDATA[
		SELECT 		
			t1.DOC_CD, TABLE_NAME, APPLICATION, GROUP_NAME, JOB_NAME, DESCRIPTION, MEM_NAME, MEM_LIB 		
			,AUTHOR, OWNER, TASK_TYPE, NODE_ID, PRIORITY, CRITICAL, CYCLIC, RERUN_INTERVAL 
			,RERUN_MAX, COUNT_CYCLIC_FROM, COMMAND, CONFIRM_FLAG, MAX_WAIT, TIME_FROM 					
			,TIME_UNTIL, T_CONDITIONS_IN, T_CONDITIONS_OUT, T_RESOURCES_C, T_RESOURCES_Q, T_SET, T_STEPS 		
			,T_POSTPROC, T2.LATE_SUB, T2.LATE_TIME, T2.LATE_EXEC
		    ,T2.ERROR_DESCRIPTION, T2.USER_CD_2, T2.USER_CD_3, T2.USER_CD_4, T2.USER_CD_5, T2.USER_CD_6, T2.USER_CD_7, T2.USER_CD_8, T2.USER_CD_9, T2.USER_CD_10
		     ,T2.GRP_CD_1, T2.GRP_CD_2

			,T1.month_days, T1.days_cal, T1.month_1, T1.month_2, T1.month_3, T1.month_4, T1.month_5
			,T1.month_6, T1.month_7, T1.month_8, T1.month_9, T1.month_10, T1.month_11, T1.month_12
			,T1.schedule_and_or,T1. week_days, T1.weeks_cal, T1.t_general_date, T1.active_from, T1.active_till
			,R_MSG
			,t1.apply_check
			,(case when (SELECT apply_cd FROM $SCHEMA$.EZ_DOC_MASTER WHERE DOC_CD = #doc_cd#) = '02' and apply_check IS NULL then '반영대기'
				   when apply_check = 'Y' then '반영완료'
				   when apply_check = 'R' then '수정작업삭제완료'
				   when apply_check = 'E' then '작업에러'
				   else '' end) as batch_result
			,SEQ
			,(SELECT STATE_CD FROM $SCHEMA$.EZ_DOC_MASTER WHERE DOC_CD = #doc_cd#) AS STATE_CD
			, t2.success_sms_yn
			
			,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_2) AS user_id_2
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_3) AS user_id_3
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_4) AS user_id_4
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_5) AS user_id_5
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_6) AS user_id_6
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_7) AS user_id_7
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_8) AS user_id_8
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_9) AS user_id_9
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_10) AS user_id_10
			,(SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = t2.grp_cd_1) AS grp_nm_1
			,(SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = t2.grp_cd_2) AS grp_nm_2
			
			,T1.interval_sequence, T1.specific_times, T1.cyclic_type, T1.ind_cyclic, T1.tolerance
			,T2.sms_1, T2.sms_2, T2.sms_3, T2.sms_4,T2.sms_5, T2.sms_6, T2.sms_7, T2.sms_8, T2.sms_9, T2.sms_10, T2.grp_sms_1, T2.grp_sms_2
			,T2.mail_1, T2.mail_2, T2.mail_3, T2.mail_4,T2.mail_5, T2.mail_6, T2.mail_7, T2.mail_8, T2.mail_9, T2.mail_10, T2.grp_mail_1, T2.grp_mail_2
			
			,t1.conf_cal, t1.shift, t1.shift_num

		FROM 
			$SCHEMA$.EZ_DOC_06_DETAIL T1 LEFT OUTER JOIN 
		 	(SELECT 
				 DOC_CD, JOB ,LATE_SUB , LATE_TIME, LATE_EXEC, success_sms_yn, data_center,
				 BATCHJOBGRADE, ERROR_DESCRIPTION, USER_CD_2, USER_CD_3, USER_CD_4, USER_CD_5, USER_CD_6, USER_CD_7, USER_CD_8, USER_CD_9, USER_CD_10, GRP_CD_1, GRP_CD_2
				,sms_1, sms_2, sms_3, sms_4,sms_5, sms_6, sms_7, sms_8, sms_9, sms_10, grp_sms_1, grp_sms_2
				,mail_1, mail_2, mail_3, mail_4,mail_5, mail_6, mail_7, mail_8, mail_9, mail_10, grp_mail_1, grp_mail_2
			FROM $SCHEMA$.EZ_JOB_MAPPER_DOC
			) T2 ON T1.JOB_NAME = T2.JOB
			    AND t1.doc_cd = t2.doc_cd			   
		WHERE 1 = 1
			AND t1.DOC_CD = #doc_cd#
			
	]]>		
	
	<isNotEmpty prepend="and" property="excel_down">
		t1.apply_check = 'E'
	</isNotEmpty>
	
	<isNotEmpty prepend="and" property="JOB_NAME">
		JOB_NAME = #JOB_NAME#
	</isNotEmpty>
	ORDER BY T1.SEQ ASC
	</select>
	
	<select id="doc06DetailList2" resultClass="Doc06Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc06DetailList2 */
	<![CDATA[
	select * from (
		SELECT 		
			t1.DOC_CD, TABLE_NAME, APPLICATION, GROUP_NAME, JOB_NAME, DESCRIPTION, MEM_NAME, MEM_LIB 		
			,AUTHOR, OWNER, TASK_TYPE, NODE_ID, PRIORITY, CRITICAL, CYCLIC, RERUN_INTERVAL 
			,RERUN_MAX, COUNT_CYCLIC_FROM, COMMAND, CONFIRM_FLAG, MAX_WAIT, TIME_FROM 					
			,TIME_UNTIL, T_CONDITIONS_IN, T_CONDITIONS_OUT, T_RESOURCES_C, T_RESOURCES_Q, T_SET, T_STEPS 		
			,T_POSTPROC, T2.LATE_SUB, T2.LATE_TIME, T2.LATE_EXEC
		    ,T2.ERROR_DESCRIPTION, T2.USER_CD_2, T2.USER_CD_3, T2.USER_CD_4, T2.USER_CD_5, T2.USER_CD_6, T2.USER_CD_7, T2.USER_CD_8, T2.USER_CD_9, T2.USER_CD_10
		     ,T2.GRP_CD_1, T2.GRP_CD_2

			,T1.month_days, T1.days_cal, T1.month_1, T1.month_2, T1.month_3, T1.month_4, T1.month_5
			,T1.month_6, T1.month_7, T1.month_8, T1.month_9, T1.month_10, T1.month_11, T1.month_12
			,T1.schedule_and_or,T1. week_days, T1.weeks_cal, T1.t_general_date, T1.active_from, T1.active_till
			,R_MSG
			,t1.apply_check
			,(case when (SELECT apply_cd FROM $SCHEMA$.EZ_DOC_MASTER WHERE DOC_CD = #doc_cd#) = '02' and apply_check IS NULL then '반영대기'
				   when apply_check = 'Y' then '반영완료'
				   when apply_check = 'R' then '수정작업삭제완료'
				   when apply_check = 'E' then '작업에러'
				   else '' end) as batch_result
			,SEQ
			,(SELECT STATE_CD FROM $SCHEMA$.EZ_DOC_MASTER WHERE DOC_CD = #doc_cd#) AS STATE_CD
			, t2.success_sms_yn
			,(select title from $SCHEMA$.EZ_DOC_06 where doc_cd = t1.doc_cd) as title
			,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_2) AS user_id_2
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_3) AS user_id_3
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_4) AS user_id_4
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_5) AS user_id_5
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_6) AS user_id_6
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_7) AS user_id_7
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_8) AS user_id_8
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_9) AS user_id_9
		    ,(SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = t2.user_cd_10) AS user_id_10
			,(SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = t2.grp_cd_1) AS grp_nm_1
			,(SELECT group_line_grp_nm FROM $SCHEMA$.EZ_GROUP_APPROVAL_GROUP WHERE group_line_grp_cd = t2.grp_cd_2) AS grp_nm_2
			,(select user_nm from $SCHEMA$.ez_user where user_id = t1.AUTHOR) as user_nm
			,(select dept_cd from $SCHEMA$.ez_user where user_id = t1.AUTHOR) as dept_cd
			,T1.interval_sequence, T1.specific_times, T1.cyclic_type, T1.ind_cyclic, T1.tolerance
			,T2.sms_1, T2.sms_2, T2.sms_3, T2.sms_4,T2.sms_5, T2.sms_6, T2.sms_7, T2.sms_8, T2.sms_9, T2.sms_10, T2.grp_sms_1, T2.grp_sms_2
			,T2.mail_1, T2.mail_2, T2.mail_3, T2.mail_4,T2.mail_5, T2.mail_6, T2.mail_7, T2.mail_8, T2.mail_9, T2.mail_10, T2.grp_mail_1, T2.grp_mail_2
			
			,t1.apply_date, (SELECT to_char(ins_date,'YYYYMMDD') FROM $SCHEMA$.EZ_DOC_MASTER WHERE DOC_CD = #doc_cd#) AS search_ins_date

		FROM 
			$SCHEMA$.EZ_DOC_06_DETAIL T1 LEFT OUTER JOIN 
		 	(SELECT 
				 DOC_CD, JOB ,LATE_SUB , LATE_TIME, LATE_EXEC, success_sms_yn, data_center,
				 BATCHJOBGRADE, ERROR_DESCRIPTION, USER_CD_2, USER_CD_3, USER_CD_4, USER_CD_5, USER_CD_6, USER_CD_7, USER_CD_8, USER_CD_9, USER_CD_10, GRP_CD_1, GRP_CD_2
				,sms_1, sms_2, sms_3, sms_4,sms_5, sms_6, sms_7, sms_8, sms_9, sms_10, grp_sms_1, grp_sms_2
				,mail_1, mail_2, mail_3, mail_4,mail_5, mail_6, mail_7, mail_8, mail_9, mail_10, grp_mail_1, grp_mail_2
			FROM $SCHEMA$.EZ_JOB_MAPPER_DOC
			) T2 ON T1.JOB_NAME = T2.JOB
			    AND t1.doc_cd = t2.doc_cd			   
		WHERE 1 = 1
		ORDER BY T1.SEQ ASC
		) tt
		where 1=1	
			
	]]>	
	<isNotEmpty property="p_s_text">
		<isEqual property="p_s_gb" compareValue="01">
			and doc_cd like '%'||#p_s_text#||'%'
		</isEqual>
		<isEqual property="p_s_gb" compareValue="02">
			and title like '%'||#p_s_text#||'%'
		</isEqual>
		<isEqual property="p_s_gb" compareValue="03">
			and job_name like '%'||#p_s_text#||'%'
		</isEqual>
		<isEqual property="p_s_gb" compareValue="04">
			and user_nm like '%'||#p_s_text#||'%'
		</isEqual>
		<isEqual property="p_s_gb" compareValue="05">
			and description like '%'||#p_s_text#||'%'
		</isEqual>
		<isEqual property="p_s_gb" compareValue="07">
			and (SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = tt.dept_cd) like '%'||#p_s_text#||'%'
		</isEqual>	
		<isEqual property="p_s_gb" compareValue="06">
			<isNotEmpty property="p_s_doc_gb">
				<isEqual property="p_s_doc_gb" compareValue="01">
					and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
				</isEqual>
				<isEqual property="p_s_doc_gb" compareValue="03">
					and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
				</isEqual>
				<isEqual property="p_s_doc_gb" compareValue="04">
					and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
				</isEqual>
				<isEqual property="p_s_doc_gb" compareValue="05">
					and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
				</isEqual>
				<isEqual property="p_s_doc_gb" compareValue="07">
					and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
				</isEqual>
				<isEqual property="p_s_doc_gb" compareValue="00">
					and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
				</isEqual>
				<isEqual property="p_s_doc_gb" compareValue="99">
					and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
				</isEqual>
			</isNotEmpty>
			
		</isEqual>				
	</isNotEmpty>
	
	<isNotEmpty property="p_s_search_date">		
		<isEqual property="p_date_gubun" compareValue="02">
			and search_ins_date >= #p_s_search_date#
		</isEqual>
	</isNotEmpty>
	<isNotEmpty property="p_e_search_date">
		<isEqual property="p_date_gubun" compareValue="02">
			and search_ins_date <![CDATA[ <= ]]> #p_e_search_date#
		</isEqual>
	</isNotEmpty>

	<isNotEmpty property="p_s_search_date2">
		<isEqual property="p_date_gubun2" compareValue="03">
			and apply_date <![CDATA[ >= ]]> #p_s_search_date2#
		</isEqual>
	</isNotEmpty>

	<isNotEmpty property="p_e_search_date2">
		<isEqual property="p_date_gubun2" compareValue="03">
			and apply_date <![CDATA[ <= ]]> #p_e_search_date2#
		</isEqual>
	</isNotEmpty>
	
	</select>
	
	<select id="docSetList" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > docSetList */
	<![CDATA[
		SELECT (SELECT MAX(doc_cd)
		          FROM $SCHEMA$.EZ_DOC_SET 
		         WHERE 1 = 1
		           AND set_cd = (SELECT set_cd FROM $SCHEMA$.EZ_DOC_SET WHERE doc_cd = #doc_cd#) ) AS max_doc_cd
		       , doc_cd, job_name, group_name, description, mem_name, mem_lib 
		  FROM $SCHEMA$.EZ_DOC_01
		 WHERE doc_cd IN (
		        SELECT doc_cd
		          FROM $SCHEMA$.EZ_DOC_SET
		         WHERE 1 = 1
		           AND set_cd = (SELECT set_cd FROM $SCHEMA$.EZ_DOC_SET WHERE doc_cd = #doc_cd#) )
		 ORDER BY doc_cd
	]]>
		
	</select>
	
	<select id="userPwInfo" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > userPwInfo */
		SELECT user_pw, pw_fail_cnt, pw_date, before_pw, account_lock
		  FROM $SCHEMA$.EZ_USER 
		 WHERE user_cd = #user_cd#
	</select>
	
	<select id="userBeforePwChk" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > userBeforePwChk */
		SELECT before_pw
		  FROM $SCHEMA$.EZ_USER 
		 WHERE user_id = #user_id#
	</select>
	
	<select id="getUserCd" resultClass="tDefJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > getUserCd */
		SELECT user_cd
  		  FROM $SCHEMA$.EZ_USER 
  		 WHERE user_id = #user_id#
  		   AND del_yn != 'Y'
	</select>

	<select id="getGroupUserCd" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > getGroupUserCd */
		SELECT group_line_grp_cd
<!-- 			FROM $SCHEMA$.ez_group_user_group -->
			FROM $SCHEMA$.ez_group_approval_group
		WHERE group_line_grp_nm = #group_line_grp_nm#
			AND use_yn = 'Y'
	</select>
	
	<select id="getUserCd_NM" resultClass="tDefJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > getUserCd_NM */
		SELECT user_cd
  		  FROM $SCHEMA$.EZ_USER 
  		 WHERE user_nm = #user_nm#
  		   AND del_yn != 'Y'
	</select>
	
	<select id="getAjobStatus" resultClass="tActiveJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > getAjobStatus */
		SELECT CASE	WHEN delete_flag = '1' THEN 'Deleted'
					WHEN RTRIM(state) LIKE 'Held%' THEN 'HOLD'
					ELSE status END AS status, job_name, status as status2
  		  FROM $active_net_name$JOB 
  		 WHERE order_id = #order_id#
	</select>

	<select id="groupAppList" resultClass="ApprovalLineBean" parameterClass="java.util.Map">
	/* ORACLE_T > groupAppList */
		SELECT tb1.group_approval_line_cd, tb1.group_cd, tb1.USER_CD, tb2.USER_ID, tb2.USER_NM, tb3.duty_nm, tb4.dept_nm,
			   TO_CHAR(tb1.INS_DATE, 'YYYY-MM-DD') AS INS_DATE
		  FROM $SCHEMA$.EZ_GROUP_APPROVAL_LINE tb1, $SCHEMA$.EZ_USER tb2, $SCHEMA$.EZ_DUTY tb3, $SCHEMA$.EZ_DEPT tb4
		 WHERE 1 = 1
		   AND tb1.user_cd = tb2.user_cd
		   AND tb2.duty_cd = tb3.duty_cd
		   AND tb2.dept_cd = tb4.dept_cd
		ORDER BY tb1.group_approval_line_cd
	</select>
	
		<!-- activeJobList -->
	<sql id="activeGroupJobListInc">
	/* ORACLE_T > activeGroupJobListInc */
	<![CDATA[
			FROM $active_net_name$JOB A, ( SELECT job, user_cd_1 FROM $SCHEMA$.EZ_JOB_MAPPER WHERE data_center = #data_center# ) B,
				 $SCHEMA$.EZ_JOBGROUP_JOB tb2
			WHERE 1=1
			  AND A.job_name = B.job (+)			  
			  AND A.job_name = tb2.job_name
			  AND tb2.jobgroup_id = #jobgroup_id#
			  AND tb2.data_center = #data_center#
			  
		)
		where 1=1
	]]>	
		<isNotEmpty prepend="and" property="odate">
			odate = REPLACE(SUBSTR(#odate#, 3, 8), '/', '')
		</isNotEmpty>
	
		<isNotEmpty prepend="and" property="sched_table">
			order_table = #sched_table#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="application_of_def">
			application = #application_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="group_name_of_def">
			group_name = #group_name_of_def#
		</isNotEmpty>		
		<isNotEmpty prepend="and" property="sub_table_of_def">
			job_name = #sub_table_of_def#
		</isNotEmpty>
		
		<isNotEmpty prepend="and" property="status">
			state_result = #status#
		</isNotEmpty>
		
		<isNotEmpty prepend="and" property="search_text">
			<isEqual property="search_gubun" compareValue="job_name">
				UPPER(job_name) like UPPER('%'||#search_text#||'%')
			</isEqual>
			<isEqual property="search_gubun" compareValue="description">
				description like '%'||#search_text#||'%'
			</isEqual>
			<isEqual property="search_gubun" compareValue="user_nm">
				(user_nm like '%'||#search_text#||'%' or user_id = #search_text#)
			</isEqual>
		</isNotEmpty>
		
	</sql>
	
	<select id="activeGroupJobListCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > activeGroupJobListCnt */
		select count(*) as total_count from( 
			select * from(
				SELECT 
					A.odate
					,A.order_table
					,A.application
			      	,A.group_name
			      	,A.job_name
			      	,A.memname
			      	,case WHEN A.DELETE_FLAG='1' THEN 'Deleted'
				                WHEN  RTRIM(A.STATE) like 'Held%' THEN 'Held'  
				               <!-- WHEN (A.STATUS='Wait Condition' AND trim(A.FROM_TIME) IS NOT NULL) THEN 'Wait Time' -->
				               ELSE A.STATUS END state_result
			        , A.description
			        , ( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = B.user_cd_1 ) AS user_nm
					, ( SELECT user_id FROM $SCHEMA$.EZ_USER WHERE user_cd = B.user_cd_1 ) AS user_id
		<include refid="activeGroupJobListInc" />
		)
	</select>
	
	<select id="activeGroupJobList" resultClass="tActiveJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > activeGroupJobList */
		SELECT * FROM(
			SELECT rownum as row_num, TTT.* FROM(
  			
  			select * from(
				SELECT A.start_time
			      		,A.end_time
			      		,A.rerun_counter
			      		,A.order_table
			      		,A.application
			      		,A.group_name
			      		,trim(A.job_name) job_name
			      		,trim(A.memname) memname
			      		,case WHEN A.DELETE_FLAG='1' THEN 'Deleted'
				                WHEN  RTRIM(A.STATE) like 'Held%' THEN 'Held' 
				               <!--  WHEN (A.STATUS='Wait Condition' AND trim(A.FROM_TIME) IS NOT NULL) THEN 'Wait Time' -->
				               ELSE A.STATUS END state_result
			          ,case WHEN RTRIM(A.STATE) like 'Held%' THEN 'Y' ELSE 'N' END holdflag
			          ,A.order_id
			          ,trim(A.STATUS) status
			          ,A.odate
			          ,A.state
			          ,A.job_id 
			          ,( CASE WHEN A.CRITICAL = '1' THEN 'Y' ELSE 'N' END ) critical_yn
			          , A.description
			          , ( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = B.user_cd_1 ) AS user_nm
			          , a.cpu_id AS node_id
			          ,CASE WHEN a.status = 'Wait User' THEN 'WAIT' 
			      				WHEN a.status = 'Wait Condition' THEN 'WAIT' 
			      				WHEN a.status = 'Wait Resource' THEN 'WAIT'
			      				WHEN a.status = 'Wait Host' THEN 'WAIT' 
			      				WHEN a.status = 'Executing' THEN 'RUNNING' 
			      				WHEN a.status = 'Ended OK' THEN 'SUCCESS' 
							    WHEN a.status = 'Ended Not OK' THEN 'FAIL' 
							    ELSE 'ETC'  END state_result2
		<include refid="activeGroupJobListInc" />
		
		ORDER BY START_TIME desc
		
			)TTT
		) tb1
		<isNotEmpty property="startRowNum">
			WHERE row_num between #startRowNum# and #endRowNum#
		</isNotEmpty>
		
	</select>
	
	<sql id="mainDocInfoListInc">
	/* ORACLE_T > mainDocInfoListInc */
		from $SCHEMA$.EZ_DOC_MASTER t1
		where 1=1
		and t1.del_yn = 'N'
		
		<isEqual property="doc_cnt" compareValue="0">
			AND t1.doc_cd = #doc_cd#
		</isEqual>
		<isNotEqual property="doc_cnt" compareValue="0">
			AND t1.main_doc_cd = #doc_cd#
<!-- 			AND t1.main_doc_cd = ( SELECT main_doc_cd FROM $SCHEMA$.EZ_DOC_MASTER WHERE doc_cd = #doc_cd# )
			and doc_group_id is null
			and t1.doc_cd in (SELECT doc_cd FROM $SCHEMA$.EZ_DOC_MASTER WHERE (case when (t1.main_doc_cd = '' or t1.main_doc_cd is null) then doc_cd else main_doc_cd end) = #doc_cd#)
			-->
<!-- 			and doc_group_id is null -->
<!-- 			And t1.doc_cd IN (SELECT doc_cd FROM $SCHEMA$.EZ_DOC_MASTER WHERE (CASE WHEN t1.main_doc_cd is not null THEN main_doc_cd=#doc_cd# else doc_cd=#doc_cd# END)) -->

		</isNotEqual>
		
		) tt

		where 1=1
	</sql>
	
	<sql id="mainDocInfoListInc2">
	/* ORACLE_T > mainDocInfoListInc2 */
		from $SCHEMA$.EZ_DOC_MASTER t1
		where 1=1
		and t1.del_yn = 'N'

		) tt

		where 1=1
		
		<isNotEmpty property="p_s_text">
			<isEqual property="p_s_gb" compareValue="01">
				and doc_cd like '%'||#p_s_text#||'%'
			</isEqual>
			<isEqual property="p_s_gb" compareValue="02">
				and title like '%'||#p_s_text#||'%'
			</isEqual>
			<isEqual property="p_s_gb" compareValue="03">
				and job_name like '%'||#p_s_text#||'%'
			</isEqual>
			<isEqual property="p_s_gb" compareValue="04">
				and user_nm like '%'||#p_s_text#||'%'
			</isEqual>
			
			<isEqual property="p_s_gb" compareValue="05">			
				<!-- 엑셀일괄은 제외(요청서 안의 다 건의 작업이 검색 대상) -->
				<isNotEqual property="p_s_doc_gb" compareValue="06">
					and tt.description like '%'||#p_s_text#||'%'
				</isNotEqual>
			</isEqual>
			<isEqual property="p_s_gb" compareValue="07">
				and dept_nm like '%'||#p_s_text#||'%'
			</isEqual>	
			<isEqual property="p_s_gb" compareValue="06">
				<isNotEmpty property="p_s_doc_gb">
					<isEqual property="p_s_doc_gb" compareValue="01">
						and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="03">
						and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="04">
						and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="05">
						and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="07">
						and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="00">
						and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
					</isEqual>
					<isEqual property="p_s_doc_gb" compareValue="99">
						and UPPER(JOB_NAME) like UPPER('%'||#p_s_text#||'%')
					</isEqual>
				</isNotEmpty>
				
			</isEqual>				
		</isNotEmpty>
		
		<isNotEmpty property="p_s_search_date">
			<isEqual property="p_date_gubun" compareValue="01">
				and ( search_draft_date >= to_char(to_date(#p_s_search_date#, 'YYYY/MM/DD'), 'YYYY/MM/DD'))
			</isEqual>
			<isEqual property="p_date_gubun" compareValue="02">
				and search_ins_date >= to_char(to_date(#p_s_search_date#, 'YYYY/MM/DD'), 'YYYY/MM/DD')
			</isEqual>
			<isEqual property="p_date_gubun" compareValue="03">
				and s_apply_date <![CDATA[ >= ]]> to_char(to_date(#p_e_search_date#, 'YYYY/MM/DD'), 'YYYY/MM/DD')
			</isEqual>
			<isEqual property="p_date_gubun" compareValue="04">
				and odate <![CDATA[ >= ]]> to_char(to_date(#p_e_search_date#, 'YYYY/MM/DD'), 'YYYY/MM/DD')
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="p_e_search_date">
			<isEqual property="p_date_gubun" compareValue="01">
				and ( search_draft_date <![CDATA[ <= ]]> to_char(to_date(#p_e_search_date#, 'YYYY/MM/DD'), 'YYYY/MM/DD') )
			</isEqual>
			<isEqual property="p_date_gubun" compareValue="02">
				and search_ins_date <![CDATA[ <= ]]>to_char(to_date( #p_e_search_date#, 'YYYY/MM/DD'), 'YYYY/MM/DD')
			</isEqual>
			<isEqual property="p_date_gubun" compareValue="03">
				and s_apply_date <![CDATA[ <= ]]> to_char(to_date(#p_e_search_date#, 'YYYY/MM/DD'), 'YYYY/MM/DD')
			</isEqual>
			<isEqual property="p_date_gubun" compareValue="04">
				and odate <![CDATA[ <= ]]> to_char(to_date(#p_e_search_date#, 'YYYY/MM/DD'), 'YYYY/MM/DD')
			</isEqual>
		</isNotEmpty>
		
		<isNotEmpty property="p_s_search_date2">			
			<isEqual property="p_date_gubun2" compareValue="03">
				and search_apply_date <![CDATA[ >= ]]> to_char(to_date(#p_s_search_date2#, 'YYYY/MM/DD'), 'YYYY/MM/DD')
			</isEqual>
		</isNotEmpty>
		
		<isNotEmpty property="p_e_search_date2">
			<isEqual property="p_date_gubun2" compareValue="03">
				and search_apply_date <![CDATA[ <= ]]> to_char(to_date(#p_e_search_date2#, 'YYYY/MM/DD'), 'YYYY/MM/DD')
			</isEqual>
		</isNotEmpty>
	</sql>
	
	<select id="mainDocInfoListCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > mainDocInfoListCnt */
	<![CDATA[
		SELECT count(*) as total_count
		from 
		(select 
			t1.doc_cd
			,t1.doc_gb
			,(case when t1.doc_gb='01' then (select title from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select title from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select title from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select title from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select title from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select title from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select title from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
			  		when t1.doc_gb='09' then (select title from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)

			 		else '' end) AS title
			,(case when t1.doc_gb='01' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select job_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select job_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select job_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select file_nm from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select job_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
			  		when t1.doc_gb='09' then (select job_name from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)

			 		else '' end) AS job_name
			,(case when t1.doc_gb='01' then (select description from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select description from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select description from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select description from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select description from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select description from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select description from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					else '' end) AS description
		    ,(case when t1.draft_date is not null then to_char(t1.draft_date,'YYYY/MM/DD') else to_char(t1.ins_date,'YYYY/MM/DD') end) AS search_ins_date
			,(case when t1.doc_gb='01' then (select task_type from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					
					when t1.doc_gb='03' then (select task_type from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select task_type from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select  '' AS task_type from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
			
			 		else '' end) AS task_type
			 ,(case when t1.doc_gb='01' then (select apply_check from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select  '' AS apply_check from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select apply_check from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select apply_check from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select apply_check from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select apply_check from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
			
			 		else '' end) AS apply_check
			 ,(case when t1.doc_gb='01' then 0
					when t1.doc_gb='02' then 0
					when t1.doc_gb='03' then 0
					when t1.doc_gb='04' then (select table_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select table_id from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
			
			 		else 0 end) AS table_id
			,(case when t1.doc_gb='01' then 0
					when t1.doc_gb='02' then 0
					when t1.doc_gb='03' then 0
					when t1.doc_gb='04' then (select job_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select job_id from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
			
			 		else 0 end) AS job_id
			 ,t1.state_cd, t1.apply_cd, to_char(t1.apply_date,'YYYY/MM/DD HH24:MI:SS') AS apply_date
			 ,t1.main_doc_cd
			 ,t1.fail_comment
			
	]]>
		<include refid="mainDocInfoListInc" />
	
	</select>
	
	<select id="mainDocInfoList" resultClass="DocInfoBean" parameterClass="java.util.Map">
	/* ORACLE_T > mainDocInfoList */
	<![CDATA[
		SELECT * FROM(
			SELECT rownum  as row_num, TTT.* FROM(
		
		select * from(
		select 
			t1.doc_cd
			,t1.doc_gb
			,t1.user_cd
			,t1.cur_approval_seq
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') AS draft_date
			,to_char(t1.ins_date,'YYYY/MM/DD HH24:MI:SS') AS ins_date
			,(case when t1.draft_date is not null then to_char(t1.draft_date,'YYYY/MM/DD') else to_char(t1.ins_date,'YYYY/MM/DD') end) AS search_ins_date
			,post_approval_yn
			
			
			,(case when t1.doc_gb='01' then (select title from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select title from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select title from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select title from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select title from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select title from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select title from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
			    	when t1.doc_gb='08' then (select title from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			   		when t1.doc_gb='09' then (select title from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
			    	when t1.doc_gb='10' then (select error_description from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
			 		else '' end) AS title
			,(case when t1.doc_gb='01' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select job_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select job_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select job_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select job_name from $SCHEMA$.ez_doc_06_detail where doc_cd=t1.doc_cd and seq = 1)
					when t1.doc_gb='07' then (select job_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
			 		when t1.doc_gb='08' then (select job_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			   	    when t1.doc_gb='09' then (select job_name from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
			    	when t1.doc_gb='10' then (select job_name from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
			 		else '' end) AS job_name
			,(case when t1.doc_gb='01' then (select description from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select description from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select description from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select description from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select description from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
			   		when t1.doc_gb='08' then (select description from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			   		when t1.doc_gb='10' then (select max(b.description) from $SCHEMA$.ez_doc_10 a, DEF_JOB b where a.doc_cd=t1.doc_cd and a.job_name = b.job_name)
			 		else '' end) AS description
			,(case when t1.doc_gb='01' then (select data_center from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select data_center from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select data_center from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select data_center from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select data_center from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select data_center from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select data_center from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
			        when t1.doc_gb='08' then (select data_center from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			     	when t1.doc_gb='09' then (select data_center from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
			    	when t1.doc_gb='10' then (select data_center from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
			        else '' end) AS data_center
		    ,(case when t1.doc_gb='01' then (select table_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select table_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select table_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select table_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select table_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select table_name from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select table_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
			        when t1.doc_gb='08' then (select table_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			        else '' end) AS table_name
			,(case when t1.doc_gb='01' then (select priority from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select priority from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
			        else '' end) AS priority
			,t1.doc_group_id
			,(case when t1.doc_gb='01' then (select task_type from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					
					when t1.doc_gb='03' then (select task_type from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select task_type from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select '' AS task_type from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
				
			 		else '' end) AS task_type
			,(case when t1.doc_gb='01' then (select apply_check from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select  '' AS apply_check from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select apply_check from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select apply_check from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select apply_check from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select apply_check from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					
			 		else '' end) AS apply_check
		     ,(case when t1.doc_gb='01' then (select apply_date from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select apply_date from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select apply_date from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select apply_date from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select order_date from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select apply_date from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select apply_date from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
		         	when t1.doc_gb='09' then (select apply_date from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
			 		else '' end) AS apply_exe_date
			,(case when t1.doc_gb='01' then 0
					when t1.doc_gb='02' then 0
					when t1.doc_gb='03' then (select table_id from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select table_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select table_id from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
			    	when t1.doc_gb='07' then (select table_id from def_job t2, $SCHEMA$.ez_doc_07 t3 where t2.job_name = t3.job_name and t3.doc_cd = t1.doc_cd)
			 		else 0 end) AS table_id
			,(case when t1.doc_gb='01' then 0
					when t1.doc_gb='02' then 0
					when t1.doc_gb='03' then (select job_id from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select job_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select job_id from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
			    	when t1.doc_gb='07' then (select job_id from def_job t2, $SCHEMA$.ez_doc_07 t3 where t2.job_name = t3.job_name and t3.doc_cd = t1.doc_cd)
			 		else 0 end) AS job_id
			,t1.state_cd, t1.apply_cd
			,(case when t1.doc_gb='04' then (select apply_date from $SCHEMA$.ez_doc_04 where doc_cd=t1.doc_cd)
			  else to_char(t1.apply_date,'YYYY/MM/DD HH24:MI:SS') end)  AS apply_date
			,t1.main_doc_cd
			,t1.fail_comment
			
			,(case  when t1.doc_gb='05' then (select status from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
			 		else '' end) AS status
			,(case  when t1.doc_gb='05' then (select status from $active_net_name$JOB where order_id = (select order_id from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd))
			 		else '' end) AS ajob_status 
		    ,(case  when t1.doc_gb='05' then (select t_set from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
			 		else '' end) AS t_set
			,(case when t1.doc_gb='05' then (select hold_yn from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					else '' end) AS hold_yn
			,(case when t1.doc_gb='05' then (select force_yn from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					else '' end) AS force_yn
			,(case when t1.doc_gb='05' then (select order_date from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					else '' end) AS order_date
		     ,(case when t1.doc_gb='07' then (select before_status from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					else '' end) AS before_status
		     ,(case when t1.doc_gb='07' then (select after_status from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					else '' end) AS after_status
		     ,(case when t1.doc_gb='07' then (select order_id from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					else '' end) AS order_id
			,(case when t1.doc_gb='10' then (select alarm_cd from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
					else 0 end) AS alarm_cd
		    ,(case when t1.doc_gb='10' then (select error_description from $SCHEMA$.EZ_doc_10 where doc_cd=t1.doc_cd)
					else '' end) AS error_description
			,(case when t1.apply_cd = '02' then '반영완료' else '' end) as batch_result
			
	]]>
		<include refid="mainDocInfoListInc" />
		order by DOC_CD desc
		
			)TTT
		) tb1
		<isNotEmpty property="startRowNum">
			WHERE row_num between #startRowNum# and #endRowNum#
		</isNotEmpty>
		
		<isNotEmpty property="order">
			<!-- ORDER BY DECODE(DOC_CD, #doc_cd#, 0) -->
			ORDER BY (CASE WHEN doc_cd = #doc_cd# THEN 0 END)
		</isNotEmpty>
		
		
	</select>
	<select id="mainDocInfoList2" resultClass="DocInfoBean" parameterClass="java.util.Map">
	/* ORACLE_T > mainDocInfoList2 */
	<![CDATA[
		SELECT * FROM(
			SELECT rownum  as row_num, TTT.* FROM(
		
		select * from(
		select 
			t1.doc_cd
			,t1.doc_gb
			,t1.user_cd
			,(select user_nm from $SCHEMA$.ez_user where user_cd = t1.user_cd) as user_nm
			,(select dept_nm from $SCHEMA$.ez_dept where dept_cd = (select dept_cd from $SCHEMA$.ez_user where user_cd = t1.user_cd)) dept_nm
			,t1.cur_approval_seq
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') AS draft_date
			,to_char(t1.ins_date,'YYYY/MM/DD HH24:MI:SS') AS ins_date
			,(case when t1.draft_date is not null then to_char(t1.draft_date,'YYYY/MM/DD') else to_char(t1.ins_date,'YYYY/MM/DD') end) AS search_ins_date
			,post_approval_yn
			
			,(case when t1.doc_gb='01' then (select title from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select title from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select title from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select title from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select title from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select title from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select title from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
			    	when t1.doc_gb='08' then (select title from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			   		when t1.doc_gb='09' then (select title from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
			 		else '' end) AS title
			,(case when t1.doc_gb='01' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select job_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select job_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select job_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select job_name from $SCHEMA$.ez_doc_06_detail where doc_cd=t1.doc_cd and seq = 1)
					when t1.doc_gb='07' then (select job_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
			 		when t1.doc_gb='08' then (select job_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			   	    when t1.doc_gb='09' then (select job_name from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
			 		else '' end) AS job_name
			,(case when t1.doc_gb='01' then (select description from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select description from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select description from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select description from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select description from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
			   		when t1.doc_gb='08' then (select description from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			 		else '' end) AS description
			,(case when t1.doc_gb='01' then (select data_center from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select data_center from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select data_center from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select data_center from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select data_center from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select data_center from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select data_center from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
			        when t1.doc_gb='08' then (select data_center from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			     	when t1.doc_gb='09' then (select data_center from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
			        else '' end) AS data_center
		    ,(case when t1.doc_gb='01' then (select table_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select table_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select table_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select table_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select table_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select table_name from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select table_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
			        when t1.doc_gb='08' then (select table_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
			        else '' end) AS table_name
			,(case when t1.doc_gb='01' then (select priority from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select priority from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
			        else '' end) AS priority
			,t1.doc_group_id
			,(case when t1.doc_gb='01' then (select task_type from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					
					when t1.doc_gb='03' then (select task_type from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select task_type from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select '' AS task_type from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
				
			 		else '' end) AS task_type
			,(case when t1.doc_gb='01' then (select apply_check from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select  '' AS apply_check from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select apply_check from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select apply_check from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select apply_check from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select apply_check from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
					
			 		else '' end) AS apply_check
			,(case when t1.doc_gb='01' then 0
					when t1.doc_gb='02' then 0
					when t1.doc_gb='03' then 0
					when t1.doc_gb='04' then (select table_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select table_id from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
			
			 		else 0 end) AS table_id
			,(case when t1.doc_gb='01' then 0
					when t1.doc_gb='02' then 0
					when t1.doc_gb='03' then 0
					when t1.doc_gb='04' then (select job_id from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select job_id from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
			
			 		else 0 end) AS job_id
			,t1.state_cd, t1.apply_cd
			,(case when t1.doc_gb='04' then (select apply_date from $SCHEMA$.ez_doc_04 where doc_cd=t1.doc_cd)
			  else to_char(t1.apply_date,'YYYY/MM/DD HH24:MI:SS') end)  AS apply_date
			,t1.main_doc_cd
			,t1.fail_comment
			
			,(case 
					when t1.doc_gb='05' then (select status from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)					
			 		else '' end) AS status
			,(case 
					when t1.doc_gb='05' then (select status from $active_net_name$JOB where order_id = (select order_id from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd))
			 		else '' end) AS ajob_status 
			,(case when t1.apply_cd = '02' then '반영완료' else '' end) as batch_result
			,(case when t1.doc_gb='01' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_01 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='02' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_02 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='03' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_03 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='04' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1, $SCHEMA$.EZ_doc_04 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='05' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
					when t1.doc_gb='06' then (select TO_CHAR(tb1.apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_master tb1,  $SCHEMA$.EZ_doc_06 tb2 where tb1.doc_cd=tb2.doc_cd and tb1.doc_cd=t1.doc_cd)
					when t1.doc_gb='07' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
					when t1.doc_gb='08' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
					when t1.doc_gb='09' then (select TO_CHAR(apply_date, 'YYYYMMDD') from $SCHEMA$.ez_doc_master where doc_cd=t1.doc_cd)
			 		else '' end) AS search_apply_date
			
	]]>
		<include refid="mainDocInfoListInc2" />
		order by DOC_CD desc
		
			)TTT
		) tb1
		<isNotEmpty property="startRowNum">
			WHERE row_num between #startRowNum# and #endRowNum#
		</isNotEmpty>
		
		<isNotEmpty property="order">
			<!-- ORDER BY DECODE(DOC_CD, #doc_cd#, 0) -->
			ORDER BY (CASE WHEN doc_cd = #doc_cd# THEN 0 END)
		</isNotEmpty>
		
		
	</select>
	
	<select id="approvalLineInfoList" resultClass="DocInfoBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalLineInfoList */
		SELECT $SCHEMA$.COMMA(distinct tb2.user_nm) AS line_user_nm1,
		       $SCHEMA$.COMMA(distinct tb3.user_nm) AS line_user_nm2,
		       $SCHEMA$.COMMA(distinct tb4.user_nm) AS line_user_nm3
		  FROM (
		        SELECT ( CASE WHEN seq = 1 THEN user_cd ELSE 0 END ) AS line_1,
		               ( CASE WHEN seq = 2 THEN user_cd ELSE 0 END ) AS line_2,
		               ( CASE WHEN seq = 3 THEN user_cd ELSE 0 END ) AS line_3
		          FROM $SCHEMA$.ez_approval_line ) tb1 LEFT OUTER JOIN $SCHEMA$.EZ_USER tb2 ON tb1.line_1 = tb2.user_cd
                                                   LEFT OUTER JOIN $SCHEMA$.EZ_USER tb3 ON tb1.line_2 = tb3.user_cd
                                                   LEFT OUTER JOIN $SCHEMA$.EZ_USER tb4 ON tb1.line_3 = tb4.user_cd
	</select>
	
	<select id="chkSchedTableCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkSchedTableCnt */
		SELECT COUNT(*) AS total_count
		  FROM DEF_TABLES tb1, DEF_JOB tb2
 		 WHERE tb1.table_id 	= tb2.table_id
		   AND tb1.data_center 	= #data_center#
		   AND tb1.sched_table 	= #table_name#
		   AND tb2.application 	= #application#
		   AND tb2.group_name 	= #group_name#
		   
	</select>
	
	
	
	<sql id="activeJobHistoryListInc">
	/* ORACLE_T > activeJobHistoryListInc */
	
		<isNotEmpty property="s_odate">
			AND tb2.odate >= REPLACE(SUBSTR(#s_odate#, 3, 8), '/', '')
		</isNotEmpty>
		<isNotEmpty property="e_odate">
			AND tb2.odate <![CDATA[ <= ]]> REPLACE(SUBSTR(#e_odate#, 3, 8), '/', '')
		</isNotEmpty>	
		
	</sql>
	
	<select id="activeJobHistoryListCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > activeJobHistoryListCnt */
		select count(*) as total_count from( 
			select * from(
				SELECT tb2.odate, tb1.status_cd, tb1.order_id, tb1.job_name, tb1.before_status, 
				       tb1.after_status, tb1.ins_date, tb1.ins_user_cd
				  FROM $SCHEMA$.EZ_STATUS_LOG tb1, $active_net_name$JOB tb2
				 WHERE tb1.order_id = tb2.order_id
				   AND tb1.job_name = tb2.job_name
				   
				 <include refid="activeJobHistoryListInc" />
				
				UNION ALL
				
				SELECT tb2.odate, tb1.status_cd, tb1.order_id, tb1.job_name, tb1.before_status, 
				       tb1.after_status, tb1.ins_date, tb1.ins_user_cd
				  FROM $SCHEMA$.EZ_STATUS_LOG tb1, $SCHEMA$.EZ_HISTORY_$data_center_code$ tb2
				 WHERE tb1.order_id = tb2.order_id
				   AND tb1.job_name = tb2.job_name
				   
				 <include refid="activeJobHistoryListInc" />
				   
				    )		
				)
	</select>
	
	<select id="activeJobHistoryList" resultClass="tActiveJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > activeJobHistoryList */
		SELECT * FROM(
			SELECT rownum as row_num, TTT.* FROM(
  			
  			select * from(
				SELECT tb2.odate, tb1.status_cd, tb1.order_id, tb1.job_name, 
					   tb1.before_status, tb1.after_status, 
					   to_char(tb1.ins_date,'YYYY/MM/DD HH24:MI:SS') ins_date,
					   ( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.ins_user_cd ) as ins_user_nm
				  FROM $SCHEMA$.EZ_STATUS_LOG tb1, $active_net_name$JOB tb2
				 WHERE tb1.order_id = tb2.order_id
				   AND tb1.job_name = tb2.job_name
				   
				 <include refid="activeJobHistoryListInc" />
				
				UNION ALL
				
				SELECT tb2.odate, tb1.status_cd, tb1.order_id, tb1.job_name, 
					   tb1.before_status, tb1.after_status, 
					   to_char(tb1.ins_date,'YYYY/MM/DD HH24:MI:SS') ins_date,
					   ( SELECT user_nm FROM $SCHEMA$.EZ_USER WHERE user_cd = tb1.ins_user_cd ) as ins_user_nm
				  FROM $SCHEMA$.EZ_STATUS_LOG tb1, $SCHEMA$.EZ_HISTORY_$data_center_code$ tb2
				 WHERE tb1.order_id = tb2.order_id
				   AND tb1.job_name = tb2.job_name
				   
				 <include refid="activeJobHistoryListInc" />
				 
				  )
		
			 	ORDER BY status_cd DESC
		
			)TTT
		) tb1
		<isNotEmpty property="startRowNum">
			WHERE row_num between #startRowNum# and #endRowNum#
		</isNotEmpty>
		
	</select>
	
	<select id="qrList" resultClass="tDefJobBean" parameterClass="java.util.Map">
	/* ORACLE_T > qrList */
		SELECT qresname, qtype, qrtotal, rsrvno, qrused
  		  FROM CTMSVRT.CMR_QRTAB
	</select>
	
	<select id="orderJobCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > orderJobCnt */
		SELECT count(*) as total_count
		from (
			SELECT job_name
			  FROM $active_net_name$JOB
			 WHERE job_name = #job_name#
			   AND odate = SUBSTR(#order_date#, 3, 6)			   			
			) t
	</select>
	
	<select id="chkDoc01JobCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkDoc01JobCnt */
		SELECT count(*) as total_count
		from (
		SELECT t2.job_name
				from $SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_DOC_01 t2
				where 1=1
				and t1.del_yn = 'N'
				and t1.doc_cd = t2.doc_cd
				and (t1.state_cd = '00' or t1.state_cd = '01')
				and t2.data_center = #data_center#
				and t2.job_name = #job_name#				
		
			) t
	</select>
	
	<select id="chkApprovalDocDelCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkApprovalDocDelCnt */
		SELECT count(*) as total_count
		from (
		SELECT t2.job_name
				from $SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_DOC_03 t2
				where 1=1
				and t1.del_yn = 'N'
				and t1.doc_cd = t2.doc_cd
				
				and (t1.state_cd = '01')
				and t2.data_center = #data_center#
				and t2.job_name = #job_name#
				
			UNION ALL
			
		SELECT t2.job_name
				from $SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_DOC_04 t2
				where 1=1
				and t1.del_yn = 'N'
				and t1.doc_cd = t2.doc_cd
				
				and (t1.state_cd = '01')
				and t2.data_center = #data_center#
				and t2.job_name = #job_name#
		
			) t
	</select>

	<select id="scodeDesc" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > scodeDesc */	
		select SCODE_DESC from $SCHEMA$.ez_scode
		where SCODE_NM = #batchjobGrade#	
	</select>

	<select id="excelBatchDelTable" parameterClass="java.util.Map" resultClass="CommonBean">
	/* ORACLE_T > excelBatchDelTable */
		select sched_table, application, group_name
		from DEF_JOB t1, DEF_TABLES t2
		where t1.table_id = t2.table_id
		and job_name 	= #job_name#
	</select>
	
	<select id="excelBatchList" parameterClass="java.util.Map" resultClass="Doc06Bean">
	/* ORACLE_T > excelBatchList */
		 SELECT
		 	AA.DATA_CENTER, AA.ACT_GB, AA.DOC_CD, AA.SEQ, AA.TABLE_NAME, AA.APPLICATION, AA.GROUP_NAME, AA.MEM_NAME,
			AA.JOB_NAME, AA.DESCRIPTION, AA.AUTHOR, AA.OWNER, AA.PRIORITY, AA.CRITICAL, AA.TASK_TYPE, AA.CYCLIC, AA.NODE_ID,
			AA.RERUN_INTERVAL, AA.RERUN_INTERVAL_TIME, AA.MEM_LIB, AA.COMMAND, AA.CONFIRM_FLAG, AA.DAYS_CAL, AA.WEEKS_CAL,
			AA.RETRO, AA.MAX_WAIT, AA.RERUN_MAX, AA.TIME_FROM, AA.TIME_UNTIL, AA.MONTH_DAYS, AA.WEEK_DAYS, AA.MONTH_1,
			AA.MONTH_2, AA.MONTH_3, AA.MONTH_4, AA.MONTH_5, AA.MONTH_6, AA.MONTH_7, AA.MONTH_8, AA.MONTH_9, AA.MONTH_10, AA.MONTH_11,
			AA.MONTH_12, AA.COUNT_CYCLIC_FROM, AA.TIME_ZONE, AA.MULTIAGENT,
			(SELECT user_daily FROM $SCHEMA$.EZ_APP_GRP_CODE WHERE grp_depth = '1' AND grp_eng_nm = (select GRP_ENG_NM from $SCHEMA$.ez_app_grp_code where grp_eng_nm = AA.table_name and grp_depth = 1 AND scode_cd = ( CASE WHEN INSTR(aa.data_center, ',') > 0 
																										   THEN SUBSTR(aa.data_center, 1, INSTR(aa.data_center, ',')-1)
																										  ELSE aa.data_center END )) AND scode_cd = ( CASE WHEN INSTR(aa.data_center, ',') > 0 
																										   THEN SUBSTR(aa.data_center, 1, INSTR(aa.data_center, ',')-1)
																										  ELSE aa.data_center END )) AS user_daily,
			AA.SCHEDULE_AND_OR, AA.IN_CONDITIONS_OPT, 
			AA.T_GENERAL_DATE, AA.T_CONDITIONS_IN, AA.T_CONDITIONS_OUT, AA.T_RESOURCES_Q, AA.T_RESOURCES_C, AA.T_SET, AA.T_STEPS,
			AA.T_POSTPROC, AA.T_SFILE, AA.CONF_CAL, AA.SHIFT, AA.SHIFT_NUM, AA.T_TAG_NAME, AA.INTERVAL_SEQUENCE, AA.SPECIFIC_TIMES,
			AA.TOLERANCE, AA.CYCLIC_TYPE, AA.ACTIVE_FROM, AA.ACTIVE_TILL, AA.DATES_STR, AA.IND_CYCLIC			
			,( SELECT COUNT(*) FROM DEF_TABLES WHERE sched_table = ( CASE WHEN INSTR(AA.TABLE_NAME, '/') > 0 THEN SUBSTR(AA.TABLE_NAME, 1, INSTR(AA.TABLE_NAME, '/') - 1) ELSE AA.TABLE_NAME END )
											   AND data_center = ( CASE WHEN INSTR(AA.DATA_CENTER, ',') > 0 THEN SUBSTR(AA.DATA_CENTER, INSTR(AA.DATA_CENTER, ',')+1, LENGTH(AA.DATA_CENTER)) ELSE AA.DATA_CENTER END ) ) AS table_cnt
			,( SELECT table_type FROM DEF_TABLES WHERE sched_table = ( CASE WHEN INSTR(AA.TABLE_NAME, '/') > 0 THEN SUBSTR(AA.TABLE_NAME, 1, INSTR(AA.TABLE_NAME, '/') - 1) ELSE AA.TABLE_NAME END )
												 AND data_center = ( CASE WHEN INSTR(AA.DATA_CENTER, ',') > 0 THEN SUBSTR(AA.DATA_CENTER, INSTR(AA.DATA_CENTER, ',')+1, LENGTH(AA.DATA_CENTER)) ELSE AA.DATA_CENTER END ) ) AS table_type
			, ( CASE WHEN INSTR(AA.data_center, ',') > 0 
					  THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(AA.data_center, 1, INSTR(AA.data_center, ',')-1)) 
					 ELSE AA.data_center END ) AS data_center_name
		 FROM(
			 SELECT
			 	A.DATA_CENTER, A.ACT_GB, B.DOC_CD, B.SEQ, B.TABLE_NAME AS TABLE_NAME, B.APPLICATION, B.GROUP_NAME, B.MEM_NAME,
			 	B.JOB_NAME, B.DESCRIPTION, B.AUTHOR, B.OWNER, B.PRIORITY, B.CRITICAL, B.TASK_TYPE, B.CYCLIC, B.NODE_ID,
			 	B.RERUN_INTERVAL, B.RERUN_INTERVAL_TIME, B.MEM_LIB, B.COMMAND, B.CONFIRM_FLAG, B.DAYS_CAL, B.WEEKS_CAL,
			 	B.RETRO, B.MAX_WAIT, B.RERUN_MAX, B.TIME_FROM, B.TIME_UNTIL, B.MONTH_DAYS, B.WEEK_DAYS, B.MONTH_1,
			 	B.MONTH_2, B.MONTH_3, B.MONTH_4, B.MONTH_5, B.MONTH_6, B.MONTH_7, B.MONTH_8, B.MONTH_9, B.MONTH_10, B.MONTH_11,
			 	B.MONTH_12, B.COUNT_CYCLIC_FROM, B.TIME_ZONE, B.MULTIAGENT, B.USER_DAILY, B.SCHEDULE_AND_OR, B.IN_CONDITIONS_OPT, 
			 	B.T_GENERAL_DATE, B.T_CONDITIONS_IN, B.T_CONDITIONS_OUT, B.T_RESOURCES_Q, B.T_RESOURCES_C, B.T_SET, B.T_STEPS,
			 	B.T_POSTPROC, B.T_SFILE, B.CONF_CAL, B.SHIFT, B.SHIFT_NUM, B.T_TAG_NAME, B.INTERVAL_SEQUENCE, B.SPECIFIC_TIMES,
			 	B.TOLERANCE, B.CYCLIC_TYPE, B.ACTIVE_FROM, B.ACTIVE_TILL, B.DATES_STR, B.IND_CYCLIC
			 FROM
			 	$SCHEMA$.EZ_DOC_06 A,
			 	$SCHEMA$.EZ_DOC_06_DETAIL B,
			 	$SCHEMA$.EZ_DOC_MASTER C
			 WHERE
			 	<isNotEmpty property="flag">
				 	A.DOC_CD = B.DOC_CD		
				 	AND A.DOC_CD = C.DOC_CD
				 	AND A.DATA_CENTER = #data_center#
				 	AND C.APPLY_CD = '02'
				 	AND (B.APPLY_CHECK IS NULL OR B.APPLY_CHECK != 'Y')
				 	
				 	<isEqual property="flag" compareValue="C">	 				 	
					 	AND A.ACT_GB IN ('C')
					 	<!-- AND (B.APPLY_CHECK IS NULL) -->
				 	</isEqual>
				 	<isEqual property="flag" compareValue="D">	 				 	
					 	AND A.ACT_GB IN ('D')
					 	<!-- AND B.APPLY_CHECK IS NULL -->
				 	</isEqual>				 	
				 	<isEqual property="flag" compareValue="U">	 				 	
					 	AND A.ACT_GB IN ('U')
					 	<!-- AND B.APPLY_CHECK IS NULL -->
				 	</isEqual>
			 	</isNotEmpty>
			 	
		) AA 
		WHERE AA.TABLE_NAME = #table_name#
		
		ORDER BY AA.TABLE_NAME ASC
	</select>
	
	
	<select id="excelBatchVeriList" parameterClass="java.util.Map" resultClass="Doc06Bean">
	/* ORACLE_T > excelBatchVeriList */
		 SELECT
		 	AA.DATA_CENTER, AA.ACT_GB, AA.DOC_CD, AA.SEQ, AA.TABLE_NAME, AA.APPLICATION, AA.GROUP_NAME, AA.MEM_NAME,
			AA.JOB_NAME, AA.DESCRIPTION, AA.AUTHOR, AA.OWNER, AA.PRIORITY, AA.CRITICAL, AA.TASK_TYPE, AA.CYCLIC, AA.NODE_ID,
			AA.RERUN_INTERVAL, AA.RERUN_INTERVAL_TIME, AA.MEM_LIB, AA.COMMAND, AA.CONFIRM_FLAG, AA.DAYS_CAL, AA.WEEKS_CAL,
			AA.RETRO, AA.MAX_WAIT, AA.RERUN_MAX, AA.TIME_FROM, AA.TIME_UNTIL, AA.MONTH_DAYS, AA.WEEK_DAYS, AA.MONTH_1,
			AA.MONTH_2, AA.MONTH_3, AA.MONTH_4, AA.MONTH_5, AA.MONTH_6, AA.MONTH_7, AA.MONTH_8, AA.MONTH_9, AA.MONTH_10, AA.MONTH_11,
			AA.MONTH_12, AA.COUNT_CYCLIC_FROM, AA.TIME_ZONE, AA.MULTIAGENT,
			(SELECT user_daily FROM $SCHEMA$.EZ_APP_GRP_CODE WHERE grp_depth = '1' AND grp_eng_nm = (select GRP_ENG_NM from $SCHEMA$.ez_app_grp_code where grp_eng_nm = AA.table_name and grp_depth = 1 AND scode_cd = ( CASE WHEN INSTR(aa.data_center, ',') > 0 
																										   THEN SUBSTR(aa.data_center, 1, INSTR(aa.data_center, ',')-1)
																										  ELSE aa.data_center END )) AND scode_cd = ( CASE WHEN INSTR(aa.data_center, ',') > 0 
																										   THEN SUBSTR(aa.data_center, 1, INSTR(aa.data_center, ',')-1)
																										  ELSE aa.data_center END )) AS user_daily,
			AA.SCHEDULE_AND_OR, AA.IN_CONDITIONS_OPT, 
			AA.T_GENERAL_DATE, AA.T_CONDITIONS_IN, AA.T_CONDITIONS_OUT, AA.T_RESOURCES_Q, AA.T_RESOURCES_C, AA.T_SET, AA.T_STEPS,
			AA.T_POSTPROC, AA.T_SFILE, AA.CONF_CAL, AA.SHIFT, AA.SHIFT_NUM, AA.T_TAG_NAME, AA.INTERVAL_SEQUENCE, AA.SPECIFIC_TIMES,
			AA.TOLERANCE, AA.CYCLIC_TYPE, AA.ACTIVE_FROM, AA.ACTIVE_TILL, AA.DATES_STR, AA.IND_CYCLIC			
			,( SELECT COUNT(*) FROM DEF_TABLES WHERE sched_table = ( CASE WHEN INSTR(AA.TABLE_NAME, '/') > 0 THEN SUBSTR(AA.TABLE_NAME, 1, INSTR(AA.TABLE_NAME, '/') - 1) ELSE AA.TABLE_NAME END )
											   AND data_center = ( CASE WHEN INSTR(AA.DATA_CENTER, ',') > 0 THEN SUBSTR(AA.DATA_CENTER, INSTR(AA.DATA_CENTER, ',')+1, LENGTH(AA.DATA_CENTER)) ELSE AA.DATA_CENTER END ) ) AS table_cnt
			,( SELECT table_type FROM DEF_TABLES WHERE sched_table = ( CASE WHEN INSTR(AA.TABLE_NAME, '/') > 0 THEN SUBSTR(AA.TABLE_NAME, 1, INSTR(AA.TABLE_NAME, '/') - 1) ELSE AA.TABLE_NAME END )
												 AND data_center = ( CASE WHEN INSTR(AA.DATA_CENTER, ',') > 0 THEN SUBSTR(AA.DATA_CENTER, INSTR(AA.DATA_CENTER, ',')+1, LENGTH(AA.DATA_CENTER)) ELSE AA.DATA_CENTER END ) ) AS table_type
			, ( CASE WHEN INSTR(AA.data_center, ',') > 0 
					  THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(AA.data_center, 1, INSTR(AA.data_center, ',')-1)) 
					 ELSE AA.data_center END ) AS data_center_name
		 FROM(
			 SELECT
			 	A.DATA_CENTER, A.ACT_GB, B.DOC_CD, B.SEQ, B.TABLE_NAME AS TABLE_NAME, B.APPLICATION, B.GROUP_NAME, B.MEM_NAME,
			 	B.JOB_NAME, B.DESCRIPTION, B.AUTHOR, B.OWNER, B.PRIORITY, B.CRITICAL, B.TASK_TYPE, B.CYCLIC, B.NODE_ID,
			 	B.RERUN_INTERVAL, B.RERUN_INTERVAL_TIME, B.MEM_LIB, B.COMMAND, B.CONFIRM_FLAG, B.DAYS_CAL, B.WEEKS_CAL,
			 	B.RETRO, B.MAX_WAIT, B.RERUN_MAX, B.TIME_FROM, B.TIME_UNTIL, B.MONTH_DAYS, B.WEEK_DAYS, B.MONTH_1,
			 	B.MONTH_2, B.MONTH_3, B.MONTH_4, B.MONTH_5, B.MONTH_6, B.MONTH_7, B.MONTH_8, B.MONTH_9, B.MONTH_10, B.MONTH_11,
			 	B.MONTH_12, B.COUNT_CYCLIC_FROM, B.TIME_ZONE, B.MULTIAGENT, B.USER_DAILY, B.SCHEDULE_AND_OR, B.IN_CONDITIONS_OPT, 
			 	B.T_GENERAL_DATE, B.T_CONDITIONS_IN, B.T_CONDITIONS_OUT, B.T_RESOURCES_Q, B.T_RESOURCES_C, B.T_SET, B.T_STEPS,
			 	B.T_POSTPROC, B.T_SFILE, B.CONF_CAL, B.SHIFT, B.SHIFT_NUM, B.T_TAG_NAME, B.INTERVAL_SEQUENCE, B.SPECIFIC_TIMES,
			 	B.TOLERANCE, B.CYCLIC_TYPE, B.ACTIVE_FROM, B.ACTIVE_TILL, B.DATES_STR, B.IND_CYCLIC
			 FROM
			 	$SCHEMA$.EZ_DOC_06 A,
			 	$SCHEMA$.EZ_DOC_06_DETAIL B,
			 	$SCHEMA$.EZ_DOC_MASTER C
			 WHERE
			 	<isNotEmpty property="flag">
				 	A.DOC_CD = B.DOC_CD		
				 	AND A.DOC_CD = C.DOC_CD
				 	AND A.DATA_CENTER = #data_center#
				 	AND C.APPLY_CD = '02'
				 	AND (B.APPLY_CHECK IS NULL OR B.APPLY_CHECK != 'Y')
				 	
				 	<isEqual property="flag" compareValue="C">	 				 	
					 	AND A.ACT_GB IN ('C')
					 	<!-- AND (B.APPLY_CHECK IS NULL) -->
				 	</isEqual>
				 	<isEqual property="flag" compareValue="D">	 				 	
					 	AND A.ACT_GB IN ('D')
					 	<!-- AND B.APPLY_CHECK IS NULL -->
				 	</isEqual>				 	
				 	<isEqual property="flag" compareValue="U">	 				 	
					 	AND A.ACT_GB IN ('U')
					 	<!-- AND B.APPLY_CHECK IS NULL -->
				 	</isEqual>
			 	</isNotEmpty>
			 	
		) AA 
		WHERE AA.TABLE_NAME = #table_name#
		
		ORDER BY AA.JOB_NAME ASC
	</select>	
	
	<select id="excelBatchExcuteGroup" parameterClass="java.util.Map" resultClass="Doc06Bean">
	/* ORACLE_T > excelBatchExcuteGroup */
		 SELECT
		 	DATA_CENTER, TABLE_NAME, ACT_GB
		 FROM(
		  SELECT
		  	A.DATA_CENTER, B.TABLE_NAME, A.ACT_GB
		  FROM
		  	$SCHEMA$.EZ_DOC_06 A,
		  	$SCHEMA$.EZ_DOC_06_DETAIL B,
		  	$SCHEMA$.EZ_DOC_MASTER C
		  WHERE
		  	A.DOC_CD = B.DOC_CD
		  	AND A.DOC_CD = C.DOC_CD
		<!--AND c.APPLY_CD = '02'
        AND A.ACT_GB IN ('C','U','D')-->
		  	AND (B.APPLY_CHECK IS NULL OR B.APPLY_CHECK != 'Y') 

		  	<!-- 재반영시킨 작업만 돌리기 위해(반영대기로 변경시 해당 주석 사용) -->
		  	<!-- AND (B.APPLY_CHECK IS NULL) -->
		  	
		  	<isNotEmpty property="doc_cd">
		    AND a.doc_cd = #doc_cd#
		  	</isNotEmpty>
		  	
		  	<isNotEmpty property="main_doc_cd">
		    AND a.doc_cd = #main_doc_cd#
		  	</isNotEmpty>
		  	
		 ) t1 GROUP BY DATA_CENTER, TABLE_NAME, ACT_GB
		 ORDER BY DATA_CENTER ASC, TABLE_NAME ASC
	</select>
	<select id="excelVerifyBatchExcuteGroup" parameterClass="java.util.Map" resultClass="Doc06Bean">
	/* ORACLE_T > excelVerifyBatchExcuteGroup */
		 SELECT
		 	DATA_CENTER, TABLE_NAME, ACT_GB
		 FROM(
		  SELECT
		  	A.DATA_CENTER, B.TABLE_NAME, A.ACT_GB
		  FROM
		  	$SCHEMA$.EZ_DOC_06 A,
		  	$SCHEMA$.EZ_DOC_06_DETAIL B
		  WHERE
		  	A.DOC_CD = B.DOC_CD
		  	<!-- AND A.ACT_GB IN ('C','U','D')-->
		  	AND (B.APPLY_CHECK IS NULL OR B.APPLY_CHECK != 'Y') 

		  	<!-- 재반영시킨 작업만 돌리기 위해(반영대기로 변경시 해당 주석 사용) -->
		  	<!-- AND (B.APPLY_CHECK IS NULL) -->
		  	
		  	<isNotEmpty property="doc_cd">
		    AND a.doc_cd = #doc_cd#
		  	</isNotEmpty>
		  	
		  	<isNotEmpty property="main_doc_cd">
		    AND a.doc_cd = #main_doc_cd#
		  	</isNotEmpty>
		  	
		 ) t1 GROUP BY DATA_CENTER, TABLE_NAME, ACT_GB
		 ORDER BY DATA_CENTER ASC, TABLE_NAME ASC
	</select>
	<update id="excelBatchApplyUpdate" parameterClass="java.util.Map">
	/* ORACLE_T > excelBatchApplyUpdate */
		UPDATE $SCHEMA$.EZ_DOC_06_DETAIL SET 
			APPLY_CHECK = #apply_check#
			,APPLY_DATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			<isNotEmpty property="r_msg">
				,R_MSG = #r_msg#
			</isNotEmpty>
		WHERE
			DOC_CD = #doc_cd#
			AND SEQ = #seq#	 
	</update>
	
	<update id="excelBatchErrMsgUpdate" parameterClass="java.util.Map">
	/* ORACLE_T > excelBatchErrMsgUpdate */
		UPDATE $SCHEMA$.EZ_DOC_06_DETAIL SET 
			r_msg = #r_msg#
			,APPLY_CHECK = 'E'
			
		WHERE
			DOC_CD = #doc_cd#
			AND SEQ = #seq#		 
	</update>
	
	
	<select id="doc02_tmp" resultClass="Doc02Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc02_tmp */
			select 
			t1.doc_cd
			,t1.doc_gb
			,t1.user_cd
			,t3.user_id
			,t3.user_nm
			,case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end as dept_nm
			,case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end as duty_nm
			,t1.cur_approval_seq
			,t1.state_cd
			,to_char(t1.draft_date,'YYYY/MM/DD HH24:MI:SS') as draft_date
			,t2.title
			,t2.content
			,t2.file_nm
			,t2.act_gb
			,t2.data_center
			,t2.application
			,t2.group_name
			
			
			, ( SELECT SUBSTR(scode_nm, 5, LENGTH(scode_nm)) FROM $SCHEMA$.EZ_SCODE WHERE SUBSTR(scode_nm, 1, 3) = ( SELECT code FROM COMM WHERE data_center = t2.data_center ) ) AS data_center_name
			, t2.table_name, t2.apply_date, t1.apply_cd, t1.cancel_comment, t1.fail_comment, t2.apply_check
		from $SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_doc_02 t2, $SCHEMA$.EZ_USER t3 
		where 1=1
		and t1.del_yn = 'N'
		and t1.user_cd = t3.user_cd
		and t1.doc_cd = t2.doc_cd
		and t1.doc_cd = #doc_cd#
	</select>
	
	
	<select id="doc02List" resultClass="Doc02Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc02List */
		SELECT 		
			t1.DOC_CD, t1.TABLE_NAME, t1.APPLICATION, t1.GROUP_NAME, t1.JOB_NAME, t1.DESCRIPTION, t1.MEM_NAME, t1.MEM_LIB 		
			, t1.OWNER, t1.TASK_TYPE, t1.NODE_ID, t1.PRIORITY, t1.CRITICAL, t1.CYCLIC, t1.RERUN_INTERVAL 
			,t1.RERUN_MAX, t1.COUNT_CYCLIC_FROM, t1.COMMAND, t1.CONFIRM_FLAG, t1.MAX_WAIT, t1.TIME_FROM 					
			,t1.TIME_UNTIL, t1.T_CONDITIONS_IN, t1.T_CONDITIONS_OUT, t1.T_RESOURCES_C, t1.T_SET, t1.T_STEPS 		
			,T_POSTPROC, T2.LATE_SUB, T2.LATE_TIME, T2.LATE_EXEC, T2.SRNO
			,T2.CHARGEPMNM, T2.PROJECTMANMONTH, T2.PROJECTNM, T2.SRNONATTACHEDREASON, T2.USER_IMPECT_YN   	   
			,T2.USER_CD_1, T2.USER_CD_2, T2.USER_CD_3, T2.USER_CD_4, T2.SUSITYPE, t1.T_GENERAL_DATE, T1.DATA_CENTER
			,T2.ATTACH_FILE
			,(SELECT USER_NM FROM $SCHEMA$.EZ_USER WHERE USER_CD = T2.USER_CD_1) AS USER_NM
			,(SELECT USER_NM FROM $SCHEMA$.EZ_USER WHERE USER_CD = T2.USER_CD_2) AS USER_NM2
			,(SELECT USER_NM FROM $SCHEMA$.EZ_USER WHERE USER_CD = T2.USER_CD_3) AS USER_NM3
			,(SELECT USER_NM FROM $SCHEMA$.EZ_USER WHERE USER_CD = T2.USER_CD_4) AS USER_NM4
			<!-- ,T2.JOBTYPEGB AS BATCHJOBGRADE, -->
			,T2.BATCHJOBGRADE AS BATCHJOBGRADE, 
			T2.ARGUMENT, t1.status, t1.s_apply_date, t1.apply_cd, t1.apply_date, t1.fail_comment			
			,(select status from $active_net_name$JOB where order_id = t1.order_id) AS ajob_status
			, ( CASE WHEN INSTR(t2.data_center, ',') > 0 
                      THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(t2.data_center, 1, INSTR(t2.data_center, ',')-1))
                     ELSE t2.data_center END ) AS data_center_name
            , ( SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_eng_nm = T2.SUSITYPE AND mcode_cd = 'M33' ) AS susitype_nm
		FROM 
			$SCHEMA$.EZ_DOC_02 T1 LEFT OUTER JOIN $SCHEMA$.EZ_JOB_MAPPER_DOC T2
			ON T1.JOB_NAME = T2.JOB AND t1.doc_cd = t2.doc_cd
		WHERE 1 = 1
			AND t1.DOC_CD = #doc_cd#
			
			<!-- EzSusiApiCallJobServiceImpl에서 수행할 경우 이미 반영 된 건 제외 -->
			<isEqual property="gubun" compareValue="susi_api_batch">
				AND t1.apply_cd = '01'
			</isEqual>
			
		ORDER BY T1.SEQ ASC
	</select>
	
	<select id="doc02List2" resultClass="Doc02Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc02List2 */
		SELECT 
			DOC_CD, DATA_CENTER, TITLE, JOB_CNT, DEPT_NM, DUTY_NM, USER_NM, DOC_GB, STATE_NM,
			TO_CHAR(TO_DATE(DRAFT_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') AS DRAFT_DATE,
			TO_CHAR(TO_DATE(APPROVAL_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') AS APPROVAL_DATE,
			( CASE WHEN INSTR(data_center, ',') > 0 
				   THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(data_center, 1, INSTR(data_center, ',')-1)) 
				   ELSE data_center END ) AS data_center_name
		FROM(
			SELECT
				A.DOC_CD, B.DATA_CENTER, B.TITLE, (SELECT COUNT(*) FROM $SCHEMA$.EZ_DOC_02 WHERE doc_cd = A.doc_cd) AS JOB_CNT,
				A.DEPT_NM, A.DUTY_NM, D.USER_NM, '수시' AS DOC_GB,
				(CASE WHEN A.STATE_CD = '02' THEN '반영완료'
					WHEN A.STATE_CD = '04' THEN '결재반려' ELSE '' END) AS STATE_NM,
				TO_CHAR(A.DRAFT_DATE,'YYYYMMDDHH24MISS') AS DRAFT_DATE, 
				TO_CHAR(C.APPROVAL_DATE,'YYYYMMDDHH24MISS') APPROVAL_DATE
			FROM
				$SCHEMA$.EZ_DOC_MASTER A,
				$SCHEMA$.EZ_DOC_02 B,
				$SCHEMA$.EZ_APPROVAL_DOC C,
				$SCHEMA$.EZ_USER D
				
				<isNotEmpty property="s_text">					
					<isEqual property="s_gb" compareValue="02">
						, ( SELECT DOC_CD FROM $SCHEMA$.EZ_DOC_02 WHERE JOB_NAME LIKE '%'||#s_text#||'%' GROUP BY DOC_CD ) E
					</isEqual>
				</isNotEmpty>				
				
			WHERE
				A.DOC_CD = B.DOC_CD
				AND A.DOC_CD = C.DOC_CD
				AND A.USER_CD = D.USER_CD
				AND A.DOC_GB = '02'
				AND A.STATE_CD IN ('02','04')
				AND B.SEQ = 1
				AND C.SEQ = 1
				AND B.DATA_CENTER = #data_center#
				AND B.APPLICATION = #application_of_def#
				AND B.GROUP_NAME = #group_name_of_def#
				
				<isNotEmpty property="s_text" prepend="AND">					
					<isEqual property="s_gb" compareValue="02">
						A.DOC_CD = E.DOC_CD
					</isEqual>
				</isNotEmpty>
				
		) AA
		WHERE 1=1			
			<isNotEmpty property="s_search_date">
				<isNotEmpty property="e_search_date">
					<isEqual property="date_gubun" compareValue="01">
						and AA.DRAFT_DATE BETWEEN #s_search_date#||'000000' AND #e_search_date#||'999999'
					</isEqual>
					<isEqual property="date_gubun" compareValue="02">
						and AA.APPROVAL_DATE BETWEEN #s_search_date#||'000000' AND #e_search_date#||'999999'
					</isEqual>
				</isNotEmpty>
				<isEmpty property="e_search_date">
					<isEqual property="date_gubun" compareValue="01">
						and AA.DRAFT_DATE <![CDATA[ >= ]]> #s_search_date#||'000000'
					</isEqual>
					<isEqual property="date_gubun" compareValue="02">
						and AA.APPROVAL_DATE <![CDATA[ >= ]]> #s_search_date#||'000000'
					</isEqual>
				</isEmpty>
			</isNotEmpty>
			
			<isEmpty property="s_search_date">
				<isNotEmpty property="e_search_date">
					<isEqual property="date_gubun" compareValue="01">
						and AA.DRAFT_DATE <![CDATA[ <= ]]> #e_search_date#||'999999'
					</isEqual>
					<isEqual property="date_gubun" compareValue="02">
						and AA.APPROVAL_DATE <![CDATA[ <= ]]> #e_search_date#||'999999'
					</isEqual>
				</isNotEmpty>
				<isEmpty property="e_search_date" prepend="AND">
					AA.DRAFT_DATE BETWEEN to_char(now()-7, 'YYYYMMDD')||'000000' AND to_char(now(), 'YYYYMMDD')||'999999'
				</isEmpty>
			</isEmpty>
			
			<isNotEmpty property="s_text" prepend="AND">
				<isEqual property="s_gb" compareValue="01">
					AA.USER_NM = #s_text#
				</isEqual>				
			</isNotEmpty>
		ORDER BY AA.DRAFT_DATE DESC
	</select>
	<select id="doc02JobList2" parameterClass="java.util.Map" resultClass="Doc02Bean">
	/* ORACLE_T > doc02JobList2 */
		SELECT
			A.DOC_CD, A.NODE_ID, A.OWNER, A.JOB_NAME, A.DESCRIPTION, A.MEM_LIB, A.MEM_NAME, A.ARGUMENT, A.COMMAND,
		    (CASE WHEN A.TIME_FROM IS NULL AND A.T_CONDITIONS_IN IS NULL THEN '즉시'
	              WHEN A.TIME_FROM IS NOT NULL THEN '예약'
	              WHEN A.TIME_FROM IS NULL AND A.T_CONDITIONS_IN IS NOT NULL THEN '후행'
	              WHEN A.CONFIRM_FLAG = '1' THEN '수동'
	              ELSE '' END) AS ACT_GB
		 	,A.TIME_FROM
		   	,A.T_CONDITIONS_IN
		   	,'N' AS USER_IMPECT_YN
		    ,A.T_CONDITIONS_OUT
		    ,B.JOBTYPEGB AS BATCHJOBGRADE
		FROM
			$SCHEMA$.EZ_DOC_02 A LEFT OUTER JOIN $SCHEMA$.EZ_JOB_MAPPER_DOC B
			ON A.JOB_NAME = B.JOB AND A.doc_cd = B.doc_cd
			 
		WHERE
			A.DOC_CD = #doc_cd#
		ORDER BY seq ASC
	</select>
	
	<select id="chkDeptCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkDeptCnt */
		
		select dept_cd as team from $SCHEMA$.ez_user
		where user_id = #author#
			
	
	</select>
	
	<select id="chkDoc06JobCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkDoc06JobCnt */	
		select count(1) as total_count
		from $SCHEMA$.ez_doc_06_detail t1, $SCHEMA$.ez_doc_master t2, $SCHEMA$.ez_doc_06 t3
		where t1.doc_cd = t2.doc_Cd
			and t2.doc_cd = t3.doc_Cd
			and t1.doc_cd = t3.doc_Cd
			and (t2.state_cd = '00' or t2.state_cd = '01' or t2.state_cd = '02')
			and (t1.apply_check is null or t1.apply_check = 'R')
			and t2.del_yn = 'N'
			and t1.job_name = #job_name#
	</select>
	
	<update id="reRunDoc" parameterClass="java.util.Map">
	/* ORACLE_T > reRunDoc */
		UPDATE $SCHEMA$.EZ_DOC_06_DETAIL SET 
			r_msg = '재작업'
			,APPLY_CHECK = null
			,APPLY_DATE = null			
		WHERE
			DOC_CD = #doc_cd#
			AND SEQ = #seq#				 
	</update>
	
	
		<parameterMap id="spDoc07PrcMap" class="java.util.Map">
		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		
		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="title" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="content" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="order_id" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="odate" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="data_center" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="table_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="application" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="group_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="before_status" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="after_status" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_date"		 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="post_approval_time" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="post_approval_yn" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="description"		 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		
		<parameter property="main_doc_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="grp_approval_userList" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_alarm_userList" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		
	</parameterMap>
	<procedure id="spDoc07Prc" resultClass="java.util.List" parameterMap="spDoc07PrcMap">
		{ call $SCHEMA$.SP_EZ_DOC_07_PRC	( 	?, ?, ?, ?, ?, 
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?
							 			)
		}
	</procedure>
	
	<parameterMap id="spMyWorkPrcMap" class="java.util.Map">
		<parameter property="r_code" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		
		<parameter property="flag" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="work_cd" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="work_date" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="content" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		
		<parameter property="s_user_cd" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spMyWorkPrc" resultClass="java.util.List" parameterMap="spMyWorkPrcMap">
		{ call $SCHEMA$.SP_EZ_WORK_PRC	( 	?, ?, ?, ?, ?, 
											?, ?, ?
										) 
		}
	</procedure>

	<select id="insUserMail" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > insUserMail */
		SELECT tb1.user_cd, tb2.user_id, tb2.user_nm, tb2.user_email, tb2.user_hp
		FROM $SCHEMA$.ez_doc_master tb1, $SCHEMA$.ez_user tb2
		WHERE tb1.doc_cd = #doc_cd#
		<!-- 반영완료/반려에 대한 알림 메세지 전송  -->
		  AND (tb1.apply_cd != '' or tb1.state_cd = '04')
		  AND tb1.user_cd = tb2.user_cd
	</select>

	<select id="approvalUserMail" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalUserMail */
		SELECT 
			tb3.user_id AS approval_user_id
			,tb3.user_nm AS approval_user_nm
			,tb3.user_cd AS approval_user_cd
			,tb3.user_hp AS approval_user_hp
			,tb3.user_email AS approval_user_email
			,tb4.user_nm
			,tb4.user_id
			,tb1.dept_nm
			,tb1.user_cd
			,tb5.user_cd AS absence_user_cd
			,tb5.user_nm AS absence_user_nm
			,tb5.user_hp AS absence_user_hp
			,tb5.user_email AS absence_user_email
		  FROM $SCHEMA$.ez_approval_doc tb1, $SCHEMA$.ez_doc_master tb2, $SCHEMA$.ez_user tb4,
		  	   $SCHEMA$.ez_user tb3 LEFT OUTER JOIN $SCHEMA$.ez_user tb5 ON tb5.user_cd = (SELECT user_cd FROM $SCHEMA$.ez_user WHERE user_cd = tb3.absence_user_cd 
		   															AND to_char(tb3.absence_start_date, 'YYYYMMDD') <![CDATA[ <= ]]> to_char(sysdate, 'YYYYMMDD')  
																	AND to_char(tb3.absence_end_date, 'YYYYMMDD') <![CDATA[ >= ]]> to_char(sysdate, 'YYYYMMDD'))
		 WHERE tb1.doc_cd = #doc_cd#
		   AND tb1.doc_cd = tb2.doc_cd
		   AND tb2.state_cd = '01'
		   AND tb1.seq = tb2.cur_approval_seq
		   AND tb1.user_cd = tb3.user_cd
		   AND tb1.ins_user_cd = tb4.user_cd
	</select>
	
	<select id="approvalAdminGroupMailList" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalAdminGroupMailList */	
		SELECT 
			tb2.user_nm AS approval_user_nm
			,tb2.user_id AS approval_user_id
			,tb2.user_cd AS approval_user_cd
			,tb2.user_hp AS approval_user_hp
			,tb2.user_email
			,tb3.user_cd AS absence_user_cd
			,tb3.user_nm AS absence_user_nm
			,tb3.user_hp AS absence_user_hp
			,tb3.user_email AS absence_user_email
		  FROM $SCHEMA$.EZ_GROUP_APPROVAL_LINE tb1, $SCHEMA$.EZ_USER tb2
  					LEFT OUTER JOIN $SCHEMA$.ez_user tb3 ON tb3.user_cd = (SELECT user_cd FROM $SCHEMA$.ez_user WHERE user_cd = tb2.absence_user_cd 
															AND to_char(tb2.absence_start_date, 'YYYYMMDD')  <![CDATA[ <= ]]>  to_char(sysdate, 'YYYYMMDD')  
															AND to_char(tb2.absence_end_date, 'YYYYMMDD')  <![CDATA[ >= ]]> to_char(sysdate, 'YYYYMMDD'))
		 WHERE group_line_grp_cd = cast( #group_line_grp_cd# as numeric) 
		   AND tb1.approval_cd = tb2.user_cd
		   AND tb2.del_yn != 'Y'
		   AND tb2.user_cd in (SELECT REGEXP_SUBSTR(approval_user, '[^,]+', 1, LEVEL) AS SUBSTR
								FROM (select tb1.grp_alarm_userlist as approval_user
							   from $SCHEMA$.ez_approval_doc tb1,
									$SCHEMA$.ez_doc_master tb2
							   where tb1.doc_cd = tb2.doc_cd
								 and tb1.dept_nm = 'GROUP'
								 and seq = tb2.cur_approval_seq 
								 and tb1.doc_cd =  #doc_cd#)
								CONNECT BY LEVEL <![CDATA[ <= ]]>  LENGTH(REGEXP_REPLACE(approval_user, '[^,]+', ''))+1)

	</select>
	
	<select id="docApprovalStartCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > docApprovalStartCnt */
		SELECT count(*) as total_count
		  FROM $SCHEMA$.ez_doc_master
		 WHERE doc_cd = #doc_cd#
		 	
		AND LENGTH(jobgroup_id) > 1
		   
	</select>

	<!-- 이미 결재 진행중인 문서 체크  -->
	<select id="docApprovalStartChk" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > docApprovalStartChk */
		SELECT LISTAGG(doc_cd,',') WITHIN group(ORDER BY doc_cd) as doc_cd
		FROM $SCHEMA$.ez_doc_master
		WHERE doc_cd IN (
							SELECT
							TRIM(REGEXP_SUBSTR(#doc_cd#, '[^\\|]+', 1, LEVEL)) AS doc_cd
							FROM dual
							CONNECT BY LEVEL <![CDATA[ <= ]]> REGEXP_COUNT(#doc_cd#, '\\|') + 1
						)

		AND LENGTH(jobgroup_id) > 1
		<!-- AND length(jobgroup_id) - length(replace(jobgroup_id, 'A' , '')) > 1  -->

	</select>

	<select id="curApprovalCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > curApprovalCnt */
		SELECT tb1.seq AS approval_seq, tb1.approval_gb
		 FROM $SCHEMA$.EZ_APPROVAL_DOC tb1
		  	INNER JOIN $SCHEMA$.EZ_DOC_MASTER tb3 ON tb1.doc_cd = tb3.doc_cd
		  	LEFT OUTER JOIN $SCHEMA$.EZ_USER tb2 ON tb1.user_cd = tb2.user_cd
		 WHERE tb1.doc_cd = #doc_cd#
		   AND tb1.user_cd = tb2.user_cd
		   AND tb1.doc_cd = tb3.doc_cd
		   AND tb1.approval_cd = '01'
		   AND tb1.seq = tb3.cur_approval_seq
		   AND (
				tb1.user_cd = (CASE WHEN tb1.dept_nm = 'GROUP' THEN '' ELSE #s_user_cd# END)
				OR
				(tb2.absence_user_cd = $s_user_cd$
				 AND TO_CHAR(tb2.absence_start_date, 'yyyy-mm-dd') <![CDATA[ <= ]]> TO_CHAR(CURRENT_DATE, 'yyyy-mm-dd')
				 AND TO_CHAR(tb2.absence_end_date, 'yyyy-mm-dd') <![CDATA[ >= ]]> TO_CHAR(CURRENT_DATE, 'yyyy-mm-dd')
				)
				OR ($s_user_cd$ IN (SELECT a.approval_cd FROM $SCHEMA$.EZ_GROUP_APPROVAL_LINE a WHERE a.group_line_grp_cd = tb1.user_cd and tb1.dept_nm = 'GROUP'))
				)
	</select>
	
	<select id="docUserInfo" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > docUserInfo */
		SELECT tb2.user_id AS user_id_1, tb2.user_nm AS user_nm_1, tb1.dept_nm AS dept_nm_1, tb1.duty_nm AS duty_nm_1, 
			   tb2.user_hp AS user_hp_1, tb2.user_tel AS user_tel_1, tb2.user_email AS user_email_1
		  FROM $SCHEMA$.EZ_DOC_MASTER tb1, $SCHEMA$.EZ_USER tb2
		 WHERE tb1.doc_cd = #doc_cd#
		   AND tb1.user_cd = tb2.user_cd
	</select>
	
	<select id="tableUploadList" resultClass="Doc06Bean" parameterClass="java.util.Map">
	/* ORACLE_T > tableUploadList */
		SELECT ( CASE WHEN INSTR(data_center, ',') > 0
                     THEN SUBSTR(data_center, INSTR(data_center, ',')+1, LENGTH(data_center))
                     ELSE data_center END ) AS data_center, table_name, job_name 
           FROM (
              SELECT data_center, table_name, tb2.job_name 
                FROM $SCHEMA$.EZ_DOC_MASTER tb1, $SCHEMA$.EZ_DOC_01 tb2
               WHERE 1 =1   
                 AND tb1.doc_cd = tb2.doc_cd
                 AND TO_CHAR(tb1.apply_date, 'YYYYMMDD') = TO_CHAR(now(), 'YYYYMMDD')
                 
                 UNION
                 
              SELECT data_center, table_name , tb2.job_name 
                FROM $SCHEMA$.EZ_DOC_MASTER tb1, $SCHEMA$.EZ_DOC_03 tb2
               WHERE 1 =1 
                 AND tb1.doc_cd = tb2.doc_cd
                 AND TO_CHAR(tb1.apply_date, 'YYYYMMDD') = TO_CHAR(now(), 'YYYYMMDD')
                 
                 UNION
                 
              SELECT data_center, table_name , tb2.job_name 
                FROM $SCHEMA$.EZ_DOC_MASTER tb1, $SCHEMA$.EZ_DOC_04 tb2
               WHERE 1 =1 
                 AND tb1.doc_cd = tb2.doc_cd
                 AND TO_CHAR(tb1.apply_date, 'YYYYMMDD') = TO_CHAR(now(), 'YYYYMMDD')
                 
                 UNION
                 
              SELECT data_center, before_table_name AS table_name, tb2.job_name 
                FROM $SCHEMA$.EZ_DOC_MASTER tb1, $SCHEMA$.EZ_DOC_04 tb2
               WHERE 1 =1 
                 AND tb1.doc_cd = tb2.doc_cd
                 AND TO_CHAR(tb1.apply_date, 'YYYYMMDD') = TO_CHAR(now(), 'YYYYMMDD')
                 
                 UNION
                 
              SELECT (SELECT data_center FROM $SCHEMA$.EZ_DOC_06 WHERE doc_cd = tb1.doc_cd) AS data_center
                     , tb2.application || '_' || nvl(SUBSTR(tb2.time_from,0,2),'_00') AS table_name, tb2.job_name 
                FROM $SCHEMA$.EZ_DOC_MASTER tb1, $SCHEMA$.EZ_DOC_06_DETAIL tb2
               WHERE 1 =1 
                 AND tb1.doc_cd = tb2.doc_cd
                 AND TO_CHAR(tb1.apply_date, 'YYYYMMDD') = TO_CHAR(now(), 'YYYYMMDD')
                 AND substr(tb2.job_name,3,1)  != 'S'
               	 AND substr(tb2.job_name,3,1)  != 'O'
                 AND substr(tb2.job_name,3,1)  != 'F'
                 
                 UNION
                 
              SELECT (SELECT data_center FROM $SCHEMA$.EZ_DOC_06 WHERE doc_cd = tb1.doc_cd) AS data_center
                     , 'ONDEMAND' AS table_name, tb2.job_name
                FROM $SCHEMA$.EZ_DOC_MASTER tb1, $SCHEMA$.EZ_DOC_06_DETAIL tb2
               WHERE 1 =1 
                 AND tb1.doc_cd = tb2.doc_cd
                 AND TO_CHAR(tb1.apply_date, 'YYYYMMDD') = TO_CHAR(now(), 'YYYYMMDD')
                 AND substr(tb2.job_name,3,1)  = 'S'
                 
                 UNION
                 
              SELECT (SELECT data_center FROM $SCHEMA$.EZ_DOC_06 WHERE doc_cd = tb1.doc_cd) AS data_center
                     , 'OPENDAILY' AS table_name, tb2.job_name
                FROM $SCHEMA$.EZ_DOC_MASTER tb1, $SCHEMA$.EZ_DOC_06_DETAIL tb2
               WHERE 1 =1 
                 AND tb1.doc_cd = tb2.doc_cd
                 AND TO_CHAR(tb1.apply_date, 'YYYYMMDD') = TO_CHAR(now(), 'YYYYMMDD')
                 AND substr(tb2.job_name,3,1)  = 'O'
                 
                 UNION
                 
              SELECT (SELECT data_center FROM $SCHEMA$.EZ_DOC_06 WHERE doc_cd = tb1.doc_cd) AS data_center
                     , 'FREQUENCY' AS table_name, tb2.job_name
                FROM $SCHEMA$.EZ_DOC_MASTER tb1, $SCHEMA$.EZ_DOC_06_DETAIL tb2
               WHERE 1 =1 
                 AND tb1.doc_cd = tb2.doc_cd
                 AND TO_CHAR(tb1.apply_date, 'YYYYMMDD') = TO_CHAR(now(), 'YYYYMMDD')
                 AND substr(tb2.job_name,3,1)  = 'S'                 
                  ) AS tb1
	</select>
	
	<select id="chkDefTablesLockCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkDefTablesLockCnt */
		SELECT COUNT(*) AS total_count 
		  FROM DEF_TABLES
		 WHERE <!-- modified = '1'  -->
			sync_state NOT IN ('Synchronized','Synchronization Error')
		    AND sched_table = #table_name#
		    AND data_center = ( CASE WHEN INSTR(#data_center#, ',') > 0
 									  		   THEN SUBSTR(#data_center#, INSTR(#data_center#, ',')+1, LENGTH(#data_center#))
								     			ELSE #data_center# END )
	</select>
	<select id="srJobOrderInfo" resultClass="JobMapperBean" parameterClass="java.util.Map">
	/* ORACLE_T > srJobOrderInfo */
		SELECT tb1.job, tb3.sched_table,
		    ( CASE WHEN INSTR(tb1.data_center, ',') > 0
		      THEN SUBSTR(tb1.data_center, INSTR(tb1.data_center, ',')+1, LENGTH(tb1.data_center))
 			  ELSE tb1.data_center END ) as data_center
	  	FROM $SCHEMA$.EZ_JOB_MAPPER tb1, def_job tb2, def_tables tb3
		WHERE 1 = 1
		and tb1.job = tb2.job_name
		and tb2.table_id = tb3.table_id
		and ( CASE WHEN INSTR(tb1.data_center, ',') > 0
		      THEN SUBSTR(tb1.data_center, INSTR(tb1.data_center, ',')+1, LENGTH(tb1.data_center))
 			  ELSE tb1.data_center END ) = tb3.data_center
   		AND tb1.srNo = #sr_id#
	</select>
	
	<select id="chkPostApprovalLineCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkPostApprovalLineCnt */
		SELECT COUNT(*) AS total_count
		  FROM $SCHEMA$.EZ_APPROVAL_DOC
		 WHERE doc_cd = #doc_cd# 
		   AND approval_type = '01'
	</select>
	
	<parameterMap id="spDoc08PrcMap" class="java.util.Map">
		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		
		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="jobgroup_id"			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="title" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="content" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="data_center" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="table_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="application" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="group_name" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="group_status" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="description" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="order_date" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="from_time" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="data_center_name"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="developer"				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="post_approval_time" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		
		<parameter property="s_user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />	
		<parameter property="s_user_ip" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cds" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		
		<parameter property="grp_approval_userList" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_alarm_userList" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="order_id"	 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="post_approval_yn"	 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spDoc08Prc" resultClass="java.util.List" parameterMap="spDoc08PrcMap">
		{ call $SCHEMA$.SP_EZ_DOC_08_PRC	( 	?, ?, ?, ?, ?, 
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?
							 			)
		}
	</procedure>
	
	<select id="forecastDocList" resultClass="DocInfoBean" parameterClass="java.util.Map">
	/* ORACLE_T > forecastDocList */
		select 
		 t1.doc_cd 
		 ,t1.user_cd
		 ,t1.apply_cd 
		 ,t1.state_cd
		 ,t1.del_yn
		 ,t1.draft_date 
		 ,t1.ins_date 
		 ,t2.user_nm
		 ,(select dept_nm from $SCHEMA$.ez_dept where dept_cd = t2.dept_cd) as dept_nm
		 ,t3.data_center 
		 ,t3.title 
		 ,t3.table_name 
		 ,t3.application 
		 ,t3.group_name 
		 ,t3.job_name 
		 ,t3.description 
		 ,t3.order_date as odate
		 ,t3.from_time 
		 ,t3.after_status 
		 ,( CASE WHEN INSTR(t3.data_center, ',') > 0 
		 		THEN (SELECT scode_nm FROM $SCHEMA$.EZ_SCODE WHERE scode_cd = SUBSTR(t3.data_center, 1, INSTR(t3.data_center, ',')-1)) 
				ELSE t3.data_center END ) AS data_center_name
		,to_char(t1.apply_date,'YYYY/MM/DD HH24:MI:SS') as apply_date
		,(SELECT (select user_nm from $SCHEMA$.ez_user where user_cd = A.udt_user_cd)
			FROM $SCHEMA$.EZ_APPROVAL_DOC A
			WHERE A.DOC_CD = T1.DOC_CD
				AND A.SEQ = (SELECT MAX(SEQ) FROM $SCHEMA$.EZ_APPROVAL_DOC WHERE DOC_CD = T1.DOC_CD AND APPROVAL_CD = '02')) as approval_user_nm
		,(SELECT TO_CHAR(A.APPROVAL_DATE,'YYYY/MM/DD HH24:MI:SS')
			FROM $SCHEMA$.EZ_APPROVAL_DOC A
			WHERE A.DOC_CD = T1.DOC_CD
				AND A.SEQ = (SELECT MAX(SEQ) FROM $SCHEMA$.EZ_APPROVAL_DOC WHERE DOC_CD = T1.DOC_CD AND APPROVAL_CD = '02')) as approval_date
		,(SELECT (select user_nm from $SCHEMA$.ez_user where user_cd = A.udt_user_cd)
			FROM $SCHEMA$.EZ_APPROVAL_DOC A 
			WHERE A.DOC_CD = T1.DOC_CD AND A.APPROVAL_CD = '04') as reject_user_nm
		,(SELECT TO_CHAR(A.APPROVAL_DATE,'YYYY/MM/DD HH24:MI:SS') FROM $SCHEMA$.EZ_APPROVAL_DOC A  WHERE A.DOC_CD = T1.DOC_CD AND A.APPROVAL_CD = '04') as reject_date
		,(SELECT A.approval_comment FROM $SCHEMA$.EZ_APPROVAL_DOC A  WHERE A.DOC_CD = T1.DOC_CD AND A.APPROVAL_CD = '04') as reject_comment
		from $SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.ez_user t2, $SCHEMA$.ez_doc_08 t3
		
		where 1=1
		
		and t1.user_cd = t2.user_cd
		and t1.doc_cd = t3.doc_cd
		and t1.del_yn = 'N'
		<isNotEmpty prepend="and" property="job_name">
			t3.job_name = #job_name# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="odate">
			t3.order_date = #odate#
		</isNotEmpty>
	</select>

	<select id="chkForecastJobCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkForecastJobCnt */
		SELECT count(*) as total_count
		from (
			SELECT job_name
			FROM $SCHEMA$.EZ_DOC_MASTER t1 , $SCHEMA$.ez_doc_08 t2
			where 1=1
			AND t1.doc_cd = t2.doc_cd	
			and (t1.state_cd = '01' or t1.apply_cd in ('01',null))
			and t2.job_name = #job_name#
			and t2.order_date = #order_date#
			and t2.from_time = #from_time#
			and t2.after_status = #group_status#
		) t
	</select>
	
	<select id="chkApprovalStatus" resultClass="DocInfoBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkApprovalStatus */
		select state_cd, del_yn, cur_approval_seq, apply_cd
		from $SCHEMA$.EZ_DOC_MASTER 
		where doc_cd = #doc_cd#
	</select>
	<select id="chkGroupJobCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > chkGroupJobCnt */
		SELECT count(1) as total_count
		from $SCHEMA$.EZ_JOBGROUP_JOB
		where 1=1
		and job_name = #job_name#
		and data_center = #data_center#
	</select>

	<select id="checkCalendarOrderDate" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > checkCalendarOrderDate */

	  	   SELECT SUBSTR((days_1 || days_2), to_number(TO_date(#cal_date#, 'yyyymmdd') - TO_date(substr(#cal_date#,1,4)||'01'||'01', 'yyyymmdd')) +1, 1 ) AS days_cnt
	  	    FROM df_years
	  	 WHERE data_center = ( CASE WHEN INSTR(#data_center#, ',') > 0
 									  		   THEN SUBSTR(#data_center#, INSTR(#data_center#, ',')+1, LENGTH(#data_center#))
								     			ELSE #data_center# END )
	  	   AND calendar = #days_cal#
	  	   AND year = substr(#cal_date#,1,4)

	</select>

	<select id="jobDefCheck" resultClass="Doc01Bean" parameterClass="java.util.Map">
		/* ORACLE_T > jobDefCheck */
		select job_name
		  from def_job t1, def_tables t2
		 where t1.table_id = t2.table_id
		   and t1.job_name = #job_name#
	
		<!-- data center 가 다른 동일한 작업명이 존재할 경우 오류 발생하기 때문에 data_center 파라미터 추가 (2023.11.07 강명준) -->
		<isNotEmpty prepend="and" property="data_center">
			t2.data_center = ( CASE WHEN INSTR(#data_center#, ',') > 0
									THEN SUBSTR(#data_center#, INSTR(#data_center#, ',')+1, LENGTH(#data_center#))
							 	    ELSE #data_center# END )
		</isNotEmpty>

		<isNotEmpty prepend="and" property="p_sched_table">
        	 parent_table = #p_sched_table#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_application_of_def">
              application = #p_application_of_def#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="p_group_name_of_def">
             group_name = #p_group_name_of_def#
		</isNotEmpty>

	</select>

	<select id="approvalNotiInfo" resultClass="DocInfoBean" parameterClass="java.util.Map">
	/* ORACLE_T > approvalNotiInfo */
		SELECT t1.user_cd, post_approval_yn, t1.main_doc_cd, t1.state_cd
				,(case when t1.doc_gb='01' then (select job_name from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
						when t1.doc_gb='02' then (select job_name from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
						when t1.doc_gb='03' then (select job_name from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
						when t1.doc_gb='04' then (select job_name from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
						when t1.doc_gb='05' then (select job_name from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
						when t1.doc_gb='06' then (select job_name from $SCHEMA$.ez_doc_06_detail where doc_cd=t1.doc_cd and seq = 1)
						when t1.doc_gb='07' then (select job_name from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
				 		when t1.doc_gb='08' then (select job_name from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					    when t1.doc_gb='09' then (select job_name from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
				    	WHEN t1.doc_gb='10' THEN (SELECT job_name FROM $SCHEMA$.EZ_doc_10 WHERE doc_cd = t1.doc_cd)
				 		else '' end) AS job_name

				,(case  when t1.doc_gb='05' AND t1.doc_group_id IS NOT NULL THEN '05G' ELSE t1.doc_gb END) AS doc_gb

				,(case when t1.doc_gb='01' then (select data_center from $SCHEMA$.EZ_doc_01 where doc_cd=t1.doc_cd)
						when t1.doc_gb='02' then (select data_center from $SCHEMA$.EZ_doc_02 where doc_cd=t1.doc_cd)
						when t1.doc_gb='03' then (select data_center from $SCHEMA$.EZ_doc_03 where doc_cd=t1.doc_cd)
						when t1.doc_gb='04' then (select data_center from $SCHEMA$.EZ_doc_04 where doc_cd=t1.doc_cd)
						when t1.doc_gb='05' then (select data_center from $SCHEMA$.EZ_doc_05 where doc_cd=t1.doc_cd)
						when t1.doc_gb='06' then (select data_center from $SCHEMA$.EZ_doc_06 where doc_cd=t1.doc_cd)
						when t1.doc_gb='07' then (select data_center from $SCHEMA$.EZ_doc_07 where doc_cd=t1.doc_cd)
				        when t1.doc_gb='08' then (select data_center from $SCHEMA$.EZ_doc_08 where doc_cd=t1.doc_cd)
					    when t1.doc_gb='09' then (select data_center from $SCHEMA$.EZ_doc_09 where doc_cd=t1.doc_cd)
				   		WHEN t1.doc_gb='10' THEN (SELECT data_center FROM $SCHEMA$.EZ_doc_10 WHERE doc_cd = t1.doc_cd)
				        else '' end) AS data_center
			   ,(case  when t1.doc_gb='05' then (select count(*) from $SCHEMA$.ez_doc_master where main_doc_cd=t1.doc_cd)
					   when t1.doc_gb='09' then (select count(*) from $SCHEMA$.ez_doc_master where main_doc_cd=t1.doc_cd)
					   else 0 end) AS doc_cnt
				, (case when t1.doc_gb='05' and t1.doc_group_id IS NOT NULL then (SELECT count(*) FROM $SCHEMA$.ez_doc_master WHERE MAIN_DOC_CD = t1.doc_cd AND APPLY_CD = '02')
				 		when t1.doc_gb='09' then (SELECT count(*) FROM $SCHEMA$.ez_doc_master WHERE MAIN_DOC_CD = t1.doc_cd AND APPLY_CD = '02')
				 		else (SELECT count(*) FROM $SCHEMA$.ez_doc_master WHERE doc_cd = t1.doc_cd AND APPLY_CD = '02') end) AS apply_success_cnt
				, (case when t1.doc_gb='05' and t1.doc_group_id IS NOT NULL then (SELECT count(doc_cd) FROM $SCHEMA$.EZ_DOC_MASTER WHERE MAIN_DOC_CD=t1.doc_cd AND APPLY_CD='04')
						when t1.doc_gb='09' then (SELECT count(doc_cd) FROM $SCHEMA$.EZ_DOC_MASTER WHERE MAIN_DOC_CD=t1.doc_cd AND APPLY_CD='04')
						else (SELECT count(*) FROM $SCHEMA$.ez_doc_master WHERE doc_cd = t1.doc_cd AND APPLY_CD = '04') end) AS apply_fail_cnt

		FROM 	$SCHEMA$.EZ_DOC_MASTER t1
		WHERE 	1 = 1
		AND 	t1.del_yn = 'N'
		AND 	t1.doc_cd = #doc_cd#
	</select>

	<select id="docApprovalAlreadyCnt" resultClass="CommonBean" parameterClass="java.util.Map">
	/* ORACLE_T > docApprovalAlreadyCnt */
		SELECT COUNT(*) as total_count
		FROM $SCHEMA$.EZ_APPROVAL_DOC
		WHERE doc_cd = #doc_cd#
		  AND seq = #approval_seq#
		  AND approval_date IS NOT NULL
	</select>

	<!-- 일괄요청서  23.09.20 김은희-->
	<parameterMap id="spDoc09PrcMap" class="java.util.Map">
		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="title" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="data_center" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_gb" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="apply_date" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="post_approval_yn"	 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="grp_approval_userList" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_alarm_userList" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

	</parameterMap>
	<procedure id="spDoc09Prc" resultClass="java.util.List" parameterMap="spDoc09PrcMap">
		{ call $SCHEMA$.SP_EZ_DOC_09_PRC	( 	?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?
												)
		}
	</procedure>

	<select id="groupDocInfo" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > groupDocInfo */
		select 	t1.doc_cd, t2.job_name, t2.title, t2.data_center, t3.user_nm,
				  case when trim(t1.dept_nm) is not null then t1.dept_nm else (select dept_nm from $SCHEMA$.EZ_dept where dept_cd = t3.dept_cd ) end AS dept_nm,
				  case when trim(t1.duty_nm) is not null then t1.duty_nm else (select duty_nm from $SCHEMA$.EZ_duty where duty_cd = t3.duty_cd ) end AS duty_nm
		from $SCHEMA$.EZ_DOC_MASTER t1, $SCHEMA$.EZ_DOC_09 t2, $SCHEMA$.EZ_USER t3
		where 1=1
		  and t1.del_yn = 'N'
		  and t1.user_cd = t3.user_cd
		  and t1.doc_cd = t2.doc_cd
		  and t1.doc_cd = #doc_cd#

	</select>
	
	<!-- 오류처리 결재 23.09.20 김은희-->
	<parameterMap id="spDoc10PrcMap" class="java.util.Map">
		<parameter property="r_code" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />

		<parameter property="flag" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="data_center" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="job_name" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_gb" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="alarm_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="error_description"		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="post_approval_yn"	 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="main_doc_cd"	 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="grp_approval_userList" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="grp_alarm_userList" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

		<parameter property="s_user_cd" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />

	</parameterMap>
	<procedure id="spDoc10Prc" resultClass="java.util.List" parameterMap="spDoc10PrcMap">
		{ call $SCHEMA$.SP_EZ_DOC_10_PRC	( 	?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?
												)
		}
	</procedure>

	<select id="folderUserList" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > folderUserList */
	SELECT *
	FROM(
		SELECT 
			(SELECT dept_nm FROM $SCHEMA$.EZ_DEPT WHERE dept_cd = c.dept_cd) AS dept_nm
			,(SELECT duty_nm from $SCHEMA$.EZ_duty WHERE duty_cd = c.duty_cd ) AS duty_nm
			,c.user_nm
			,c.user_id 
		FROM $SCHEMA$.EZ_APP_GRP_CODE A
		LEFT OUTER JOIN $SCHEMA$.EZ_USER_FOLDER b
			ON a.GRP_ENG_NM = b.folder_auth
			AND b.data_center = #p_data_center#
		LEFT OUTER JOIN $SCHEMA$.ez_user c
			ON b.user_cd = c.user_cd
		WHERE 1=1 
			and a.grp_depth = '1'
			and a.grp_eng_nm = #p_grp_eng_nm#
			and c.del_yn = #p_del_yn#
		)tb
		WHERE 1=1
			<isNotEmpty property="p_ser_user_nm">
				<isEqual property="p_ser_gubun" compareValue="user_nm">
					and UPPER(user_nm) LIKE UPPER('%'||#p_ser_user_nm#||'%') 
				</isEqual>
				<isEqual property="p_ser_gubun" compareValue="dept_nm">
					and UPPER(dept_nm) LIKE UPPER('%'||#p_ser_user_nm#||'%')
				</isEqual>
				<isEqual property="p_ser_gubun" compareValue="user_id">
					and UPPER(user_id) LIKE UPPER('%'||#p_ser_user_nm#||'%')
				</isEqual>
			</isNotEmpty>
	</select>
	
	<!-- alarmInfo -->
	<select id="alarmInfo" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > alarmInfo */
		
		select
			alarm_seq as row_num
			, alarm_seq
			, alarm_standard
			, alarm_min
			, alarm_max
			, alarm_unit
			, alarm_time
			, alarm_over
			, alarm_over_time
		from $SCHEMA$.EZ_ALARM_INFO
		where 1=1
		
		ORDER BY row_num
	</select>	
	
	<!-- spAlarmInfoPrc -->
	<parameterMap id="spAlarmInfoPrcMap" class="java.util.Map">
		<parameter property="r_code" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		
		<parameter property="flag" 						javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="row_num" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="alarm_standard" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="alarm_min" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="alarm_max" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="alarm_unit" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="alarm_time" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="alarm_over" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="alarm_over_time" 			javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		
		<parameter property="s_user_cd" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="s_user_ip" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spAlarmInfoPrc" resultClass="java.util.List" parameterMap="spAlarmInfoPrcMap">
		{ call $SCHEMA$.SP_EZ_ALARMINFO_PRC( 	?, ?, ?, ?, ?,
												?, ?, ?, ?, ?,
												?, ?, ?
							 					) 
		}
	</procedure>
	
	<select id="doc09_gb" resultClass="Doc01Bean" parameterClass="java.util.Map">
	/* ORACLE_T > doc09_gb */
		<![CDATA[
	 		select 
	 			t1.doc_cd 
	 			,t1.doc_gb 
	 		from $SCHEMA$.EZ_DOC_MASTER t1 
	 		LEFT OUTER JOIN $SCHEMA$.ez_doc_01 t2
	 			ON t1.doc_cd = t2.doc_cd
	 		LEFT OUTER JOIN $SCHEMA$.ez_doc_04 t3 
	 			ON t1.doc_cd = t3.doc_cd	 
	 		where 1=1 
	 		and t1.del_yn = 'N' 
	 		and t1.doc_cd = #doc_cd# 
	 		and (t2.job_name = #job_name# or t3.job_name = #job_name#)
		]]>
		
	</select>
	
	<select id="dDelUserJobMapper" resultClass="UserBean" parameterClass="java.util.Map">
	/* ORACLE_T > dDelUserJobMapper */
	  <![CDATA[
	    SELECT USER_CD
	    FROM $SCHEMA$.EZ_USER
	    WHERE USER_ID = #user_id#
	  ]]>
	</select>
	
	<update id="dUpdateJobMapper" parameterClass="java.util.Map">
	/* ORACLE_T > dUpdateJobMapper */
	  UPDATE $SCHEMA$.EZ_JOB_MAPPER
			SET 
			    USER_CD_1 = CASE WHEN USER_CD_1 = CAST(#user_cd# AS INTEGER) THEN NULL ELSE USER_CD_1 END,
			    USER_CD_2 = CASE WHEN USER_CD_2 = CAST(#user_cd# AS INTEGER) THEN NULL ELSE USER_CD_2 END,
			    USER_CD_3 = CASE WHEN USER_CD_3 = CAST(#user_cd# AS INTEGER) THEN NULL ELSE USER_CD_3 END,
			    USER_CD_4 = CASE WHEN USER_CD_4 = CAST(#user_cd# AS INTEGER) THEN NULL ELSE USER_CD_4 END,
			    USER_CD_5 = CASE WHEN USER_CD_5 = CAST(#user_cd# AS INTEGER) THEN NULL ELSE USER_CD_5 END,
			    USER_CD_6 = CASE WHEN USER_CD_6 = CAST(#user_cd# AS INTEGER) THEN NULL ELSE USER_CD_6 END,
			    USER_CD_7 = CASE WHEN USER_CD_7 = CAST(#user_cd# AS INTEGER) THEN NULL ELSE USER_CD_7 END,
			    USER_CD_8 = CASE WHEN USER_CD_8 = CAST(#user_cd# AS INTEGER) THEN NULL ELSE USER_CD_8 END,
			    USER_CD_9 = CASE WHEN USER_CD_9 = CAST(#user_cd# AS INTEGER) THEN NULL ELSE USER_CD_9 END,
			    USER_CD_10 = CASE WHEN USER_CD_10 = CAST(#user_cd# AS INTEGER) THEN NULL ELSE USER_CD_10 END
			WHERE 
			    USER_CD_1 = CAST(#user_cd# AS INTEGER)
			    OR USER_CD_2 = CAST(#user_cd# AS INTEGER)
			    OR USER_CD_3 = CAST(#user_cd# AS INTEGER)
			    OR USER_CD_4 = CAST(#user_cd# AS INTEGER)
			    OR USER_CD_5 = CAST(#user_cd# AS INTEGER)
			    OR USER_CD_6 = CAST(#user_cd# AS INTEGER)
			    OR USER_CD_7 = CAST(#user_cd# AS INTEGER)
			    OR USER_CD_8 = CAST(#user_cd# AS INTEGER)
			    OR USER_CD_9 = CAST(#user_cd# AS INTEGER)
			    OR USER_CD_10 = CAST(#user_cd# AS INTEGER)

	</update>
	
	<select id="jobMapperMFTInfo" resultClass="JobMapperMFTBean" parameterClass="java.util.Map">
		SELECT *
		FROM $SCHEMA$.EZ_DOC_SETVAR
		WHERE doc_cd = #doc_cd#
	</select>
	
	<!-- spDocSetvarPrc -->
	<parameterMap id="spDocSetvarPrcMap" class="java.util.Map">
		<parameter property="r_code" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		<parameter property="r_msg" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
		
		<parameter property="flag" 						javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="doc_cd" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="seq" 						javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="var_name" 					javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
		<parameter property="var_value" 				javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
	</parameterMap>
	<procedure id="spDocSetvarPrc" resultClass="java.util.List" parameterMap="spDocSetvarPrcMap">
		{ call $SCHEMA$.SP_EZ_DOC_SETVAR_PRC( 	?, ?, ?, ?, ?,
												?, ? 
											) 
		}
	</procedure>
</sqlMap>